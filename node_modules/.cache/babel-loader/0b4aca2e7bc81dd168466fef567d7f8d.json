{"ast":null,"code":"import isWeekend from '../isWeekend/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name addBusinessDays\n * @category Day Helpers\n * @summary Add the specified number of business days (mon - fri) to the given date.\n *\n * @description\n * Add the specified number of business days (mon - fri) to the given date, ignoring weekends.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of business days to be added\n * @returns {Date} the new date with the business days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 business days to 1 September 2014:\n * var result = addBusinessDays(new Date(2014, 8, 1), 10)\n * //=> Mon Sep 15 2014 00:00:00 (skipped weekend days)\n */\n\nexport default function addBusinessDays(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) return new Date(NaN);\n  var hours = date.getHours();\n  var numWeekDays = 0;\n\n  while (numWeekDays < amount) {\n    date.setDate(date.getDate() + 1);\n    date.setHours(hours);\n    if (!isWeekend(date)) numWeekDays++;\n  }\n\n  return date;\n}","map":{"version":3,"sources":["D:/text video/geniehut-Geni-App-Code/geniehut-Geni-App-Code/front-end/node_modules/date-fns/esm/addBusinessDays/index.js"],"names":["isWeekend","toDate","toInteger","addBusinessDays","dirtyDate","dirtyAmount","arguments","length","TypeError","date","amount","isNaN","Date","NaN","hours","getHours","numWeekDays","setDate","getDate","setHours"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,uBAAtB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA;;;;;;;;;;;;;;;;;;;AAmBA,eAAe,SAASC,eAAT,CAAyBC,SAAzB,EAAoCC,WAApC,EAAiD;AAC9D,MAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,UAAM,IAAIC,SAAJ,CAAc,oCAAoCF,SAAS,CAACC,MAA9C,GAAuD,UAArE,CAAN;AACD;;AAED,MAAIE,IAAI,GAAGR,MAAM,CAACG,SAAD,CAAjB;AACA,MAAIM,MAAM,GAAGR,SAAS,CAACG,WAAD,CAAtB;AACA,MAAIM,KAAK,CAACD,MAAD,CAAT,EAAmB,OAAO,IAAIE,IAAJ,CAASC,GAAT,CAAP;AACnB,MAAIC,KAAK,GAAGL,IAAI,CAACM,QAAL,EAAZ;AACA,MAAIC,WAAW,GAAG,CAAlB;;AAEA,SAAOA,WAAW,GAAGN,MAArB,EAA6B;AAC3BD,IAAAA,IAAI,CAACQ,OAAL,CAAaR,IAAI,CAACS,OAAL,KAAiB,CAA9B;AACAT,IAAAA,IAAI,CAACU,QAAL,CAAcL,KAAd;AACA,QAAI,CAACd,SAAS,CAACS,IAAD,CAAd,EAAsBO,WAAW;AAClC;;AAED,SAAOP,IAAP;AACD","sourcesContent":["import isWeekend from '../isWeekend/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name addBusinessDays\n * @category Day Helpers\n * @summary Add the specified number of business days (mon - fri) to the given date.\n *\n * @description\n * Add the specified number of business days (mon - fri) to the given date, ignoring weekends.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of business days to be added\n * @returns {Date} the new date with the business days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 business days to 1 September 2014:\n * var result = addBusinessDays(new Date(2014, 8, 1), 10)\n * //=> Mon Sep 15 2014 00:00:00 (skipped weekend days)\n */\n\nexport default function addBusinessDays(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) return new Date(NaN);\n  var hours = date.getHours();\n  var numWeekDays = 0;\n\n  while (numWeekDays < amount) {\n    date.setDate(date.getDate() + 1);\n    date.setHours(hours);\n    if (!isWeekend(date)) numWeekDays++;\n  }\n\n  return date;\n}"]},"metadata":{},"sourceType":"module"}