{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetUserwalletInfo);\n\n/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_USERWALLETINFO, SET_USERWALLETINFO } from '../actions';\nimport { apiUrl, appName } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\nexport var watchGetUserwalletInfo =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetUserwalletInfo() {\n  return _regeneratorRuntime.wrap(function watchGetUserwalletInfo$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery(GET_USERWALLETINFO, workerGetUserwalletInfo);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, watchGetUserwalletInfo);\n});\n\nfunction workerGetUserwalletInfo(_ref) {\n  var formPayload, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetUserwalletInfo$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          formPayload = _ref.formPayload;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(getUserwalletInfo, formPayload);\n\n        case 4:\n          result = _context2.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context2.next = 9;\n          return put({\n            type: SET_USERWALLETINFO,\n            value: resultArr\n          });\n\n        case 9:\n          _context2.next = 14;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log('get data failed');\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked, null, [[1, 11]]);\n}\n\nfunction getUserwalletInfo(formPayload) {\n  return Axios.post(apiUrl + 'user/userwalletinfo', formPayload);\n}","map":{"version":3,"sources":["D:/text video/geniehut-Geni-App-Code/geniehut-Geni-App-Code/front-end/src/sagas/userwalletinfo.js"],"names":["workerGetUserwalletInfo","takeEvery","call","put","GET_USERWALLETINFO","SET_USERWALLETINFO","apiUrl","appName","Axios","cookie","watchGetUserwalletInfo","formPayload","getUserwalletInfo","result","resultArr","push","data","type","value","console","log","post"],"mappings":";;;;yBAUUA,uB;;AAVV;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,QAAuD,YAAvD;AACA,SAAQC,MAAR,EAAeC,OAAf,QAA6B,6BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,OAAO,IAAMC,sBAAsB;AAAA;AAAA,yBAAE,SAAxBA,sBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AACnC,iBAAMT,SAAS,CAACG,kBAAD,EAAqBJ,uBAArB,CAAf;;AADmC;AAAA;AAAA;AAAA;AAAA;AAAA,KAAxBU,sBAAwB;AAAA,CAAF,CAA5B;;AAGP,SAAUV,uBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoCW,UAAAA,WAApC,QAAoCA,WAApC;AAAA;AAAA;AAEgB,iBAAMT,IAAI,CAACU,iBAAD,EAAoBD,WAApB,CAAV;;AAFhB;AAEOE,UAAAA,MAFP;AAGKC,UAAAA,SAHL,GAGiB,EAHjB;AAICA,UAAAA,SAAS,CAACC,IAAV,CAAeF,MAAM,CAACG,IAAtB;AAJD;AAKI,iBAAMb,GAAG,CAAC;AAAEc,YAAAA,IAAI,EAAEZ,kBAAR;AAA4Ba,YAAAA,KAAK,EAAEJ;AAAnC,WAAD,CAAT;;AALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQIK,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAASR,iBAAT,CAA2BD,WAA3B,EAAwC;AACrC,SAAOH,KAAK,CAACa,IAAN,CAAWf,MAAM,GAAC,qBAAlB,EAAyCK,WAAzC,CAAP;AACF","sourcesContent":["/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_USERWALLETINFO, SET_USERWALLETINFO } from '../actions';\nimport {apiUrl,appName} from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\n\nexport const watchGetUserwalletInfo= function* () {\n  yield takeEvery(GET_USERWALLETINFO, workerGetUserwalletInfo);\n}\nfunction* workerGetUserwalletInfo({ formPayload }) {\n  try {\n\tconst result = yield call(getUserwalletInfo, formPayload);\n\tvar resultArr = [];\n\tresultArr.push(result.data);\n    yield put({ type: SET_USERWALLETINFO, value: resultArr });\n  } \n  catch {\n    console.log('get data failed');\n  }\n} \n\n\nfunction getUserwalletInfo(formPayload) {\n   return Axios.post(apiUrl+'user/userwalletinfo', formPayload);\n} \n\n\n"]},"metadata":{},"sourceType":"module"}