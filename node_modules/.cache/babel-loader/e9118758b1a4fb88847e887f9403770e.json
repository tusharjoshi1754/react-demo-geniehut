{"ast":null,"code":"import _toConsumableArray from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\src\\\\components\\\\Account\\\\GenProAddservice.js\";\n\n/* eslint-disable */\nimport React, { Component } from 'react';\nimport cookie from 'react-cookies';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport ServiceCheck from '../../common/images/accounts/service_checkbox.png';\nimport { appName, serviceImage, servicemediaImage } from \"../Config/Config\";\nimport { GET_REQUESTSERVICE, GET_PROSERVICEUPDATE } from '../../actions';\nimport noimgserv from \"../../common/images/provider.jpeg\";\n\nvar GenProAddservice =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GenProAddservice, _Component);\n\n  function GenProAddservice(props) {\n    var _this;\n\n    _classCallCheck(this, GenProAddservice);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GenProAddservice).call(this, props));\n\n    _this.handleFormSubmit = function () {\n      var formPayload = _this.state;\n\n      var qs = require('qs');\n\n      var postObject = {\n        \"app_name\": appName,\n        \"user_token\": cookie.load('UserAuthToken'),\n        \"user_services\": formPayload.user_services,\n        \"assign_code\": 'GP'\n      };\n\n      _this.props.getProServiceUpdate(qs.stringify(postObject));\n    };\n\n    _this.CheckService = function (event) {\n      var serviceArr = _toConsumableArray(_this.state.user_services);\n\n      var value = event.target.value;\n      var index = serviceArr.findIndex(function (user_services) {\n        return user_services === value;\n      });\n\n      if (index > -1) {\n        serviceArr = [].concat(_toConsumableArray(serviceArr.slice(0, index)), _toConsumableArray(serviceArr.slice(index + 1)));\n      } else {\n        serviceArr.push(value);\n      }\n\n      _this.setState({\n        user_services: serviceArr\n      });\n    };\n\n    _this.state = {\n      servicedata: [],\n      user_services: [],\n      checked: false\n    };\n\n    _this.props.getRequestService('genpro', cookie.load('UserAuthToken'));\n\n    return _this;\n  }\n\n  _createClass(GenProAddservice, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(Props) {\n      if (Props.servicedata !== this.props.servicedata) {\n        if (Props.servicedata[0].selectedvendors !== '') {\n          this.setState({\n            user_services: Props.servicedata[0].selectedvendors\n          });\n        }\n      }\n\n      if (Props.updateproservices !== this.props.updateproservices) {\n        if (Props.updateproservices[0].result_set.length > 0) {\n          window.location.href = \"/genpro-my-services\";\n        } else {\n          window.location.href = \"/genpro-my-services\";\n        }\n      }\n    }\n  }, {\n    key: \"servicelist\",\n    value: function servicelist() {\n      var _this2 = this;\n\n      var serviceArr = this.props.servicedata[0];\n\n      if (serviceArr !== undefined && serviceArr !== null) {\n        if (Object.keys(serviceArr).length > 0) {\n          var serviceDetails = serviceArr.result_set.map(function (services, serviceIndex) {\n            var imgservice = services.services_default_icon;\n            var imgsrc;\n\n            if (imgservice !== null && imgservice !== '') {\n              imgsrc = servicemediaImage + services.services_default_icon + \"\";\n            } else {\n              imgsrc = noimgserv + \"\";\n            }\n\n            var selectserv = _this2.props.servicedata[0].selectedvendors;\n\n            if (selectserv !== 'undefined' && selectserv !== null) {\n              if (selectserv.indexOf(services.services_id) !== -1) {\n                var checked = true;\n              }\n            }\n\n            return React.createElement(\"div\", {\n              className: \"asp-col\",\n              key: services.services_id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 82\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"asp-inner-box\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 83\n              },\n              __self: this\n            }, React.createElement(\"input\", {\n              type: \"checkbox\",\n              name: \"user_type_genpro\",\n              value: services.services_id,\n              onClick: _this2.CheckService.bind(_this2),\n              defaultChecked: checked ? checked : false,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84\n              },\n              __self: this\n            }), React.createElement(\"label\", {\n              className: \"asp-checkbox-label\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 85\n              },\n              __self: this\n            }, React.createElement(\"img\", {\n              src: ServiceCheck,\n              alt: \"\",\n              className: \"asp-checktik\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 86\n              },\n              __self: this\n            }), React.createElement(\"span\", {\n              className: \"default-img\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 87\n              },\n              __self: this\n            }, React.createElement(\"img\", {\n              src: imgsrc,\n              alt: \"\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 87\n              },\n              __self: this\n            })), React.createElement(\"span\", {\n              className: \"asp-caption\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 88\n              },\n              __self: this\n            }, services.services_title))));\n          });\n          return serviceDetails;\n        }\n      } else {\n        return React.createElement(\"div\", {\n          className: \"loading\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"add-service-popup-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"add-service-popup-inner-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.servicelist())), React.createElement(\"button\", {\n        className: \"btn btn_orange btn_minwid btn-width\",\n        type: \"button\",\n        onClick: this.handleFormSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Update Now\"));\n    }\n  }]);\n\n  return GenProAddservice;\n}(Component);\n\nvar mapStateTopProps = function mapStateTopProps(state) {\n  return {\n    servicedata: state.service,\n    updateproservices: state.updateproservices\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getRequestService: function getRequestService(addservice, usertoken) {\n      dispatch({\n        type: GET_REQUESTSERVICE,\n        addservice: addservice,\n        usertoken: usertoken\n      });\n    },\n    getProServiceUpdate: function getProServiceUpdate(formPayload) {\n      dispatch({\n        type: GET_PROSERVICEUPDATE,\n        formPayload: formPayload\n      });\n    }\n  };\n};\n\nexport default connect(mapStateTopProps, mapDispatchToProps)(withRouter(GenProAddservice));","map":{"version":3,"sources":["D:/text video/geniehut-Geni-App-Code/geniehut-Geni-App-Code/front-end/src/components/Account/GenProAddservice.js"],"names":["React","Component","cookie","connect","withRouter","ServiceCheck","appName","serviceImage","servicemediaImage","GET_REQUESTSERVICE","GET_PROSERVICEUPDATE","noimgserv","GenProAddservice","props","handleFormSubmit","formPayload","state","qs","require","postObject","load","user_services","getProServiceUpdate","stringify","CheckService","event","serviceArr","value","target","index","findIndex","slice","push","setState","servicedata","checked","getRequestService","Props","selectedvendors","updateproservices","result_set","length","window","location","href","undefined","Object","keys","serviceDetails","map","services","serviceIndex","imgservice","services_default_icon","imgsrc","selectserv","indexOf","services_id","bind","services_title","servicelist","mapStateTopProps","service","mapDispatchToProps","dispatch","addservice","usertoken","type"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, { Component } from 'react';\nimport cookie from 'react-cookies';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport ServiceCheck from '../../common/images/accounts/service_checkbox.png';\nimport { appName, serviceImage,servicemediaImage } from \"../Config/Config\";\nimport { GET_REQUESTSERVICE, GET_PROSERVICEUPDATE } from '../../actions';\nimport noimgserv from \"../../common/images/provider.jpeg\";\n\nclass GenProAddservice extends Component {\n  constructor(props) {\n    super(props); \n    this.state = {\n      servicedata:[],\n      user_services:[],\n      checked: false\n    }\n    this.props.getRequestService('genpro',cookie.load('UserAuthToken'));\n    }\n\n    handleFormSubmit = () => {\n\n          const formPayload = this.state;\n          var qs = require('qs');\n          var postObject = {\n          \"app_name\": appName,\n          \"user_token\" : cookie.load('UserAuthToken'),\n          \"user_services\": formPayload.user_services,\n          \"assign_code\": 'GP',\n          };\n       this.props.getProServiceUpdate(qs.stringify(postObject));\n\n  }\n\n  componentWillReceiveProps(Props){\n    if(Props.servicedata !== this.props.servicedata){\n          if(Props.servicedata[0].selectedvendors!== ''){\n            this.setState({ user_services :Props.servicedata[0].selectedvendors})\n          }\n       }\n    if(Props.updateproservices!== this.props.updateproservices){\n      if(Props.updateproservices[0].result_set.length > 0){\n         window.location.href = \"/genpro-my-services\";\n      }else{\n        window.location.href = \"/genpro-my-services\";\n     }\n    }\n }\n  CheckService = (event) =>{\n          var serviceArr = [...this.state.user_services];\n          const value = event.target.value\n          const index = serviceArr.findIndex(user_services => user_services === value);\n          if(index > -1) {\n          serviceArr = [...serviceArr.slice(0, index), ...serviceArr.slice(index + 1)]\n          } else {\n          serviceArr.push(value);\n          }\n          this.setState({user_services: serviceArr});\n  }\n\n   servicelist() {\n    var serviceArr = this.props.servicedata[0];\n    if(serviceArr!== undefined && serviceArr!== null){\n      if(Object.keys(serviceArr).length > 0) {\n         const serviceDetails = serviceArr.result_set.map((services, serviceIndex) => {\n           var imgservice =services.services_default_icon;\n           var imgsrc;\n             if(imgservice !== null && imgservice !== ''){\n              imgsrc = servicemediaImage+services.services_default_icon+\"\";\n             }else{\n                imgsrc = noimgserv+\"\";\n             }\n             var selectserv = this.props.servicedata[0].selectedvendors;\n              if(selectserv!== 'undefined' && selectserv!== null){\n                 if(selectserv.indexOf(services.services_id) !== -1){\n                  var checked = true;\n                 }\n               }\n\n            return (\n                        <div className=\"asp-col\" key={services.services_id}>\n                        <div className=\"asp-inner-box\">    \n                        <input type=\"checkbox\" name=\"user_type_genpro\" value={services.services_id}  onClick={this.CheckService.bind(this)} defaultChecked = {checked?checked:false}/>\n                        <label className=\"asp-checkbox-label\">\n                        <img src={ServiceCheck} alt=\"\" className=\"asp-checktik\" />\n                        <span className=\"default-img\"><img src={imgsrc} alt=\"\" /></span>\n                        <span className=\"asp-caption\">{services.services_title}</span>\n                        </label>\n                        </div>\n                        </div>\n                     );\n    \n     });\n      return serviceDetails;\n     }\n    } else {\n      return (<div className=\"loading\"></div>);\n    }\n  }\n  render() {\n    return (\n        <>     \n          <div className=\"add-service-popup-wrapper\">\n          <div className=\"add-service-popup-inner-wrapper\">\n          {this.servicelist()}\n          </div>\n          </div>        \n          <button className=\"btn btn_orange btn_minwid btn-width\" type=\"button\" onClick={this.handleFormSubmit.bind(this)}>Update Now\n          </button>\n        </>\n    );\n  }\n}\n\nconst mapStateTopProps = (state) => {\n  return {\n      servicedata: state.service,\n      updateproservices: state.updateproservices\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n     getRequestService: (addservice, usertoken) => {\n          dispatch({ type: GET_REQUESTSERVICE, addservice, usertoken });\n        },\n    getProServiceUpdate: (formPayload) => {\n      dispatch({ type: GET_PROSERVICEUPDATE, formPayload });\n    },\n\n  }\n}\nexport default connect(mapStateTopProps, mapDispatchToProps)(withRouter(GenProAddservice));\n"]},"metadata":{},"sourceType":"module"}