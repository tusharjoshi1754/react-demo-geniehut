{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetSearchGenPro),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetGenproCallRequest),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetFilterGenPro);\n\n/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_SEARCH_GEN_PRO, SET_SEARCH_GEN_PRO, GET_GENPROCALLREQUEST, SET_GENPROCALLREQUEST, GET_FILTER_GEN_PRO, SET_FILTER_GEN_PRO } from '../actions';\nimport { apiUrl, deliveryId, appName } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\n/* ask to call */\n\nexport var watchGetSearchGenPro =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetSearchGenPro() {\n  return _regeneratorRuntime.wrap(function watchGetSearchGenPro$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery(GET_SEARCH_GEN_PRO, workerGetSearchGenPro);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, watchGetSearchGenPro);\n});\n\nfunction workerGetSearchGenPro(_ref) {\n  var formPayload, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetSearchGenPro$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          formPayload = _ref.formPayload;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(getSearchGenPro, formPayload);\n\n        case 4:\n          result = _context2.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context2.next = 9;\n          return put({\n            type: SET_SEARCH_GEN_PRO,\n            value: resultArr\n          });\n\n        case 9:\n          _context2.next = 14;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log('login failed');\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked, null, [[1, 11]]);\n}\n\nfunction getSearchGenPro(formPayload) {\n  var qs = require('qs'); //return Axios.post(apiUrl+'genpro/searchgenpro', qs.stringify(formPayload));\n\n}\n/* get prolist callrequest data */\n\n\nexport var watchGetGenproCallRequest =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetGenproCallRequest() {\n  return _regeneratorRuntime.wrap(function watchGetGenproCallRequest$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeEvery(GET_GENPROCALLREQUEST, workerGetGenproCallRequest);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, watchGetGenproCallRequest);\n});\n\nfunction workerGetGenproCallRequest(_ref2) {\n  var qcsd_id, uri, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetGenproCallRequest$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          qcsd_id = _ref2.qcsd_id;\n          _context4.prev = 1;\n          uri = apiUrl + 'genpro/getprocallrequest?app_name=' + appName + '&qcsd_id=' + qcsd_id;\n          _context4.next = 5;\n          return call(Axios.get, uri);\n\n        case 5:\n          result = _context4.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context4.next = 10;\n          return put({\n            type: SET_GENPROCALLREQUEST,\n            value: resultArr\n          });\n\n        case 10:\n          _context4.next = 15;\n          break;\n\n        case 12:\n          _context4.prev = 12;\n          _context4.t0 = _context4[\"catch\"](1);\n          console.log('Get Page Failed');\n\n        case 15:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked2, null, [[1, 12]]);\n}\n/* get prolist filter */\n\n\nexport var watchGetFilterGenPro =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetFilterGenPro() {\n  return _regeneratorRuntime.wrap(function watchGetFilterGenPro$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeEvery(GET_FILTER_GEN_PRO, workerGetFilterGenPro);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, watchGetFilterGenPro);\n});\n\nfunction workerGetFilterGenPro(_ref3) {\n  var formPayload, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetFilterGenPro$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          formPayload = _ref3.formPayload;\n          _context6.prev = 1;\n          _context6.next = 4;\n          return call(getFilterGenPro, formPayload);\n\n        case 4:\n          result = _context6.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context6.next = 9;\n          return put({\n            type: SET_FILTER_GEN_PRO,\n            value: resultArr\n          });\n\n        case 9:\n          _context6.next = 14;\n          break;\n\n        case 11:\n          _context6.prev = 11;\n          _context6.t0 = _context6[\"catch\"](1);\n          console.log('get data failed');\n\n        case 14:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked3, null, [[1, 11]]);\n}\n\nfunction getFilterGenPro(formPayload) {\n  return Axios.post(apiUrl + 'genpro/getfiltergenpro', formPayload);\n}","map":{"version":3,"sources":["D:/text video/geniehut-Geni-App-Code/geniehut-Geni-App-Code/front-end/src/sagas/searchgenpro.js"],"names":["workerGetSearchGenPro","workerGetGenproCallRequest","workerGetFilterGenPro","takeEvery","call","put","GET_SEARCH_GEN_PRO","SET_SEARCH_GEN_PRO","GET_GENPROCALLREQUEST","SET_GENPROCALLREQUEST","GET_FILTER_GEN_PRO","SET_FILTER_GEN_PRO","apiUrl","deliveryId","appName","Axios","cookie","watchGetSearchGenPro","formPayload","getSearchGenPro","result","resultArr","push","data","type","value","console","log","qs","require","watchGetGenproCallRequest","qcsd_id","uri","get","watchGetFilterGenPro","getFilterGenPro","post"],"mappings":";;;;yBAaUA,qB;;;yBAsBAC,0B;;;yBAoBAC,qB;;AAvDV;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAAQC,kBAAR,EAA4BC,kBAA5B,EAAgDC,qBAAhD,EAAuEC,qBAAvE,EAA6FC,kBAA7F,EAAgHC,kBAAhH,QAAyI,YAAzI;AACA,SAAQC,MAAR,EAAgBC,UAAhB,EAA4BC,OAA5B,QAA2C,6BAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA;;AAEA,OAAO,IAAMC,oBAAoB;AAAA;AAAA,yBAAG,SAAvBA,oBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAClC,iBAAMd,SAAS,CAACG,kBAAD,EAAqBN,qBAArB,CAAf;;AADkC;AAAA;AAAA;AAAA;AAAA;AAAA,KAAvBiB,oBAAuB;AAAA,CAAH,CAA1B;;AAIP,SAAUjB,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkCkB,UAAAA,WAAlC,QAAkCA,WAAlC;AAAA;AAAA;AAEmB,iBAAMd,IAAI,CAACe,eAAD,EAAkBD,WAAlB,CAAV;;AAFnB;AAEUE,UAAAA,MAFV;AAGQC,UAAAA,SAHR,GAGoB,EAHpB;AAIIA,UAAAA,SAAS,CAACC,IAAV,CAAeF,MAAM,CAACG,IAAtB;AAJJ;AAKI,iBAAMlB,GAAG,CAAC;AAAEmB,YAAAA,IAAI,EAAEjB,kBAAR;AAA4BkB,YAAAA,KAAK,EAAEJ;AAAnC,WAAD,CAAT;;AALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQIK,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,SAASR,eAAT,CAAyBD,WAAzB,EAAsC;AACpC,MAAIU,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB,CADoC,CAEpC;;AACD;AAED;;;AAEA,OAAO,IAAMC,yBAAyB;AAAA;AAAA,yBAAG,SAA5BA,yBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AACvC,iBAAM3B,SAAS,CAACK,qBAAD,EAAwBP,0BAAxB,CAAf;;AADuC;AAAA;AAAA;AAAA;AAAA;AAAA,KAA5B6B,yBAA4B;AAAA,CAAH,CAA/B;;AAIP,SAAU7B,0BAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC8B,UAAAA,OAAxC,SAAwCA,OAAxC;AAAA;AAEUC,UAAAA,GAFV,GAEgBpB,MAAM,GAAC,oCAAP,GAA4CE,OAA5C,GAAoD,WAApD,GAAgEiB,OAFhF;AAAA;AAGmB,iBAAM3B,IAAI,CAACW,KAAK,CAACkB,GAAP,EAAYD,GAAZ,CAAV;;AAHnB;AAGUZ,UAAAA,MAHV;AAIQC,UAAAA,SAJR,GAIoB,EAJpB;AAKIA,UAAAA,SAAS,CAACC,IAAV,CAAeF,MAAM,CAACG,IAAtB;AALJ;AAMM,iBAAMlB,GAAG,CAAC;AAAEmB,YAAAA,IAAI,EAAEf,qBAAR;AAA+BgB,YAAAA,KAAK,EAAEJ;AAAtC,WAAD,CAAT;;AANN;AAAA;AAAA;;AAAA;AAAA;AAAA;AASIK,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;;;AAEA,OAAO,IAAMO,oBAAoB;AAAA;AAAA,yBAAG,SAAvBA,oBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAClC,iBAAM/B,SAAS,CAACO,kBAAD,EAAqBR,qBAArB,CAAf;;AADkC;AAAA;AAAA;AAAA;AAAA;AAAA,KAAvBgC,oBAAuB;AAAA,CAAH,CAA1B;;AAIP,SAAUhC,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkCgB,UAAAA,WAAlC,SAAkCA,WAAlC;AAAA;AAAA;AAEiB,iBAAMd,IAAI,CAAC+B,eAAD,EAAkBjB,WAAlB,CAAV;;AAFjB;AAEQE,UAAAA,MAFR;AAGMC,UAAAA,SAHN,GAGkB,EAHlB;AAIEA,UAAAA,SAAS,CAACC,IAAV,CAAeF,MAAM,CAACG,IAAtB;AAJF;AAKI,iBAAMlB,GAAG,CAAC;AAAEmB,YAAAA,IAAI,EAAEb,kBAAR;AAA4Bc,YAAAA,KAAK,EAAEJ;AAAnC,WAAD,CAAT;;AALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQIK,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAASQ,eAAT,CAAyBjB,WAAzB,EAAsC;AACnC,SAAOH,KAAK,CAACqB,IAAN,CAAWxB,MAAM,GAAC,wBAAlB,EAA4CM,WAA5C,CAAP;AACF","sourcesContent":["/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport {GET_SEARCH_GEN_PRO, SET_SEARCH_GEN_PRO, GET_GENPROCALLREQUEST, SET_GENPROCALLREQUEST,GET_FILTER_GEN_PRO,SET_FILTER_GEN_PRO} from '../actions';\nimport {apiUrl, deliveryId, appName } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\n\n/* ask to call */\n\nexport const watchGetSearchGenPro = function* () {\n  yield takeEvery(GET_SEARCH_GEN_PRO, workerGetSearchGenPro);\n}\n\nfunction* workerGetSearchGenPro({ formPayload }) {\n  try {      \n    const result = yield call(getSearchGenPro, formPayload);\n    var resultArr = [];\n    resultArr.push(result.data);\n    yield put({ type: SET_SEARCH_GEN_PRO, value: resultArr });\n  } \n  catch {\n    console.log('login failed');\n  }\n}\nfunction getSearchGenPro(formPayload) {\n  var qs = require('qs');\n  //return Axios.post(apiUrl+'genpro/searchgenpro', qs.stringify(formPayload));\n}\n\n/* get prolist callrequest data */\n\nexport const watchGetGenproCallRequest = function* () {\n  yield takeEvery(GET_GENPROCALLREQUEST, workerGetGenproCallRequest);\n}\n\nfunction* workerGetGenproCallRequest( { qcsd_id } ) {\n  try {\n    const uri = apiUrl+'genpro/getprocallrequest?app_name='+appName+'&qcsd_id='+qcsd_id;\n    const result = yield call(Axios.get, uri);\n    var resultArr = [];\n    resultArr.push(result.data);\n      yield put({ type: SET_GENPROCALLREQUEST, value: resultArr });\n    } \n  catch {\n    console.log('Get Page Failed');\n  }\n}\n\n\n/* get prolist filter */\n\nexport const watchGetFilterGenPro = function* () {\n  yield takeEvery(GET_FILTER_GEN_PRO, workerGetFilterGenPro);\n}\n\nfunction* workerGetFilterGenPro({ formPayload }) {\n  try {\n  const result = yield call(getFilterGenPro, formPayload);\n  var resultArr = [];\n  resultArr.push(result.data);\n    yield put({ type: SET_FILTER_GEN_PRO, value: resultArr });\n  } \n  catch {\n    console.log('get data failed');\n  }\n} \n\n\nfunction getFilterGenPro(formPayload) {\n   return Axios.post(apiUrl+'genpro/getfiltergenpro', formPayload);\n} "]},"metadata":{},"sourceType":"module"}