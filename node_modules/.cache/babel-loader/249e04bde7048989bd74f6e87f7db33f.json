{"ast":null,"code":"import _defineProperty from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\src\\\\components\\\\Pages\\\\ContactUs.js\";\n\n/* eslint-disable */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport cookie from 'react-cookies';\nimport { withRouter } from 'react-router-dom';\nimport { GET_CMSPAGE } from '../../actions';\nimport Header from '../Layout/Header';\nimport Footer from '../Layout/Footer';\nimport $ from 'jquery';\nimport BannerImg from '../../common/images/contact-banner.jpg';\nimport IntlTelInput from 'react-intl-tel-input';\nimport 'react-intl-tel-input/dist/main.css';\nimport { Row, Col, ProgressBar, Modal, OverlayTrigger, ButtonToolbar, Tooltip, Button } from 'react-bootstrap';\nimport { appName } from \"../Config/Config\";\nimport { GET_MOBILE_COUNTRY, GET_CONTACTUS, GET_IPDATA, GET_SITESETTINGS } from '../../actions';\nimport { PageTitle, scrollToTopValidate, CheckAuth } from \"../Helpers/SettingHelper\";\n\nvar Parser = require('html-react-parser');\n\nvar ContactUs =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContactUs, _Component);\n\n  function ContactUs(props) {\n    var _this;\n\n    _classCallCheck(this, ContactUs);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ContactUs).call(this, props));\n\n    _this.getipdetails = function () {\n      $.getJSON(\"https://api.ipify.org?format=json\", function (data) {\n        cookie.save(\"ipaddress\", data.ip);\n      });\n\n      var qs = require('qs');\n\n      var postObject = {\n        \"app_name\": appName,\n        \"ipaddress\": cookie.load('ipaddress')\n      };\n\n      _this.props.getIpData(qs.stringify(postObject));\n    };\n\n    _this.handleChangeTxt = function (valid, event, object) {\n      _this.setState({\n        countrycode: object.dialCode\n      });\n\n      _this.setState({\n        contact_no: event\n      });\n\n      _this.setState({\n        validphone: valid\n      });\n    };\n\n    _this.editform = function (valid, inputphone, object, fullnumber) {\n      _this.setState({\n        validphone: valid\n      });\n\n      _this.setState({\n        selectedcode: object.dialCode\n      });\n\n      _this.setState({\n        selectregion: object.iso2\n      });\n\n      var errors = {};\n      var formIsValid = true;\n\n      if (valid == false) {\n        _this.setState({\n          mobileError: 1\n        });\n\n        formIsValid = false;\n        $('.errorContactno').html('<span className=\"errorspan\">Please enter valid mobile number</span>');\n      } else if (valid == true) {\n        _this.setState({\n          mobileError: 0\n        });\n\n        $('.errorContactno').html('');\n      }\n\n      _this.setState({\n        errors: errors\n      });\n\n      return formIsValid;\n    };\n\n    _this.handleFormSubmit = function (e) {\n      e.preventDefault();\n\n      if (_this.validateForm()) {\n        _this.setState({\n          Loading: true\n        });\n\n        var formPayload = _this.state;\n\n        var qs = require('qs');\n\n        if (_this.state.countrycode != '') {\n          var ccode = _this.state.countrycode;\n        } else {\n          var ccode = formPayload.selectedcode;\n        }\n\n        var postObject = {\n          \"app_name\": appName,\n          \"contact_name\": formPayload.contact_name,\n          \"contact_email\": formPayload.contact_email,\n          \"contact_no\": '+' + ccode + formPayload.contact_no,\n          \"contact_msg\": formPayload.contact_msg\n        };\n\n        _this.props.getContactus(qs.stringify(postObject));\n\n        _this.setState({\n          contact_name: '',\n          contact_email: '',\n          contact_no: '',\n          contact_msg: ''\n        });\n      }\n    };\n\n    _this.state = {\n      contact_name: '',\n      contact_no: '',\n      contact_email: '',\n      contact_msg: '',\n      countrycode: '',\n      errorContactno: '',\n      errorname: '',\n      erroremail: '',\n      countryList: [],\n      Loading: false,\n      mobileError: 0,\n      validphone: '',\n      siteemail: '',\n      sitephone: '',\n      showcontactmsg: ''\n    };\n\n    _this.props.getSiteSettings();\n\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_this));\n\n    _this.getipdetails();\n\n    return _this;\n  }\n\n  _createClass(ContactUs, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.title = PageTitle('Contact Us');\n      this.props.getMobileCountry();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(Props) {\n      var _this2 = this;\n\n      this.setState({\n        Loading: false\n      });\n\n      if (Props.mobilecountry !== this.props.mobilecountry) {\n        if (Props.mobilecountry[0].result_set !== '') {\n          this.setState({\n            mobilecountry: Props.mobilecountry[0].result_set\n          }, function () {\n            this.loadCountryList();\n          });\n        }\n      }\n\n      if (Props.contactus !== this.props.contactus) {\n        if (Props.contactus[0].status == 'success') {\n          this.setState({\n            showcontactmsg: Parser('<span class=\"contactsuccessmsg\"><p>' + Props.contactus[0].message + '</p></span>')\n          });\n          setTimeout(function () {\n            _this2.setState({\n              showcontactmsg: ''\n            });\n          }, 5000);\n        }\n      }\n\n      if (Props.ipaddress !== this.props.ipaddress) {\n        if (Props.ipaddress[0] != '') {\n          this.setState({\n            clientip: Props.ipaddress[0]\n          });\n        } else {\n          this.setState({\n            clientip: 'sg'\n          });\n        }\n      }\n\n      if (Props.sitesettings !== this.props.sitesettings) {\n        if (Props.sitesettings[0].result_set !== 'undefined' && Props.sitesettings[0].result_set !== null) {\n          if (Props.sitesettings[0].status === 'success') {\n            var settingData = Props.sitesettings[0].result_set;\n\n            if (settingData.settings_display_email !== '') {\n              this.setState({\n                siteemail: settingData.settings_display_email\n              });\n            }\n\n            if (settingData.settings_no !== '') {\n              this.setState({\n                sitephone: settingData.settings_no\n              });\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"loadCountryList\",\n    value: function loadCountryList() {\n      var country = [];\n      this.state.mobilecountry.map(function (countries) {\n        country.push(countries.short_code.toLowerCase());\n      });\n      this.setState({\n        countryList: country\n      });\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      var _this$state = this.state,\n          contact_no = _this$state.contact_no,\n          contact_name = _this$state.contact_name,\n          contact_email = _this$state.contact_email,\n          contact_msg = _this$state.contact_msg,\n          validphone = _this$state.validphone;\n      var errors = {};\n      var formIsValid = true;\n\n      if (!contact_name) {\n        this.setState({\n          errorname: Parser('<span class=\"errorspan\">Please fill the contact name</span>')\n        });\n        formIsValid = false;\n      } else {\n        this.setState({\n          errorname: ''\n        });\n      }\n\n      if (!contact_email) {\n        this.setState({\n          erroremail: Parser('<span class=\"errorspan\">Please fill the contact  email</span>')\n        });\n        formIsValid = false;\n      } else {\n        this.setState({\n          erroremail: ''\n        });\n      }\n\n      if (!contact_msg) {\n        this.setState({\n          errormsg: Parser('<span class=\"errorspan\">Please fill the description</span>')\n        });\n        formIsValid = false;\n      } else {\n        this.setState({\n          errormsg: ''\n        });\n      }\n\n      if (!contact_no) {\n        formIsValid = false;\n        this.setState({\n          mobileError: 1\n        });\n        this.setState({\n          errorContactno: Parser('<span class=\"errorspan\">Please enter correct contact number</span>')\n        });\n      } else if (contact_no) {\n        this.setState({\n          mobileError: 0\n        });\n        this.setState({\n          errorContactno: ''\n        });\n      }\n\n      if (validphone === false) {\n        formIsValid = false;\n        this.setState({\n          mobileError: 1\n        });\n        this.setState({\n          errorContactno: Parser('<span class=\"errorspan\">Please enter correct contact number</span>')\n        });\n      } else if (validphone === true) {\n        this.setState({\n          mobileError: 0\n        });\n        this.setState({\n          errorContactno: ''\n        });\n      }\n\n      if (formIsValid === false) {\n        setTimeout(function () {\n          scrollToTopValidate();\n        }, 1000);\n      }\n\n      return formIsValid;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var defaultip = this.state.clientip;\n\n      if (defaultip !== '' && typeof defaultip !== \"undefined\") {\n        return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        }, React.createElement(Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"cms-page-banner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"cms-innerpage-banner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: BannerImg,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"cms-banner-caption\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        }, \"Contact Us\"))))), React.createElement(\"div\", {\n          className: \"wrapper_out pptc_wrapper_out contact_wrapper_out\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"contact-page-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"inner-contact-page-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          },\n          __self: this\n        }, React.createElement(Col, {\n          md: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"contact-form-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        }, \"Fill the form we will get back you soon\"), React.createElement(\"form\", {\n          className: \"contact_form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }, \"Name \", React.createElement(\"span\", {\n          className: \"required\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }, \"*\")), React.createElement(\"input\", {\n          type: \"text\",\n          name: \"contact_name\",\n          value: this.state.contact_name,\n          className: \"form-control\",\n          onChange: this.handleInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        }), this.state.errorname), React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        }, \"Email Address\"), React.createElement(\"input\", {\n          type: \"email\",\n          className: \"form-control\",\n          value: this.state.contact_email,\n          name: \"contact_email\",\n          onChange: this.handleInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        }), this.state.erroremail), React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"label-tag\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        }, \"Mobile Number \", React.createElement(\"span\", {\n          className: \"required\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287\n          },\n          __self: this\n        }, \"*\")), React.createElement(\"div\", {\n          className: \"account-mobile-wrap\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"account-mobileno\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        }, React.createElement(IntlTelInput, {\n          className: \"form-control\",\n          name: \"contact_no\",\n          defaultCountry: defaultip,\n          separateDialCode: \"true\",\n          onPhoneNumberBlur: this.editform.bind(this),\n          value: this.state.contact_no,\n          onPhoneNumberChange: this.handleChangeTxt.bind(this),\n          onlyCountries: this.state.countryList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        })), this.state.errorContactno)), React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        }, \"Message \", React.createElement(\"span\", {\n          className: \"required\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        }, \"*\")), React.createElement(\"textarea\", {\n          className: \"form-control\",\n          name: \"contact_msg\",\n          value: this.state.contact_msg,\n          onChange: this.handleInputChange,\n          autoComplete: \"off\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306\n          },\n          __self: this\n        }), this.state.errormsg), React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn_orange btn_minwid editprofile_submit animate-btn2\",\n          type: \"button\",\n          onClick: this.handleFormSubmit.bind(this),\n          disabled: this.state.Loading === true ? true : false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        }, \" \", this.state.Loading === true && React.createElement(\"span\", {\n          className: \"load-data\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312\n          },\n          __self: this\n        }, \"Loading\"), \"Submit\")), React.createElement(\"div\", {\n          className: \"successMsg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316\n          },\n          __self: this\n        }, this.state.showcontactmsg)))), React.createElement(Col, {\n          md: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"contact-detail-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          className: \"contact-detail-list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"contact-detail-heading\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324\n          },\n          __self: this\n        }, \"GenieHut\"), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-phone\",\n          \"aria-hidden\": \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325\n          },\n          __self: this\n        }), React.createElement(\"a\", {\n          href: \"tel:\" + this.state.sitephone,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325\n          },\n          __self: this\n        }, this.state.sitephone)), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-envelope\",\n          \"aria-hidden\": \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326\n          },\n          __self: this\n        }), React.createElement(\"a\", {\n          href: \"mailto:\" + this.state.siteemail,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326\n          },\n          __self: this\n        }, this.state.siteemail)))))))))), React.createElement(Footer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342\n          },\n          __self: this\n        })));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"loading loading_separate\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return ContactUs;\n}(Component);\n\nvar mapStateTopProps = function mapStateTopProps(state) {\n  return {\n    cmspage: state.cmspage,\n    mobilecountry: state.mobilecountry,\n    contactus: state.contactus,\n    ipaddress: state.ip,\n    sitesettings: state.sitesettings\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getCmsPage: function getCmsPage(slug) {\n      dispatch({\n        type: GET_CMSPAGE,\n        slug: slug\n      });\n    },\n    getMobileCountry: function getMobileCountry() {\n      dispatch({\n        type: GET_MOBILE_COUNTRY\n      });\n    },\n    getContactus: function getContactus(formPayload) {\n      dispatch({\n        type: GET_CONTACTUS,\n        formPayload: formPayload\n      });\n    },\n    getIpData: function getIpData(ipaddress) {\n      dispatch({\n        type: GET_IPDATA,\n        ipaddress: ipaddress\n      });\n    },\n    getSiteSettings: function getSiteSettings(slug) {\n      dispatch({\n        type: GET_SITESETTINGS,\n        slug: slug\n      });\n    }\n  };\n};\n\nexport default connect(mapStateTopProps, mapDispatchToProps)(withRouter(ContactUs));","map":{"version":3,"sources":["D:/text video/geniehut-Geni-App-Code/geniehut-Geni-App-Code/front-end/src/components/Pages/ContactUs.js"],"names":["React","Component","connect","cookie","withRouter","GET_CMSPAGE","Header","Footer","$","BannerImg","IntlTelInput","Row","Col","ProgressBar","Modal","OverlayTrigger","ButtonToolbar","Tooltip","Button","appName","GET_MOBILE_COUNTRY","GET_CONTACTUS","GET_IPDATA","GET_SITESETTINGS","PageTitle","scrollToTopValidate","CheckAuth","Parser","require","ContactUs","props","getipdetails","getJSON","data","save","ip","qs","postObject","load","getIpData","stringify","handleChangeTxt","valid","event","object","setState","countrycode","dialCode","contact_no","validphone","editform","inputphone","fullnumber","selectedcode","selectregion","iso2","errors","formIsValid","mobileError","html","handleFormSubmit","e","preventDefault","validateForm","Loading","formPayload","state","ccode","contact_name","contact_email","contact_msg","getContactus","errorContactno","errorname","erroremail","countryList","siteemail","sitephone","showcontactmsg","getSiteSettings","handleInputChange","bind","document","title","getMobileCountry","Props","mobilecountry","result_set","loadCountryList","contactus","status","message","setTimeout","ipaddress","clientip","sitesettings","settingData","settings_display_email","settings_no","country","map","countries","push","short_code","toLowerCase","target","name","value","errormsg","defaultip","mapStateTopProps","cmspage","mapDispatchToProps","dispatch","getCmsPage","slug","type"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport cookie from 'react-cookies';\nimport { withRouter } from 'react-router-dom';\nimport { GET_CMSPAGE } from '../../actions';\nimport Header from '../Layout/Header';\nimport Footer from '../Layout/Footer';\nimport $ from 'jquery';\nimport BannerImg from '../../common/images/contact-banner.jpg';\nimport IntlTelInput from 'react-intl-tel-input';\nimport 'react-intl-tel-input/dist/main.css';\nimport {Row, Col, ProgressBar, Modal, OverlayTrigger, ButtonToolbar, Tooltip, Button} from 'react-bootstrap';\nimport { appName } from \"../Config/Config\";\nimport { GET_MOBILE_COUNTRY, GET_CONTACTUS, GET_IPDATA, GET_SITESETTINGS } from '../../actions';\nimport { PageTitle, scrollToTopValidate, CheckAuth } from \"../Helpers/SettingHelper\";\n\n\nvar Parser = require('html-react-parser');\n\nclass ContactUs extends Component {\nconstructor(props) {\n    super(props);\n    this.state = {\n      contact_name:'',\n      contact_no:'',\n      contact_email:'',\n      contact_msg:'',\n      countrycode:'',\n      errorContactno:'',\n      errorname:'',\n      erroremail:'',\n      countryList:[],\n      Loading:false,\n      mobileError:0,\n      validphone: '',\n      siteemail:'',\n      sitephone: '',\n      showcontactmsg:''\n      }\n\n    this.props.getSiteSettings();\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.getipdetails();\n  }\n\n    getipdetails =() => {\n    $.getJSON(\"https://api.ipify.org?format=json\", function (data) {\n        cookie.save(\"ipaddress\",data.ip);\n    });\n\n    var qs = require('qs');\n      var postObject = {\n      \"app_name\": appName,\n      \"ipaddress\": cookie.load('ipaddress')\n      };\n    this.props.getIpData(qs.stringify(postObject));\n  }\n\n  componentDidMount(){\n    document.title = PageTitle('Contact Us');\n    this.props.getMobileCountry();\n  }\n\n  componentWillReceiveProps(Props) {\n\n    this.setState({Loading:false});\n    if(Props.mobilecountry !==this.props.mobilecountry){\n      if(Props.mobilecountry[0].result_set!==''){\n         this.setState({mobilecountry:Props.mobilecountry[0].result_set}, function() {\n         this.loadCountryList();\n         });\n       }\n     }\n     if(Props.contactus !== this.props.contactus){\n        if(Props.contactus[0].status == 'success'){\n\n           this.setState({showcontactmsg:Parser('<span class=\"contactsuccessmsg\"><p>'+Props.contactus[0].message+'</p></span>')})\n               setTimeout(() => {\n                    this.setState({showcontactmsg:''})\n                },5000);\n        }\n     }\n\n      if(Props.ipaddress !==this.props.ipaddress){\n          if(Props.ipaddress[0]!=''){\n            this.setState({clientip :Props.ipaddress[0]});\n          } else {\n            this.setState({clientip :'sg'});\n          }\n       }\n\n        if(Props.sitesettings!== this.props.sitesettings){\n        if(Props.sitesettings[0].result_set !== 'undefined' && Props.sitesettings[0].result_set !== null){\n            if(Props.sitesettings[0].status === 'success'){\n               const settingData = Props.sitesettings[0].result_set;\n               if(settingData.settings_display_email !== ''){\n                    this.setState({siteemail : settingData.settings_display_email})\n               }\n               if(settingData.settings_no !== ''){\n                    this.setState({sitephone : settingData.settings_no})\n               }\n            }\n        }\n    }\n }\n\n  loadCountryList() {\n    var country= [];\n    this.state.mobilecountry.map(function(countries){\n        country.push(countries.short_code.toLowerCase());\n    });\n    this.setState({countryList:country});\n  }\n\n\n\n  handleInputChange(event) {\n    const {name, value} = event.target;  \n    this.setState({\n        [name]: value\n      });\n    \n  }\n\n\n handleChangeTxt = (valid, event,object) => { \n    this.setState({countrycode: object.dialCode});\n    this.setState({contact_no :event });\n    this.setState({validphone: valid});\n }\n\neditform = (valid,inputphone,object,fullnumber)  => {\n    this.setState({validphone: valid});\n    this.setState({selectedcode : object.dialCode})\n    this.setState({selectregion : object.iso2})\n    let errors = {};\n    let formIsValid = true;\n    if(valid == false){\n      this.setState({mobileError:1});\n      formIsValid = false;\n      $('.errorContactno').html('<span className=\"errorspan\">Please enter valid mobile number</span>');\n    }else if(valid == true){\n      this.setState({mobileError:0});\n      $('.errorContactno').html('');\n    }\n    this.setState({\n      errors: errors\n    });\n\n    return formIsValid;\n  }\n\n   handleFormSubmit = (e) => {\n    e.preventDefault();\n    if(this.validateForm()){\n\n      this.setState({Loading:true});\n\n      const formPayload = this.state;\n      var qs = require('qs');\n\n\n      if(this.state.countrycode!=''){\n          var ccode =this.state.countrycode;\n      }else{\n         var ccode =formPayload.selectedcode;\n      }\n\n      var postObject = {\n      \"app_name\": appName,\n      \"contact_name\": formPayload.contact_name,\n      \"contact_email\": formPayload.contact_email,\n      \"contact_no\": '+'+ccode+formPayload.contact_no,\n      \"contact_msg\": formPayload.contact_msg\n     \n      };\n      this.props.getContactus(qs.stringify(postObject));\n      \n      this.setState({\n      contact_name: '',\n      contact_email:'',\n      contact_no:'',\n      contact_msg:''\n      });\n    }\n  }\n  validateForm(){\n\n    const {contact_no,contact_name,contact_email,contact_msg,validphone} = this.state;\n\n    let errors = {};\n    let formIsValid = true;\n\n\n    if(!contact_name) {\n       this.setState({errorname:Parser('<span class=\"errorspan\">Please fill the contact name</span>')})\n       formIsValid = false;\n    }else {\n      this.setState({errorname:''});\n    }\n\n    if(!contact_email) {\n       this.setState({erroremail:Parser('<span class=\"errorspan\">Please fill the contact  email</span>')})\n       formIsValid = false;\n    }else {\n      this.setState({erroremail:''});\n    }\n\n    if(!contact_msg) {\n       this.setState({errormsg:Parser('<span class=\"errorspan\">Please fill the description</span>')})\n       formIsValid = false;\n    }else {\n      this.setState({errormsg:''});\n    }\n\n\n    if (!contact_no) {\n      formIsValid = false;\n      this.setState({mobileError:1});\n      this.setState({errorContactno:Parser('<span class=\"errorspan\">Please enter correct contact number</span>')})\n    }else if(contact_no){\n      this.setState({mobileError:0});\n       this.setState({errorContactno:''});\n    }\n\n    if(validphone === false){\n      formIsValid = false;\n      this.setState({mobileError:1});\n      this.setState({errorContactno:Parser('<span class=\"errorspan\">Please enter correct contact number</span>')})\n    }else if(validphone === true){\n      this.setState({mobileError:0});\n       this.setState({errorContactno:''});\n    }\n\n   if(formIsValid===false) {\n     setTimeout(function(){  \n        scrollToTopValidate();\n       },1000);\n    }\n    return formIsValid;\n\n   \n  }\n\n\nrender() {\n  let defaultip  = this.state.clientip;\n  \n   if(defaultip !=='' && typeof defaultip !== \"undefined\" ) {\n     \n    return (\n      <>\n        <div>\n            <Header />\n            <div className=\"cms-page-banner\">\n                 <div className=\"cms-innerpage-banner\">\n                      <img src={BannerImg} alt=\"\"/>\n                      <div className=\"cms-banner-caption\">\n                        <div className=\"container\">\n                              <h1>Contact Us</h1>\n                        </div>\n                      </div>\n                 </div>\n            </div>\n            <div className=\"wrapper_out pptc_wrapper_out contact_wrapper_out\">\n                <div className=\"container\">\n                  <div className=\"contact-page-wrapper\">\n                      <div className=\"inner-contact-page-wrapper\">\n                        <Row>\n                            <Col md={6}>\n                               <div className=\"contact-form-wrapper\">\n                                   <h3>Fill the form we will get back you soon</h3>\n                                    <form className=\"contact_form\">\n                                        <div className=\"form-group\" >\n                                            <label>Name <span className=\"required\">*</span></label>\n                                            <input type=\"text\" name=\"contact_name\" value={this.state.contact_name} className=\"form-control\" onChange={this.handleInputChange}/>\n                                           {this.state.errorname}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label>Email Address</label>\n                                            <input type=\"email\" className=\"form-control\" value={this.state.contact_email} name=\"contact_email\" onChange={this.handleInputChange}/>\n                                            {this.state.erroremail}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <div className=\"label-tag\">\n                                                Mobile Number <span className=\"required\">*</span>\n                                            </div>\n                                            <div className=\"account-mobile-wrap\">\n                                                <div className=\"account-mobileno\">\n                                                        <IntlTelInput className=\"form-control\" name=\"contact_no\" \n                                                          defaultCountry={defaultip}\n                                                          separateDialCode='true'\n                                                          onPhoneNumberBlur={this.editform.bind(this)}\n                                                          value={this.state.contact_no}\n                                                          onPhoneNumberChange={this.handleChangeTxt.bind(this) }\n                                                          onlyCountries={this.state.countryList}\n                                                          />\n                                                </div>\n                                                {this.state.errorContactno}\n                                            </div>\n                                        </div>\n                                        \n                                        <div className=\"form-group\">\n                                            <label>Message <span className=\"required\">*</span></label>\n                                             <textarea className=\"form-control\" name=\"contact_msg\" value={this.state.contact_msg} onChange={this.handleInputChange} autoComplete=\"off\"></textarea>\n                                            {this.state.errormsg}\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <button className=\"btn btn_orange btn_minwid editprofile_submit animate-btn2\" type=\"button\" onClick={this.handleFormSubmit.bind(this)} disabled={(this.state.Loading ===true)?true:false}> {this.state.Loading ===true &&\n                                        <span className=\"load-data\">Loading</span> \n                                        }Submit\n                                             </button>\n                                        </div>\n                                       <div className=\"successMsg\">{this.state.showcontactmsg}</div>\n                                    </form>\n                               </div>\n                            </Col>\n                            <Col md={6}>\n                               <div className=\"contact-detail-wrapper\">\n                                   {/*<h3>Our Location</h3> */}\n                                    <ul className=\"contact-detail-list\">\n                                        <li className=\"contact-detail-heading\">GenieHut</li>\n                                        <li><i className=\"fa fa-phone\" aria-hidden=\"true\"></i><a href={\"tel:\"+this.state.sitephone}>{this.state.sitephone}</a></li>\n                                        <li><i className=\"fa fa-envelope\" aria-hidden=\"true\"></i><a href={\"mailto:\"+this.state.siteemail}>{this.state.siteemail}</a></li>\n                                    </ul>\n                               </div>\n                            </Col>\n                        </Row>\n                      </div>\n                  </div>\n                </div>\n                {/*<div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"contact-map-inner\">\n                            Iframe Map Section\n                        </div>\n                    </div>\n                </div>*/}\n            </div>\n            <Footer />\n        </div>\n        </>\n    );\n}else{\n  return (<div><div className=\"loading loading_separate\"></div></div>);\n}\n}\n}\n\nconst mapStateTopProps = (state) => {\n  return {\n  cmspage: state.cmspage,\n  mobilecountry : state.mobilecountry,\n  contactus: state.contactus,\n  ipaddress   : state.ip,\n  sitesettings: state.sitesettings,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getCmsPage: (slug) => {\n      dispatch({ type: GET_CMSPAGE, slug});\n    },\n    getMobileCountry: () => {\n      dispatch({ type: GET_MOBILE_COUNTRY});\n    },\n    getContactus: (formPayload) => {\n      dispatch({ type: GET_CONTACTUS, formPayload});\n    },\n    getIpData: (ipaddress) => {\n      dispatch({ type: GET_IPDATA, ipaddress});\n    },\n    getSiteSettings: (slug) => {\n      dispatch({ type: GET_SITESETTINGS, slug});\n    },\n\n  }\n}\nexport default connect(mapStateTopProps, mapDispatchToProps)(withRouter(ContactUs));\n"]},"metadata":{},"sourceType":"module"}