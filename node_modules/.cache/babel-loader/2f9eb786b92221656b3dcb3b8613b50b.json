{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetCreateMessage);\n\n/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_CREATE_MESSAGE, SET_CREATE_MESSAGE } from '../actions';\nimport { apiUrl, deliveryId, appName } from \"../components/Config/Config\";\nimport Axios from 'axios';\nexport var watchGetCreateMessage =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetCreateMessage() {\n  return _regeneratorRuntime.wrap(function watchGetCreateMessage$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery(GET_CREATE_MESSAGE, workerGetCreateMessage);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, watchGetCreateMessage);\n});\n\nfunction workerGetCreateMessage(_ref) {\n  var formPayload, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetCreateMessage$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          formPayload = _ref.formPayload;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(getCreateMessage, formPayload);\n\n        case 4:\n          result = _context2.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context2.next = 9;\n          return put({\n            type: SET_CREATE_MESSAGE,\n            value: resultArr\n          });\n\n        case 9:\n          _context2.next = 14;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log('login failed');\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked, null, [[1, 11]]);\n}\n\nfunction getCreateMessage(formPayload) {\n  var qs = require('qs');\n\n  return Axios.post(apiUrl + 'genmessage/createGenMessage', qs.stringify(formPayload));\n}","map":{"version":3,"sources":["D:/text video/geniehut-Geni-App-Code/geniehut-Geni-App-Code/front-end/src/sagas/createmessage.js"],"names":["workerGetCreateMessage","takeEvery","call","put","GET_CREATE_MESSAGE","SET_CREATE_MESSAGE","apiUrl","deliveryId","appName","Axios","watchGetCreateMessage","formPayload","getCreateMessage","result","resultArr","push","data","type","value","console","log","qs","require","post","stringify"],"mappings":";;;;yBAUUA,sB;;AAVV;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAAQC,kBAAR,EAA4BC,kBAA5B,QAAqD,YAArD;AACA,SAAQC,MAAR,EAAgBC,UAAhB,EAA4BC,OAA5B,QAA2C,6BAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,qBAAqB;AAAA;AAAA,yBAAG,SAAxBA,qBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AACnC,iBAAMT,SAAS,CAACG,kBAAD,EAAqBJ,sBAArB,CAAf;;AADmC;AAAA;AAAA;AAAA;AAAA;AAAA,KAAxBU,qBAAwB;AAAA,CAAH,CAA3B;;AAIP,SAAUV,sBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmCW,UAAAA,WAAnC,QAAmCA,WAAnC;AAAA;AAAA;AAEmB,iBAAMT,IAAI,CAACU,gBAAD,EAAmBD,WAAnB,CAAV;;AAFnB;AAEUE,UAAAA,MAFV;AAGQC,UAAAA,SAHR,GAGoB,EAHpB;AAIIA,UAAAA,SAAS,CAACC,IAAV,CAAeF,MAAM,CAACG,IAAtB;AAJJ;AAKI,iBAAMb,GAAG,CAAC;AAAEc,YAAAA,IAAI,EAAEZ,kBAAR;AAA4Ba,YAAAA,KAAK,EAAEJ;AAAnC,WAAD,CAAT;;AALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQIK,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,SAASR,gBAAT,CAA0BD,WAA1B,EAAuC;AACnC,MAAIU,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,SAAOb,KAAK,CAACc,IAAN,CAAWjB,MAAM,GAAC,6BAAlB,EAAiDe,EAAE,CAACG,SAAH,CAAab,WAAb,CAAjD,CAAP;AACH","sourcesContent":["/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport {GET_CREATE_MESSAGE, SET_CREATE_MESSAGE} from '../actions';\nimport {apiUrl, deliveryId, appName } from \"../components/Config/Config\";\nimport Axios from 'axios';\n\nexport const watchGetCreateMessage = function* () {\n  yield takeEvery(GET_CREATE_MESSAGE, workerGetCreateMessage);\n}\n\nfunction* workerGetCreateMessage({ formPayload }) {\n  try {      \n    const result = yield call(getCreateMessage, formPayload);\n    var resultArr = [];\n    resultArr.push(result.data);\n    yield put({ type: SET_CREATE_MESSAGE, value: resultArr });\n  } \n  catch {\n    console.log('login failed');\n  }\n}\nfunction getCreateMessage(formPayload) {\n    var qs = require('qs');\n    return Axios.post(apiUrl+'genmessage/createGenMessage', qs.stringify(formPayload));\n}"]},"metadata":{},"sourceType":"module"}