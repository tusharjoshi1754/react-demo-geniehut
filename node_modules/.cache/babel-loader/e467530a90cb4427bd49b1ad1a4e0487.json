{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetTransfer);\n\n/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_TRANSFER, SET_TRANSFER } from '../actions';\nimport { apiUrl, deliveryId, appName } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\nexport var watchGetTransfer =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetTransfer() {\n  return _regeneratorRuntime.wrap(function watchGetTransfer$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery(GET_TRANSFER, workerGetTransfer);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, watchGetTransfer);\n});\n\nfunction workerGetTransfer(_ref) {\n  var parems, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetTransfer$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          parems = _ref.parems;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(getTransfer, parems);\n\n        case 4:\n          result = _context2.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context2.next = 9;\n          return put({\n            type: SET_TRANSFER,\n            value: resultArr\n          });\n\n        case 9:\n          _context2.next = 14;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log('login failed');\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked, null, [[1, 11]]);\n}\n\nfunction getTransfer(parems) {\n  var qs = require('qs');\n\n  return Axios.post(apiUrl + 'user/points_transfer', qs.stringify(parems));\n}","map":{"version":3,"sources":["D:/text video/geniehut-Geni-App-Code/geniehut-Geni-App-Code/front-end/src/sagas/transfer.js"],"names":["workerGetTransfer","takeEvery","call","put","GET_TRANSFER","SET_TRANSFER","apiUrl","deliveryId","appName","Axios","cookie","watchGetTransfer","parems","getTransfer","result","resultArr","push","data","type","value","console","log","qs","require","post","stringify"],"mappings":";;;;yBAWUA,iB;;AAXV;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,YAA3C;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,OAA7B,QAA4C,6BAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,OAAO,IAAMC,gBAAgB;AAAA;AAAA,yBAAG,SAAnBA,gBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC9B,iBAAMV,SAAS,CAACG,YAAD,EAAeJ,iBAAf,CAAf;;AAD8B;AAAA;AAAA;AAAA;AAAA;AAAA,KAAnBW,gBAAmB;AAAA,CAAH,CAAtB;;AAIP,SAAUX,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8BY,UAAAA,MAA9B,QAA8BA,MAA9B;AAAA;AAAA;AAEmB,iBAAMV,IAAI,CAACW,WAAD,EAAcD,MAAd,CAAV;;AAFnB;AAEUE,UAAAA,MAFV;AAGQC,UAAAA,SAHR,GAGoB,EAHpB;AAIGA,UAAAA,SAAS,CAACC,IAAV,CAAeF,MAAM,CAACG,IAAtB;AAJH;AAKI,iBAAMd,GAAG,CAAC;AAAEe,YAAAA,IAAI,EAAEb,YAAR;AAAsBc,YAAAA,KAAK,EAAEJ;AAA7B,WAAD,CAAT;;AALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQIK,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAASR,WAAT,CAAqBD,MAArB,EAA6B;AACzB,MAAIU,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,SAAOd,KAAK,CAACe,IAAN,CAAWlB,MAAM,GAAC,sBAAlB,EAA0CgB,EAAE,CAACG,SAAH,CAAab,MAAb,CAA1C,CAAP;AACH","sourcesContent":["/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_TRANSFER, SET_TRANSFER } from '../actions';\nimport { apiUrl, deliveryId, appName } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\n\nexport const watchGetTransfer = function* () {\n  yield takeEvery(GET_TRANSFER, workerGetTransfer);\n}\n\nfunction* workerGetTransfer({ parems }) {\n  try {\n    const result = yield call(getTransfer, parems);\n    var resultArr = [];\n\t  resultArr.push(result.data);\n    yield put({ type: SET_TRANSFER, value: resultArr });\n  } \n  catch {\n    console.log('login failed');\n  }\n} \n\n\nfunction getTransfer(parems) {\n    var qs = require('qs');\n    return Axios.post(apiUrl+'user/points_transfer', qs.stringify(parems));\n} \n"]},"metadata":{},"sourceType":"module"}