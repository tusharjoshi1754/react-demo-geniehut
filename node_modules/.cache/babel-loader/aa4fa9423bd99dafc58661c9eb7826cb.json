{"ast":null,"code":"import _defineProperty from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\src\\\\components\\\\Account\\\\GenPro\\\\Questions.js\";\n\n/* eslint-disable */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport $ from 'jquery';\nimport { Row, Col, ProgressBar } from 'react-bootstrap';\nimport 'react-intl-tel-input/dist/main.css';\nimport { GET_PRO_QUESTIONS, GET_UPDATE_PRO_QUESTIONS } from '../../../actions';\nimport cookie from 'react-cookies';\nimport { CalculatePercentage, LoadingSec, Encrypt, isNumber } from '../../Helpers/SettingHelper';\nimport { apiUrl, appName, mediaUrl } from \"../../Config/Config\"; //var serialize = require('form-serialize');\n\nvar Questions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Questions, _Component);\n\n  function Questions(props) {\n    var _this;\n\n    _classCallCheck(this, Questions);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Questions).call(this, props));\n\n    _this.handleChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.loginresponse = function (userToken, name) {\n      if (userToken !== '' && typeof userToken !== 'undefined') {\n        _this.setState({\n          userToken: userToken,\n          UserFullname: name\n        }, function () {\n          this._search();\n        });\n      }\n    };\n\n    _this._next = function () {\n      var currentStep = _this.state.currentStep;\n\n      var error = _this.validateForm(currentStep);\n\n      if (error === 0) {\n        $('.alert-Field').hide();\n        currentStep = parseInt(currentStep) + 1;\n        var totlaStep = $('.service-step-box').length;\n        var currentProgress = CalculatePercentage(totlaStep, _this.state.nextMove);\n\n        _this.setState({\n          currentProgress: currentProgress\n        });\n\n        _this.setState({\n          currentStep: currentStep,\n          nextMove: parseInt(_this.state.nextMove) + 1\n        });\n\n        $('.service-step-box').hide();\n        $('#step_' + currentStep).show();\n        $('.modal-content').animate({\n          'scrollTop': $('#step_' + currentStep).position().top - 200\n        });\n      } else {\n        $('.alert-Field').show();\n      }\n    };\n\n    _this._prev = function () {\n      var currentStep = _this.state.currentStep;\n      currentStep = currentStep - 1;\n\n      _this.setState({\n        currentStep: currentStep\n      });\n\n      $('.service-step-box').hide();\n      $('#step_' + currentStep).show();\n    };\n\n    _this._search = function () {\n      var currentStep = _this.state.currentStep;\n\n      var error = _this.validateForm(currentStep);\n\n      if (error === 0) {\n        if (_this.state.userToken !== '' && typeof _this.state.userToken !== \"undefined\") {\n          _this.setState({\n            formLoad: true\n          });\n\n          $('.alert-Field').hide();\n          var form = $('#questionFrm');\n          var formdata = false;\n\n          if (window.FormData) {\n            formdata = new FormData(form[0]);\n          }\n\n          var current = _assertThisInitialized(_this);\n\n          $.ajax({\n            url: apiUrl + 'genpro/updateProquestions',\n            data: formdata ? formdata : form.serialize(),\n            cache: false,\n            async: false,\n            contentType: false,\n            processData: false,\n            dataType: \"JSON\",\n            type: 'POST',\n            success: function success(result, textStatus, jqXHR) {\n              current.props.updateQuestion(result.status);\n            }\n          });\n\n          _this.props.getUpdateProQuestion(formdata);\n        } else {}\n      } else {\n        $('.alert-Field').show();\n      }\n    };\n\n    _this.state = {\n      userToken: cookie.load('UserAuthToken'),\n      modalLogin: false,\n      questionFrm1: '',\n      currentStep: 1,\n      loading: true,\n      serviceID: _this.props.serviceID,\n      proQuestions: [],\n      QuestionDetails: '',\n      currentProgress: 0,\n      nextMove: 1,\n      formLoad: false,\n      loadQuestion: true\n    };\n    return _this;\n  }\n\n  _createClass(Questions, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var params = 'app_name=' + appName + '&user_token=' + this.state.userToken + '&service_id=' + Encrypt(this.state.serviceID, 'e');\n      this.props.getQuestions(params);\n      $(document).ready(function () {\n        $('body').on('change', '.options_check', function () {\n          var types = $(this).parents('.service-step-box').data('type');\n          var curretnID = $(this).parents('.options').attr('id');\n\n          if (types === \"radio\") {\n            $(this).parents('.service-step-box').find('.remarks').hide();\n          }\n\n          if ($(this).is(':checked')) {\n            $('#' + curretnID + ' .remarks').show();\n          } else {\n            $('#' + curretnID + ' .remarks').hide();\n          }\n        });\n        $('body').on('change', 'input[type=\"file\"]', function (e) {\n          if (e.target.files !== '' && typeof e.target.files !== \"undefined\") {\n            var roots = $(this).parents('.file_upload_wrap');\n            var fileName = e.target.files[0].name;\n            roots.find('.File_upload_value').html(fileName);\n          }\n        });\n        $('body').on('click', '.add_more_image', function (e) {\n          var roots = $(this).parents('.form-group');\n\n          if (roots.find('.row').length <= 3) {\n            var htmls = roots.find('.row:last-child').html();\n            roots.append('<div class=\"row\">' + htmls + '</div>');\n            roots.find('.row').last().find('.File_upload_value').html('File Uploaded');\n            roots.find('.row').last().find('.preview-image').html('');\n            roots.find('.row').last().find('input[type=\"file\"]').val('');\n            roots.find('.row').last().find('input[type=\"text\"]').val('');\n            roots.find('.add_more_image').hide();\n            roots.find('.remove_image').show();\n            roots.find('.add_more_image').first().show();\n            roots.find('.remove_image').first().hide();\n          } else {\n            alert('Maximum 4 fields are allowed.');\n          }\n        });\n        $('body').on('click', '.remove_image', function (e) {\n          $(this).parents('.row').remove();\n        });\n        $('body').on('click', '.removeImage', function (e) {\n          var roots = $(this).parents('.file_upload_wrap');\n          roots.find('.exist_image').val('');\n          roots.find('.preview-image').html('');\n        });\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(Props) {\n      if (Props.proquestions !== this.props.proquestions) {\n        this.setState({\n          loadQuestion: false\n        });\n\n        if (Props.proquestions[0].status === 'success') {\n          this.setState({\n            proQuestions: Props.proquestions[0].questions\n          }, function () {\n            this.displayQuestions();\n          });\n        }\n      }\n\n      if (Props.proupdatequestion !== this.props.proupdatequestion) {\n        /*if(Props.proupdatequestion[0].status==='success') {\n          this.props.updateQuestion(Props.proupdatequestion[0].status);\n        }*/\n      }\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm(currentStep) {\n      var error = 0;\n\n      if (('#step_' + currentStep + ' .require').length > 0) {\n        var currentType = $('#step_' + currentStep).data('type');\n\n        if (currentType === \"textarea\") {\n          if ($('#step_' + currentStep + ' textarea').val() === '') {\n            error++;\n          }\n        } else if (currentType === \"textbox\") {\n          if ($('#step_' + currentStep + ' input[type=\"text\"]').val() === '') {\n            error++;\n          }\n        } else if (currentType === \"checkbox\") {\n          if ($('#step_' + currentStep + ' input[type=\"checkbox\"]:checked').length === 0) {\n            error++;\n          } else {\n            $('#step_' + currentStep + ' input[type=\"checkbox\"]:checked').each(function () {\n              var currentCheck = $(this).parents('.options').attr('id');\n\n              if ($('#' + currentCheck + ' .optremarks').val() === '') {\n                $('#' + currentCheck + ' .optremarks').addClass('error');\n                error++;\n              } else {\n                $('#' + currentCheck + ' .optremarks').removeClass('error');\n              }\n            });\n          }\n        } else if (currentType === \"radio\") {\n          if ($('#step_' + currentStep + ' input[type=\"radio\"]:checked').length === 0) {\n            error++;\n          } else {\n            $('#step_' + currentStep + ' input[type=\"radio\"]:checked').each(function () {\n              var currentCheck = $(this).parents('.options').attr('id');\n\n              if ($('#' + currentCheck + ' .optremarks').val() === '') {\n                $('#' + currentCheck + ' .optremarks').addClass('error');\n                error++;\n              } else {\n                $('#' + currentCheck + ' .optremarks').removeClass('error');\n              }\n            });\n          }\n        }\n      }\n\n      return error;\n    }\n    /*\n    * the functions for our button\n    */\n\n  }, {\n    key: \"previousButton\",\n    value: function previousButton() {\n      if (this.state.currentStep > 1) {\n        return React.createElement(\"button\", {\n          className: \"btn animate-btn2 btn_grey ab-none btn_sm\",\n          type: \"button\",\n          onClick: this._prev,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        }, \"Previous\");\n      }\n    }\n  }, {\n    key: \"nextButton\",\n    value: function nextButton() {\n      if (this.state.currentStep !== $('.service-step-box').length) {\n        return React.createElement(\"button\", {\n          className: \"btn animate-btn2 btn_green ab-none float-right btn_sm\",\n          type: \"button\",\n          onClick: this._next,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          },\n          __self: this\n        }, \"Next\");\n      }\n    }\n  }, {\n    key: \"searchButton\",\n    value: function searchButton() {\n      if (this.state.currentStep === $('.service-step-box').length) {\n        return React.createElement(\"button\", {\n          className: \"btn animate-btn2 btn_green float-right btn_sm\",\n          type: \"button\",\n          onClick: this._search,\n          disabled: this.state.formLoad ? false : false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          },\n          __self: this\n        }, this.state.formLoad === true && React.createElement(\"span\", {\n          className: \"load-data-mini\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        }, \"Loading\"), \"Complete\");\n      }\n    }\n  }, {\n    key: \"displayQuestions\",\n    value: function displayQuestions() {\n      var _this2 = this;\n\n      var QuestionDetails = '';\n\n      if (this.state.proQuestions !== \"\") {\n        QuestionDetails = this.state.proQuestions.map(function (quesDet, index) {\n          var steps = parseInt(index) + 1;\n          return React.createElement(\"div\", {\n            className: \"service-step-box\",\n            \"data-type\": quesDet.quiz_answer_type,\n            id: 'step_' + steps,\n            key: index,\n            style: {\n              display: _this2.state.currentStep === steps ? 'block' : 'none'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 299\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: quesDet.quiz_required === 'Y' ? 'form-group require' : 'form-group',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 300\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            htmlFor: \"username\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 301\n            },\n            __self: this\n          }, quesDet.quiz_question, quesDet.quiz_required === \"Y\" && React.createElement(\"span\", {\n            className: \"required\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 304\n            },\n            __self: this\n          }, \"*\")), React.createElement(\"input\", {\n            type: \"hidden\",\n            value: quesDet.ques_quiz_id,\n            name: \"ques_id[]\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 307\n            },\n            __self: this\n          }), _this2.loadOptions(quesDet)));\n        });\n      }\n\n      this.setState({\n        QuestionDetails: QuestionDetails\n      });\n    }\n  }, {\n    key: \"loadOptions\",\n    value: function loadOptions(options) {\n      if (options) {\n        var opt = options;\n        var answerNew = '';\n\n        if (opt['quiz_answer_type'] === \"textarea\") {\n          return Object.entries(opt['options']).map(function (item, index) {\n            var ans = item[1];\n\n            if (ans.vendor_ans_content !== null && ans.vendor_ans_content !== \"\") {\n              answerNew = ans.vendor_ans_content;\n            } else if (ans.vendor_ans_content_temp !== null && ans.vendor_ans_content_temp !== \"\") {\n              answerNew = ans.vendor_ans_content_temp;\n            } else {\n              answerNew = '';\n            }\n\n            return React.createElement(\"div\", {\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 335\n              },\n              __self: this\n            }, React.createElement(\"input\", {\n              type: \"hidden\",\n              value: ans.ques_id,\n              name: 'ans_id_' + ans.ques_quiz_id + '[]',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 336\n              },\n              __self: this\n            }), React.createElement(\"textarea\", {\n              className: ans.quiz_required === \"Y\" ? 'form-control' : 'form-control',\n              name: 'ans_' + opt.ques_quiz_id + '[]',\n              placeholder: ans.ques_content,\n              defaultValue: answerNew,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 337\n              },\n              __self: this\n            }), ans.vendor_ans_content_temp !== '' && ans.vendor_ans_content_temp !== null && React.createElement(\"div\", {\n              class: \"qus_unverified\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 341\n              },\n              __self: this\n            }, \"Not Verified\"));\n          });\n        } else if (opt['quiz_answer_type'] === \"textbox\") {\n          return Object.entries(opt['options']).map(function (item, index) {\n            var ans = item[1];\n            var classes = 'form-control';\n\n            if (ans.ques_ref === \"P\") {\n              classes += ' price_valid';\n            } else if (ans.ques_ref === \"PC\") {\n              classes += ' postal_code_valid';\n            }\n\n            if (ans.vendor_ans_content !== null && ans.vendor_ans_content !== \"\") {\n              answerNew = ans.vendor_ans_content;\n            } else if (ans.vendor_ans_content_temp !== null && ans.vendor_ans_content_temp !== \"\") {\n              answerNew = ans.vendor_ans_content_temp;\n            } else {\n              answerNew = '';\n            }\n\n            return React.createElement(\"div\", {\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 369\n              },\n              __self: this\n            }, React.createElement(\"input\", {\n              type: \"hidden\",\n              value: ans.ques_id,\n              name: 'ans_id_' + opt.ques_quiz_id + '[]',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 370\n              },\n              __self: this\n            }), React.createElement(\"input\", {\n              className: classes,\n              onKeyPress: ans.ques_ref === \"P\" || ans.ques_ref === \"PC\" ? function (e) {\n                return isNumber(e);\n              } : '',\n              type: \"text\",\n              name: 'ans_' + opt.ques_quiz_id + '[]',\n              defaultValue: answerNew,\n              placeholder: ans.ques_content !== '' ? ans.ques_content : 'Enter Postal Code',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 371\n              },\n              __self: this\n            }), ans.vendor_ans_content_temp !== '' && ans.vendor_ans_content_temp !== null && React.createElement(\"div\", {\n              class: \"qus_unverified\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 377\n              },\n              __self: this\n            }, \"Not Verified\"));\n          });\n        } else if (opt['quiz_answer_type'] === \"checkbox\" || opt['quiz_answer_type'] === \"radio\") {\n          return Object.entries(opt['options']).map(function (item, index) {\n            var quiz_answer_type = opt['quiz_answer_type'];\n            var remarkanswerNew = '';\n\n            if (item[1].vendor_ans_remarks == 'Y' && item[1].vendor_ans_remark_content !== \"\") {\n              remarkanswerNew = item[1].vendor_ans_remark_content;\n            } else if (item[1].vendor_ans_remark_content_temp !== null && item[1].vendor_ans_remark_content_temp !== \"\") {\n              remarkanswerNew = item[1].vendor_ans_remark_content_temp;\n            } else {\n              remarkanswerNew = '';\n            }\n\n            return React.createElement(\"div\", {\n              className: \"options\",\n              key: index,\n              id: 'options_' + item[1].ques_id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 398\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: quiz_answer_type === \"radio\" ? 'custom_radio' : 'custom_checkbox',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 399\n              },\n              __self: this\n            }, React.createElement(\"input\", {\n              type: \"hidden\",\n              name: 'ans_id_' + opt.ques_quiz_id + '[]',\n              value: item[1].ques_id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 400\n              },\n              __self: this\n            }), React.createElement(\"input\", {\n              className: \"form-control options_check\",\n              type: opt['quiz_answer_type'],\n              value: item[1].ques_id,\n              name: 'ans_' + opt.ques_quiz_id + '[]',\n              defaultChecked: item[1].vendor_ans_answered === \"Y\" ? true : false,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 401\n              },\n              __self: this\n            }), React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 401\n              },\n              __self: this\n            }, item[1].ques_content)), item[1].ques_remarks === 'Y' && React.createElement(\"div\", {\n              className: \"form-group remarks\",\n              style: {\n                display: item[1].vendor_ans_answered === \"Y\" ? '' : 'none'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 404\n              },\n              __self: this\n            }, React.createElement(\"label\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 405\n              },\n              __self: this\n            }, \"Add Remarks\", React.createElement(\"span\", {\n              className: \"required\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 406\n              },\n              __self: this\n            }, \"*\")), React.createElement(\"textarea\", {\n              className: \"form-control optremarks\",\n              name: 'remarks_ans_' + opt.ques_quiz_id + '_' + item[1].ques_id,\n              defaultValue: remarkanswerNew,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 408\n              },\n              __self: this\n            }), item[1].vendor_ans_remark_content_temp !== '' && item[1].vendor_ans_remark_content_temp !== null && React.createElement(\"div\", {\n              class: \"qus_unverified\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 410\n              },\n              __self: this\n            }, \"Not Verified\")));\n          });\n        } else if (opt['quiz_answer_type'] === \"image\") {\n          return Object.entries(opt['options']).map(function (item, index) {\n            var imageanswerNew, captionAns;\n\n            if (item[1].vendor_ans_content !== null && item[1].vendor_ans_content !== \"\") {\n              imageanswerNew = item[1].vendor_ans_content;\n            } else if (item[1].vendor_ans_content_temp !== null && item[1].vendor_ans_content_temp !== \"\") {\n              imageanswerNew = item[1].vendor_ans_content_temp;\n            } else {\n              imageanswerNew = '';\n            }\n\n            console.log(imageanswerNew);\n\n            if (item[1].vendor_ans_img_caption !== null && item[1].vendor_ans_img_caption !== \"\") {\n              captionAns = item[1].vendor_ans_img_caption;\n            } else if (item[1].vendor_ans_img_caption_temp !== null && item[1].vendor_ans_img_caption_temp !== \"\") {\n              captionAns = item[1].vendor_ans_img_caption_temp;\n            } else {\n              captionAns = '';\n            }\n\n            return React.createElement(Row, {\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 443\n              },\n              __self: this\n            }, React.createElement(Col, {\n              md: 5,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 444\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"file_upload_wrap\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 445\n              },\n              __self: this\n            }, React.createElement(\"input\", {\n              type: \"hidden\",\n              value: item[1].ques_id,\n              name: 'ans_id_' + item[1].ques_quiz_id + '[]',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 446\n              },\n              __self: this\n            }), React.createElement(\"input\", {\n              type: \"hidden\",\n              className: \"exist_image\",\n              value: imageanswerNew,\n              name: 'img_check_' + item[1].ques_quiz_id + '[]',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 447\n              },\n              __self: this\n            }), React.createElement(\"input\", {\n              type: \"hidden\",\n              value: item[1].vendor_ans_id,\n              name: 'vendor_ans_id_' + item[1].ques_quiz_id + '[]',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 448\n              },\n              __self: this\n            }), React.createElement(\"input\", {\n              type: \"file\",\n              className: \"form-control\",\n              name: 'ans_' + item[1].ques_quiz_id + '[]',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 449\n              },\n              __self: this\n            }), React.createElement(\"div\", {\n              className: \"File_upload_Front\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 450\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              className: \"File_upload_value\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 451\n              },\n              __self: this\n            }, \"File Uploaded\"), React.createElement(\"span\", {\n              className: \"File_upload_btn\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 452\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"fa fa-paperclip\",\n              \"aria-hidden\": \"true\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 452\n              },\n              __self: this\n            }))), imageanswerNew !== '' && React.createElement(\"div\", {\n              className: \"preview-image\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 455\n              },\n              __self: this\n            }, React.createElement(\"a\", {\n              href: \"javascript:void(0);\",\n              class: \"pre-img-close removeImage\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 456\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              class: \"fa fa-times\",\n              \"aria-hidden\": \"true\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 456\n              },\n              __self: this\n            })), React.createElement(\"img\", {\n              src: mediaUrl + 'vendor_images/' + imageanswerNew,\n              alt: \"\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 457\n              },\n              __self: this\n            })))), React.createElement(Col, {\n              md: 5,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 462\n              },\n              __self: this\n            }, React.createElement(\"input\", {\n              type: \"text\",\n              name: 'ans_img_caption_' + item[1].ques_quiz_id + '[]',\n              className: \"form-control\",\n              placeholder: \"Eg. Caption\",\n              defaultValue: captionAns,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 463\n              },\n              __self: this\n            })), item[1].ques_type === \"M\" && React.createElement(Col, {\n              md: 2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 466\n              },\n              __self: this\n            }, React.createElement(\"button\", {\n              type: \"button\",\n              className: \"btn btn_testsm ab-none row-add-btn add_more_image\",\n              style: {\n                display: index === 0 ? '' : 'none'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 467\n              },\n              __self: this\n            }, \"Add\"), React.createElement(\"button\", {\n              type: \"button\",\n              className: \"btn btn_testsm ab-none row-add-btn remove_image\",\n              style: {\n                display: index !== 0 ? '' : 'none'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 468\n              },\n              __self: this\n            }, \"Remove\")));\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pro-service-form-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pro-service-form-innerblock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pro-service-form-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }, this.state.loadQuestion === true && LoadingSec, this.state.loadQuestion === false && this.state.proQuestions.length > 0 && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"psf-progress-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"psf-progress-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491\n        },\n        __self: this\n      }, this.state.currentProgress, \"%\"), \" Completed\"), React.createElement(ProgressBar, {\n        now: this.state.currentProgress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"psf-progress-percent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }, \"0%\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }, \"100 %\"))), React.createElement(\"div\", {\n        className: \"pro-service-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        encType: \"multipart/form-data\",\n        id: \"questionFrm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"hidden\",\n        name: \"app_name\",\n        value: appName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"hidden\",\n        name: \"service_id\",\n        value: Encrypt(this.state.serviceID, 'e'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"hidden\",\n        name: \"user_token\",\n        value: cookie.load('UserAuthToken'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }), this.state.QuestionDetails)), React.createElement(\"div\", {\n        className: \"alert-Field\",\n        style: {\n          display: 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }, \"Above field is mandatory\"), React.createElement(\"div\", {\n        className: \"pro-service-form-navs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }, this.previousButton(), this.nextButton(), this.searchButton())), this.state.loadQuestion === false && this.state.proQuestions.length === 0 && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }, \"Question are not available\"))))));\n    }\n  }]);\n\n  return Questions;\n}(Component);\n\nvar mapStateTopProps = function mapStateTopProps(state) {\n  return {\n    proquestions: state.proquestions,\n    proupdatequestion: state.proupdatequestion\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getQuestions: function getQuestions(params) {\n      dispatch({\n        type: GET_PRO_QUESTIONS,\n        params: params\n      });\n    },\n    getUpdateProQuestion: function getUpdateProQuestion(formPayload) {\n      dispatch({\n        type: GET_UPDATE_PRO_QUESTIONS,\n        formPayload: formPayload\n      });\n    }\n  };\n};\n\nexport default connect(mapStateTopProps, mapDispatchToProps)(withRouter(Questions));","map":{"version":3,"sources":["D:/text video/geniehut-Geni-App-Code/geniehut-Geni-App-Code/front-end/src/components/Account/GenPro/Questions.js"],"names":["React","Component","connect","withRouter","$","Row","Col","ProgressBar","GET_PRO_QUESTIONS","GET_UPDATE_PRO_QUESTIONS","cookie","CalculatePercentage","LoadingSec","Encrypt","isNumber","apiUrl","appName","mediaUrl","Questions","props","handleChange","event","target","name","value","setState","loginresponse","userToken","UserFullname","_search","_next","currentStep","state","error","validateForm","hide","parseInt","totlaStep","length","currentProgress","nextMove","show","animate","position","top","_prev","formLoad","form","formdata","window","FormData","current","ajax","url","data","serialize","cache","async","contentType","processData","dataType","type","success","result","textStatus","jqXHR","updateQuestion","status","getUpdateProQuestion","load","modalLogin","questionFrm1","loading","serviceID","proQuestions","QuestionDetails","loadQuestion","params","getQuestions","document","ready","on","types","parents","curretnID","attr","find","is","e","files","roots","fileName","html","htmls","append","last","val","first","alert","remove","Props","proquestions","questions","displayQuestions","proupdatequestion","currentType","each","currentCheck","addClass","removeClass","map","quesDet","index","steps","quiz_answer_type","display","quiz_required","quiz_question","ques_quiz_id","loadOptions","options","opt","answerNew","Object","entries","item","ans","vendor_ans_content","vendor_ans_content_temp","ques_id","ques_content","classes","ques_ref","remarkanswerNew","vendor_ans_remarks","vendor_ans_remark_content","vendor_ans_remark_content_temp","vendor_ans_answered","ques_remarks","imageanswerNew","captionAns","console","log","vendor_ans_img_caption","vendor_ans_img_caption_temp","vendor_ans_id","ques_type","previousButton","nextButton","searchButton","mapStateTopProps","mapDispatchToProps","dispatch","formPayload"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {   withRouter } from 'react-router-dom';\nimport $ from 'jquery';\nimport {Row, Col, ProgressBar } from 'react-bootstrap';\nimport 'react-intl-tel-input/dist/main.css';\nimport { GET_PRO_QUESTIONS, GET_UPDATE_PRO_QUESTIONS } from '../../../actions';\nimport cookie from 'react-cookies';\nimport {CalculatePercentage, LoadingSec, Encrypt, isNumber} from '../../Helpers/SettingHelper';\nimport {apiUrl, appName, mediaUrl } from \"../../Config/Config\";\n//var serialize = require('form-serialize');\nclass Questions extends Component {\n\n    constructor(props) {\n        super(props); \n        this.state = {\n            userToken:cookie.load('UserAuthToken'),\n            modalLogin: false,\n            questionFrm1:'',\n            currentStep: 1,\n            loading:true,\n            serviceID: this.props.serviceID,\n            proQuestions:[],\n            QuestionDetails:'',\n            currentProgress:0,\n            nextMove  : 1,\n            formLoad:false,\n            loadQuestion:true,\n          };\n    }\n   componentDidMount(){\n      let params = 'app_name='+appName+'&user_token='+this.state.userToken+'&service_id='+Encrypt(this.state.serviceID, 'e')\n      this.props.getQuestions(params);\n      $(document).ready(function() {\n        $('body').on('change', '.options_check', function() {\n          let types = $(this).parents('.service-step-box').data('type');\n          let curretnID = $(this).parents('.options').attr('id');\n          if(types===\"radio\") {\n            $(this).parents('.service-step-box').find('.remarks').hide();\n          }          \n          if ($(this).is(':checked')) {\n              $('#'+curretnID+' .remarks').show();\n          }\n          else{\n            $('#'+curretnID+' .remarks').hide();\n          }\n        });\n        $('body').on('change', 'input[type=\"file\"]', function(e) {\n          if(e.target.files!=='' && typeof e.target.files!==\"undefined\") {\n            var roots = $(this).parents('.file_upload_wrap');\n            var fileName = e.target.files[0].name;\n            roots.find('.File_upload_value').html(fileName);\n          }\n        });\n        $('body').on('click', '.add_more_image', function(e) {\n          var roots = $(this).parents('.form-group');\n          if(roots.find('.row').length<=3) {\n            var htmls = roots.find('.row:last-child').html();\n            roots.append('<div class=\"row\">'+htmls+'</div>');\n            roots.find('.row').last().find('.File_upload_value').html('File Uploaded');\n            roots.find('.row').last().find('.preview-image').html('');\n            \n            roots.find('.row').last().find('input[type=\"file\"]').val('');          \n            roots.find('.row').last().find('input[type=\"text\"]').val('');\n            roots.find('.add_more_image').hide();\n            roots.find('.remove_image').show();\n            roots.find('.add_more_image').first().show();\n            roots.find('.remove_image').first().hide();\n          }\n          else {\n            alert('Maximum 4 fields are allowed.');\n          }\n        });\n        $('body').on('click', '.remove_image', function(e) {\n           $(this).parents('.row').remove();\n        });\n        $('body').on('click', '.removeImage', function(e) {\n          var roots = $(this).parents('.file_upload_wrap');\n          roots.find('.exist_image').val('');\n          roots.find('.preview-image').html('');\n        })\n        \n        \n      });\n   }\n   componentWillReceiveProps(Props){\n      if(Props.proquestions !== this.props.proquestions){\n         this.setState({loadQuestion:false});\n          if(Props.proquestions[0].status==='success') {\n              this.setState({proQuestions:Props.proquestions[0].questions}, function() {\n                this.displayQuestions()\n              });\n          }\n      }\n      if(Props.proupdatequestion !== this.props.proupdatequestion){\n        /*if(Props.proupdatequestion[0].status==='success') {\n          this.props.updateQuestion(Props.proupdatequestion[0].status);\n        }*/\n      }\n      \n   }\n   handleChange = event => {\n      const {name, value} = event.target\n      this.setState({\n        [name]: value\n      })\n  }\n \n \n  loginresponse = (userToken, name) => {\n      if(userToken!=='' && typeof userToken!=='undefined') {   \n          \n        this.setState({userToken:userToken, UserFullname:name}, function() {          \n            this._search();\n        });\n      }\n    }\n   \n\n  _next = () => {\n    let currentStep = this.state.currentStep;\n    const error = this.validateForm(currentStep);\n    if(error===0) {\n      $('.alert-Field').hide();\n      currentStep = parseInt(currentStep) + 1\n      const totlaStep = $('.service-step-box').length;\n      const currentProgress = CalculatePercentage(totlaStep, this.state.nextMove);\n      this.setState({currentProgress:currentProgress});\n      this.setState({\n        currentStep: currentStep,\n        nextMove:parseInt(this.state.nextMove)+1\n      })\n      $('.service-step-box').hide()\n      $('#step_'+currentStep).show();\n      $('.modal-content').animate({\n        'scrollTop' : $('#step_'+currentStep).position().top-200\n      });\n    }\n    else {\n      $('.alert-Field').show();\n    }    \n  }\n    \n  _prev = () => {\n    let currentStep = this.state.currentStep\n    currentStep = currentStep - 1\n    this.setState({\n      currentStep: currentStep\n    })\n    $('.service-step-box').hide()\n    $('#step_'+currentStep).show();\n  }\n  \n  _search = () => {\n    \n    let currentStep = this.state.currentStep\n    const error = this.validateForm(currentStep);\n    if(error===0) {\n      if(this.state.userToken!=='' && typeof this.state.userToken!==\"undefined\") {\n        this.setState({formLoad:true});\n        $('.alert-Field').hide();\n        var form = $('#questionFrm');\n        var formdata = false;\n        if (window.FormData){\n            formdata = new FormData(form[0]);\n        }\n        \n        let current = this;\n        $.ajax({\n            url         : apiUrl+'genpro/updateProquestions',\n            data        : formdata ? formdata : form.serialize() ,\n            cache       : false,\n            async       : false,\n            contentType : false,\n            processData : false,\n            dataType    : \"JSON\",\n            type        : 'POST',\n            success     : function(result, textStatus, jqXHR){\n              current.props.updateQuestion(result.status);\n            }\n        });\n        this.props.getUpdateProQuestion(formdata);\n      }\n      else {\n      \n      \n      }\n    }\n    else {\n      $('.alert-Field').show();\n    }\n   \n  }\n\n  validateForm(currentStep) {\n    let error = 0;\n    if(('#step_'+currentStep+' .require').length>0) {\n        const currentType = $('#step_'+currentStep).data('type');\n        if(currentType===\"textarea\") {\n          if($('#step_'+currentStep+' textarea').val()===''){\n              error++;\n            }\n        }\n        else if(currentType===\"textbox\") {\n            if($('#step_'+currentStep+' input[type=\"text\"]').val()===''){\n              error++;\n            }\n        }\n        else if(currentType===\"checkbox\") {\n          if($('#step_'+currentStep+' input[type=\"checkbox\"]:checked').length===0){\n             error++;\n          }\n          else {\n             $('#step_'+currentStep+' input[type=\"checkbox\"]:checked').each(function() {\n                var currentCheck = $(this).parents('.options').attr('id');\n                if($('#'+currentCheck+' .optremarks').val()==='') {\n                  $('#'+currentCheck+' .optremarks').addClass('error');\n                  error++;\n                }\n                else {\n                  $('#'+currentCheck+' .optremarks').removeClass('error');\n                }\n            });\n          }\n        }\n        else if(currentType===\"radio\") {\n          if($('#step_'+currentStep+' input[type=\"radio\"]:checked').length===0){\n             error++;\n          }\n           else {\n             $('#step_'+currentStep+' input[type=\"radio\"]:checked').each(function() {\n                var currentCheck = $(this).parents('.options').attr('id');\n                if($('#'+currentCheck+' .optremarks').val()==='') {\n                  $('#'+currentCheck+' .optremarks').addClass('error');\n                  error++;\n                }\n                else {\n                  $('#'+currentCheck+' .optremarks').removeClass('error');\n                }\n            });\n          }\n        }\n    }\n    return error;\n  }\n\n    /*\n    * the functions for our button\n    */\n    previousButton() {\n      if(this.state.currentStep>1) {  \n        return (\n            <button \n              className=\"btn animate-btn2 btn_grey ab-none btn_sm\" \n              type=\"button\" onClick={this._prev}>\n            Previous\n            </button>\n          )\n      }\n    \n    }\n\nnextButton(){\n      if(this.state.currentStep!==$('.service-step-box').length) {  \n      return (\n        <button \n          className=\"btn animate-btn2 btn_green ab-none float-right btn_sm\" \n          type=\"button\" onClick={this._next}>\n        Next\n        </button>        \n      )\n      }\n\n}\n\nsearchButton(){\n    if(this.state.currentStep===$('.service-step-box').length) {  \n      return (\n        <button \n          className=\"btn animate-btn2 btn_green float-right btn_sm\" \n          type=\"button\" onClick={this._search} disabled={(this.state.formLoad)?false:false}>\n          {this.state.formLoad ===true &&\n          <span className=\"load-data-mini\">Loading</span> \n          }\n        Complete\n        </button>        \n      )\n    }\n  \n}\n\n  displayQuestions() {\n    let QuestionDetails = '';\n    if(this.state.proQuestions!==\"\") {\n      QuestionDetails = this.state.proQuestions.map((quesDet, index) =>{\n        let steps = parseInt(index)+1;\n          return (\n              <div className=\"service-step-box\" data-type={quesDet.quiz_answer_type} id={'step_'+steps} key={index} style={{display:(this.state.currentStep===steps)?'block':'none'}}>\n                  <div className={(quesDet.quiz_required==='Y')?'form-group require':'form-group'}>\n                    <label htmlFor=\"username\">\n                        {quesDet.quiz_question}\n                        {(quesDet.quiz_required===\"Y\") &&\n                          <span className=\"required\">*</span>\n                        }\n                    </label>\n                    <input type=\"hidden\" value={quesDet.ques_quiz_id} name=\"ques_id[]\" />\n                    {this.loadOptions(quesDet)}\n                  </div>\n            </div>\n          )\n      });\n    }\n    this.setState({QuestionDetails:QuestionDetails});\n  }\n\n  loadOptions(options) {\n      if(options) {\n        const opt = options;        \n        let answerNew = '';\n        if(opt['quiz_answer_type']===\"textarea\") {\n          return Object.entries(opt['options']).map((item, index) =>{\n            let ans = item[1]; \n            if(ans.vendor_ans_content!==null && ans.vendor_ans_content!==\"\") {\n              answerNew = ans.vendor_ans_content;\n            }\n            else if(ans.vendor_ans_content_temp!==null && ans.vendor_ans_content_temp!==\"\"){\n              answerNew = ans.vendor_ans_content_temp;\n            }\n            else {\n              answerNew = '';\n            }\n          \n          return(\n            <div key={index}>\n              <input type=\"hidden\" value={ans.ques_id} name={'ans_id_'+ans.ques_quiz_id+'[]'} />\n              <textarea\n              className={(ans.quiz_required===\"Y\")?'form-control':'form-control'}\n              name={'ans_'+opt.ques_quiz_id+'[]'} placeholder={ans.ques_content} defaultValue={answerNew}></textarea>\n              {(ans.vendor_ans_content_temp!=='' && ans.vendor_ans_content_temp!==null) &&\n                <div class=\"qus_unverified\">Not Verified</div>\n              }\n            </div>\n          )\n          });\n        }\n        else if(opt['quiz_answer_type']===\"textbox\") {\n          return Object.entries(opt['options']).map((item, index) =>{\n            let ans = item[1]; \n            let classes = 'form-control';\n            if(ans.ques_ref===\"P\") {\n              classes+=' price_valid';\n            }\n            else if(ans.ques_ref===\"PC\") {\n              classes+=' postal_code_valid';\n            }\n            if(ans.vendor_ans_content!==null && ans.vendor_ans_content!==\"\") {\n              answerNew = ans.vendor_ans_content;\n            }\n            else if(ans.vendor_ans_content_temp!==null && ans.vendor_ans_content_temp!==\"\"){\n              answerNew = ans.vendor_ans_content_temp;\n            }\n            else {\n              answerNew = '';\n            }\n            \n\n          return(\n            <div key={index}>\n              <input type=\"hidden\" value={ans.ques_id} name={'ans_id_'+opt.ques_quiz_id+'[]'} />\n              <input\n              className={classes} onKeyPress={(ans.ques_ref===\"P\" || ans.ques_ref===\"PC\")?(e) => isNumber(e):''}\n              type=\"text\" name={'ans_'+opt.ques_quiz_id+'[]'} defaultValue={answerNew}\n              placeholder={(ans.ques_content!=='')?ans.ques_content:'Enter Postal Code'}\n              />\n              {(ans.vendor_ans_content_temp!=='' && ans.vendor_ans_content_temp!==null) &&\n                <div class=\"qus_unverified\">Not Verified</div>\n              }\n            </div>\n          )\n          });\n        }\n        else if(opt['quiz_answer_type']===\"checkbox\" || opt['quiz_answer_type']===\"radio\") {\n            return Object.entries(opt['options']).map((item, index) =>{\n              let quiz_answer_type = opt['quiz_answer_type'];\n              let remarkanswerNew = '';\n              if(item[1].vendor_ans_remarks =='Y' && item[1].vendor_ans_remark_content!==\"\") {\n                remarkanswerNew = item[1].vendor_ans_remark_content;\n              }\n              else if(item[1].vendor_ans_remark_content_temp!==null && item[1].vendor_ans_remark_content_temp!==\"\"){\n                remarkanswerNew = item[1].vendor_ans_remark_content_temp;\n              }\n              else {\n                remarkanswerNew = '';\n              }\n\n                return (\n                  <div className=\"options\" key={index} id={'options_'+item[1].ques_id}>\n                    <div className={(quiz_answer_type===\"radio\")?'custom_radio':'custom_checkbox'}>\n                      <input type=\"hidden\" name={'ans_id_'+opt.ques_quiz_id+'[]'} value={item[1].ques_id} />\n                      <input className=\"form-control options_check\" type={opt['quiz_answer_type']} value={item[1].ques_id} name={'ans_'+opt.ques_quiz_id+'[]'} defaultChecked={(item[1].vendor_ans_answered===\"Y\")?true:false} /><span>{item[1].ques_content}</span>\n                    </div>\n                    { (item[1].ques_remarks==='Y') &&\n                    <div className=\"form-group remarks\" style={{display:(item[1].vendor_ans_answered===\"Y\")?'':'none'}}>\n                        <label >\n                            Add Remarks<span className=\"required\">*</span>                          \n                        </label>\n                        <textarea className=\"form-control optremarks\" name={'remarks_ans_'+opt.ques_quiz_id+'_'+item[1].ques_id} defaultValue={remarkanswerNew}></textarea>\n                        {(item[1].vendor_ans_remark_content_temp!=='' && item[1].vendor_ans_remark_content_temp!==null) &&\n                          <div class=\"qus_unverified\">Not Verified</div>\n                        }\n                      </div>\n                    }\n                  </div>\n                )\n            });\n        }\n        else if(opt['quiz_answer_type']===\"image\") {\n          return Object.entries(opt['options']).map((item, index) =>{\n            let imageanswerNew, captionAns;\n              if(item[1].vendor_ans_content!==null && item[1].vendor_ans_content!==\"\") {\n                imageanswerNew = item[1].vendor_ans_content;\n              }\n              else if(item[1].vendor_ans_content_temp!==null && item[1].vendor_ans_content_temp!==\"\"){\n                imageanswerNew = item[1].vendor_ans_content_temp;\n              }\n              else {\n                imageanswerNew = '';\n              }\n              console.log(imageanswerNew)\n\n              if(item[1].vendor_ans_img_caption!==null && item[1].vendor_ans_img_caption!==\"\") {\n                captionAns = item[1].vendor_ans_img_caption;\n              }\n              else if(item[1].vendor_ans_img_caption_temp!==null && item[1].vendor_ans_img_caption_temp!==\"\"){\n                captionAns = item[1].vendor_ans_img_caption_temp;\n              }\n              else {\n                captionAns = '';\n              }\n\n          return(\n            <Row key={index}>\n              <Col md={5}>\n                    <div className=\"file_upload_wrap\">                      \n                        <input type=\"hidden\" value={item[1].ques_id} name={'ans_id_'+item[1].ques_quiz_id+'[]'} />\n                        <input type=\"hidden\" className=\"exist_image\" value={imageanswerNew} name={'img_check_'+item[1].ques_quiz_id+'[]'} />\n                        <input type=\"hidden\" value={item[1].vendor_ans_id} name={'vendor_ans_id_'+item[1].ques_quiz_id+'[]'} />                        \n                        <input type=\"file\" className=\"form-control\" name={'ans_'+item[1].ques_quiz_id+'[]'}  />\n                        <div className=\"File_upload_Front\">\n                            <span className=\"File_upload_value\">File Uploaded</span>\n                            <span className=\"File_upload_btn\"><i className=\"fa fa-paperclip\" aria-hidden=\"true\"></i></span>\n                        </div>\n                        {(imageanswerNew!=='') &&\n                          <div className=\"preview-image\">\n                            <a href=\"javascript:void(0);\"  class=\"pre-img-close removeImage\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></a>\n                            <img src={mediaUrl+'vendor_images/'+imageanswerNew} alt=\"\" />\n                          </div>\n                        }\n                    </div>\n              </Col>\n              <Col md={5}>\n                    <input type=\"text\" name={'ans_img_caption_'+item[1].ques_quiz_id+'[]'} className=\"form-control\" placeholder=\"Eg. Caption\" defaultValue={captionAns} />\n              </Col>\n              { (item[1].ques_type===\"M\") &&\n                <Col md={2}>\n                    <button type=\"button\" className=\"btn btn_testsm ab-none row-add-btn add_more_image\" style={{display:(index===0)?'':'none'}}>Add</button>\n                    <button type=\"button\" className=\"btn btn_testsm ab-none row-add-btn remove_image\" style={{display:(index!==0)?'':'none'}}>Remove</button>\n                </Col>\n              }\n          </Row>\n          )\n          });\n        }\n      }\n  }\n\n  render() {     \n    return (\n          <div>\n            <div className=\"pro-service-form-block\">\n                  <div className=\"container\">\n                      <div className=\"pro-service-form-innerblock\">\n                          <div className=\"pro-service-form-wrap\">\n                            {(this.state.loadQuestion===true) &&\n                              LoadingSec\n                            }\n                            { (this.state.loadQuestion===false && this.state.proQuestions.length>0) &&\n                              <div>\n                                <div className=\"psf-progress-wrapper\">\n                                    <div className=\"psf-progress-text\"><span>{this.state.currentProgress}%</span> Completed</div>\n                                    <ProgressBar now={this.state.currentProgress} />\n                                    <div className=\"psf-progress-percent\"><span>0%</span><span>100 %</span></div>\n                                </div>\n                                <div className=\"pro-service-form\">\n                                    <form  encType=\"multipart/form-data\" id=\"questionFrm\">\n                                      <input type=\"hidden\" name=\"app_name\" value={appName} />\n                                      <input type=\"hidden\" name=\"service_id\" value={Encrypt(this.state.serviceID,'e')} />\n                                      <input type=\"hidden\" name=\"user_token\" value={cookie.load('UserAuthToken')} />\n                                       \n                                      {this.state.QuestionDetails}\n                                    </form>\n                                </div>\n                                <div className=\"alert-Field\" style={{display:'none'}}>Above field is mandatory</div>\n                                <div className=\"pro-service-form-navs\">\n                                  {this.previousButton()}\n                                  {this.nextButton()}\n                                  {this.searchButton()}\n                                </div>\n                              </div>\n                            }\n                            { (this.state.loadQuestion===false && this.state.proQuestions.length===0) &&\n                              <div>Question are not available</div>\n                            }\n                          </div>\n                      </div>\n                  </div>\n              </div>\n              \n          </div>\n    );\n  }\n}\n\nconst mapStateTopProps = (state) => {\n  return {\n     proquestions     : state.proquestions,\n     proupdatequestion:state.proupdatequestion\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getQuestions: (params) => {\n      dispatch({ type: GET_PRO_QUESTIONS, params});\n    },\n    getUpdateProQuestion: (formPayload) => {\n      dispatch({ type: GET_UPDATE_PRO_QUESTIONS, formPayload});\n    },\n     \n  }\n}\nexport default connect(mapStateTopProps, mapDispatchToProps)(withRouter(Questions));\n"]},"metadata":{},"sourceType":"module"}