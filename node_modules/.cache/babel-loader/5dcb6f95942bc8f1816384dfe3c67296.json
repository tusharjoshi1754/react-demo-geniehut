{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetLoginData),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetUnsetToken);\n\n/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_LOGINDATA, SET_LOGINDATA, GET_UNSETTOKEN, SET_UNSETTOKEN } from '../actions';\nimport { apiUrl, deliveryId } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\nexport var watchGetLoginData =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetLoginData() {\n  return _regeneratorRuntime.wrap(function watchGetLoginData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery(GET_LOGINDATA, workerGetLoginData);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, watchGetLoginData);\n});\n\nfunction workerGetLoginData(_ref) {\n  var formPayload, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetLoginData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          formPayload = _ref.formPayload;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(getLoginData, formPayload);\n\n        case 4:\n          result = _context2.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context2.next = 9;\n          return put({\n            type: SET_LOGINDATA,\n            value: resultArr\n          });\n\n        case 9:\n          _context2.next = 14;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log('login failed');\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked, null, [[1, 11]]);\n}\n\nfunction getLoginData(formPayload) {\n  return Axios.post(apiUrl + 'user/user_login', formPayload);\n}\n/* logout */\n\n\nexport var watchGetUnsetToken =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetUnsetToken() {\n  return _regeneratorRuntime.wrap(function watchGetUnsetToken$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeEvery(GET_UNSETTOKEN, workerGetUnsetToken);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, watchGetUnsetToken);\n});\n\nfunction workerGetUnsetToken(_ref2) {\n  var formPayload, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetUnsetToken$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          formPayload = _ref2.formPayload;\n          _context4.prev = 1;\n          _context4.next = 4;\n          return call(getUnsetToken, formPayload);\n\n        case 4:\n          result = _context4.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context4.next = 9;\n          return put({\n            type: SET_UNSETTOKEN,\n            value: resultArr\n          });\n\n        case 9:\n          _context4.next = 14;\n          break;\n\n        case 11:\n          _context4.prev = 11;\n          _context4.t0 = _context4[\"catch\"](1);\n          console.log('logout failed');\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked2, null, [[1, 11]]);\n}\n\nfunction getUnsetToken(formPayload) {\n  return Axios.post(apiUrl + 'user/user_logout', formPayload);\n}","map":{"version":3,"sources":["D:/text video/geniehut-Geni-App-Code/geniehut-Geni-App-Code/front-end/src/sagas/login.js"],"names":["workerGetLoginData","workerGetUnsetToken","takeEvery","call","put","GET_LOGINDATA","SET_LOGINDATA","GET_UNSETTOKEN","SET_UNSETTOKEN","apiUrl","deliveryId","Axios","cookie","watchGetLoginData","formPayload","getLoginData","result","resultArr","push","data","type","value","console","log","post","watchGetUnsetToken","getUnsetToken"],"mappings":";;;;yBAWUA,kB;;;yBAwBAC,mB;;AAnCV;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,cAAvC,EAAuDC,cAAvD,QAA6E,YAA7E;AACA,SAAQC,MAAR,EAAgBC,UAAhB,QAAkC,6BAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,OAAO,IAAMC,iBAAiB;AAAA;AAAA,yBAAG,SAApBA,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/B,iBAAMX,SAAS,CAACG,aAAD,EAAgBL,kBAAhB,CAAf;;AAD+B;AAAA;AAAA;AAAA;AAAA;AAAA,KAApBa,iBAAoB;AAAA,CAAH,CAAvB;;AAIP,SAAUb,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+Bc,UAAAA,WAA/B,QAA+BA,WAA/B;AAAA;AAAA;AAGgB,iBAAMX,IAAI,CAACY,YAAD,EAAeD,WAAf,CAAV;;AAHhB;AAGOE,UAAAA,MAHP;AAIKC,UAAAA,SAJL,GAIiB,EAJjB;AAKCA,UAAAA,SAAS,CAACC,IAAV,CAAeF,MAAM,CAACG,IAAtB;AALD;AAMI,iBAAMf,GAAG,CAAC;AAAEgB,YAAAA,IAAI,EAAEd,aAAR;AAAuBe,YAAAA,KAAK,EAAEJ;AAA9B,WAAD,CAAT;;AANJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AASIK,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,SAASR,YAAT,CAAsBD,WAAtB,EAAmC;AAC7B,SAAOH,KAAK,CAACa,IAAN,CAAWf,MAAM,GAAC,iBAAlB,EAAqCK,WAArC,CAAP;AACL;AAED;;;AAEA,OAAO,IAAMW,kBAAkB;AAAA;AAAA,yBAAG,SAArBA,kBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChC,iBAAMvB,SAAS,CAACK,cAAD,EAAiBN,mBAAjB,CAAf;;AADgC;AAAA;AAAA;AAAA;AAAA;AAAA,KAArBwB,kBAAqB;AAAA,CAAH,CAAxB;;AAIP,SAAUxB,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgCa,UAAAA,WAAhC,SAAgCA,WAAhC;AAAA;AAAA;AAEgB,iBAAMX,IAAI,CAACuB,aAAD,EAAgBZ,WAAhB,CAAV;;AAFhB;AAEOE,UAAAA,MAFP;AAGMC,UAAAA,SAHN,GAGkB,EAHlB;AAIEA,UAAAA,SAAS,CAACC,IAAV,CAAeF,MAAM,CAACG,IAAtB;AAJF;AAKI,iBAAMf,GAAG,CAAC;AAAEgB,YAAAA,IAAI,EAAEZ,cAAR;AAAwBa,YAAAA,KAAK,EAAEJ;AAA/B,WAAD,CAAT;;AALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQIK,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAASG,aAAT,CAAuBZ,WAAvB,EAAoC;AAC7B,SAAOH,KAAK,CAACa,IAAN,CAAWf,MAAM,GAAC,kBAAlB,EAAsCK,WAAtC,CAAP;AACN","sourcesContent":["/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_LOGINDATA, SET_LOGINDATA, GET_UNSETTOKEN, SET_UNSETTOKEN } from '../actions';\nimport {apiUrl, deliveryId } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\n\nexport const watchGetLoginData = function* () {\n  yield takeEvery(GET_LOGINDATA, workerGetLoginData);\n}\n\nfunction* workerGetLoginData({ formPayload }) {\n  try {\n      \n const result = yield call(getLoginData, formPayload);\n\tvar resultArr = [];\n\tresultArr.push(result.data);\n    yield put({ type: SET_LOGINDATA, value: resultArr });\n  } \n  catch {\n    console.log('login failed');\n  }\n} \n\n\nfunction getLoginData(formPayload) {\n      return Axios.post(apiUrl+'user/user_login', formPayload);\n} \n\n/* logout */\n\nexport const watchGetUnsetToken = function* () {\n  yield takeEvery(GET_UNSETTOKEN, workerGetUnsetToken);\n}\n\nfunction* workerGetUnsetToken({ formPayload }) {\n  try {\n const result = yield call(getUnsetToken, formPayload);\n  var resultArr = [];\n  resultArr.push(result.data);\n    yield put({ type: SET_UNSETTOKEN, value: resultArr });\n  } \n  catch {\n    console.log('logout failed');\n  }\n} \n\n\nfunction getUnsetToken(formPayload) {\n       return Axios.post(apiUrl+'user/user_logout', formPayload);\n}"]},"metadata":{},"sourceType":"module"}