{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetJobApplied),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetCareers);\n\n/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_CAREERS, SET_CAREERS, GET_JOBAPPLIED, SET_JOBAPPLIED } from '../actions';\nimport { apiUrl, deliveryId, appName } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\nexport var watchGetJobApplied =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetJobApplied() {\n  return _regeneratorRuntime.wrap(function watchGetJobApplied$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery(GET_JOBAPPLIED, workerGetJobApplied);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, watchGetJobApplied);\n});\n\nfunction workerGetJobApplied(_ref) {\n  var formPayload, Config, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetJobApplied$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          formPayload = _ref.formPayload, Config = _ref.Config;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(getJobApplied, formPayload, Config);\n\n        case 4:\n          result = _context2.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context2.next = 9;\n          return put({\n            type: SET_JOBAPPLIED,\n            value: resultArr\n          });\n\n        case 9:\n          _context2.next = 14;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log('get data failed');\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked, null, [[1, 11]]);\n}\n\nfunction getJobApplied(formPayload, Config) {\n  return Axios.post(apiUrl + 'careers/apply_career_job', formPayload, Config);\n}\n/* genrun customerleads */\n\n\nexport var watchGetCareers =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetCareers() {\n  return _regeneratorRuntime.wrap(function watchGetCareers$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeEvery(GET_CAREERS, workerGetCareers);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, watchGetCareers);\n});\n\nfunction workerGetCareers(_ref2) {\n  var career_id, uri, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetCareers$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          career_id = _ref2.career_id;\n          _context4.prev = 1;\n          uri = apiUrl + 'careers/carrer_jobs?app_name=' + appName + '&career_id=' + career_id;\n          _context4.next = 5;\n          return call(Axios.get, uri);\n\n        case 5:\n          result = _context4.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context4.next = 10;\n          return put({\n            type: SET_CAREERS,\n            value: resultArr\n          });\n\n        case 10:\n          _context4.next = 15;\n          break;\n\n        case 12:\n          _context4.prev = 12;\n          _context4.t0 = _context4[\"catch\"](1);\n          console.log('get data failed');\n\n        case 15:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked2, null, [[1, 12]]);\n}","map":{"version":3,"sources":["D:/text video/geniehut-Geni-App-Code/geniehut-Geni-App-Code/front-end/src/sagas/career.js"],"names":["workerGetJobApplied","workerGetCareers","takeEvery","call","put","GET_CAREERS","SET_CAREERS","GET_JOBAPPLIED","SET_JOBAPPLIED","apiUrl","deliveryId","appName","Axios","cookie","watchGetJobApplied","formPayload","Config","getJobApplied","result","resultArr","push","data","type","value","console","log","post","watchGetCareers","career_id","uri","get"],"mappings":";;;;yBAUUA,mB;;;yBAuBAC,gB;;AAjCV;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,cAAnC,EAAmDC,cAAnD,QAAyE,YAAzE;AACA,SAAQC,MAAR,EAAgBC,UAAhB,EAA4BC,OAA5B,QAA2C,6BAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,OAAO,IAAMC,kBAAkB;AAAA;AAAA,yBAAG,SAArBA,kBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChC,iBAAMZ,SAAS,CAACK,cAAD,EAAiBP,mBAAjB,CAAf;;AADgC;AAAA;AAAA;AAAA;AAAA;AAAA,KAArBc,kBAAqB;AAAA,CAAH,CAAxB;;AAGP,SAAUd,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgCe,UAAAA,WAAhC,QAAgCA,WAAhC,EAA6CC,MAA7C,QAA6CA,MAA7C;AAAA;AAAA;AAEgB,iBAAMb,IAAI,CAACc,aAAD,EAAgBF,WAAhB,EAA6BC,MAA7B,CAAV;;AAFhB;AAEOE,UAAAA,MAFP;AAGMC,UAAAA,SAHN,GAGkB,EAHlB;AAIEA,UAAAA,SAAS,CAACC,IAAV,CAAeF,MAAM,CAACG,IAAtB;AAJF;AAKI,iBAAMjB,GAAG,CAAC;AAAEkB,YAAAA,IAAI,EAAEd,cAAR;AAAwBe,YAAAA,KAAK,EAAEJ;AAA/B,WAAD,CAAT;;AALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQIK,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAASR,aAAT,CAAuBF,WAAvB,EAAmCC,MAAnC,EAA2C;AACpC,SAAOJ,KAAK,CAACc,IAAN,CAAWjB,MAAM,GAAC,0BAAlB,EAA8CM,WAA9C,EAA2DC,MAA3D,CAAP;AACN;AAGD;;;AAEA,OAAO,IAAMW,eAAe;AAAA;AAAA,yBAAG,SAAlBA,eAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7B,iBAAMzB,SAAS,CAACG,WAAD,EAAcJ,gBAAd,CAAf;;AAD6B;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB0B,eAAkB;AAAA,CAAH,CAArB;;AAGP,SAAU1B,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6B2B,UAAAA,SAA7B,SAA6BA,SAA7B;AAAA;AAEUC,UAAAA,GAFV,GAEgBpB,MAAM,GAAC,+BAAP,GAAuCE,OAAvC,GAA+C,aAA/C,GAA6DiB,SAF7E;AAAA;AAGmB,iBAAMzB,IAAI,CAACS,KAAK,CAACkB,GAAP,EAAYD,GAAZ,CAAV;;AAHnB;AAGUX,UAAAA,MAHV;AAIQC,UAAAA,SAJR,GAIoB,EAJpB;AAKIA,UAAAA,SAAS,CAACC,IAAV,CAAeF,MAAM,CAACG,IAAtB;AALJ;AAMM,iBAAMjB,GAAG,CAAC;AAAEkB,YAAAA,IAAI,EAAEhB,WAAR;AAAqBiB,YAAAA,KAAK,EAAEJ;AAA5B,WAAD,CAAT;;AANN;AAAA;AAAA;;AAAA;AAAA;AAAA;AASMK,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_CAREERS, SET_CAREERS, GET_JOBAPPLIED, SET_JOBAPPLIED } from '../actions';\nimport {apiUrl, deliveryId, appName } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\n\nexport const watchGetJobApplied = function* () {\n  yield takeEvery(GET_JOBAPPLIED, workerGetJobApplied);\n}\nfunction* workerGetJobApplied({ formPayload, Config }) {\n  try {\n const result = yield call(getJobApplied, formPayload, Config);\n  var resultArr = [];\n  resultArr.push(result.data);\n    yield put({ type: SET_JOBAPPLIED, value: resultArr });\n  } \n  catch {\n    console.log('get data failed');\n  }\n} \n\n\nfunction getJobApplied(formPayload,Config) {\n       return Axios.post(apiUrl+'careers/apply_career_job', formPayload, Config);\n} \n\n\n/* genrun customerleads */\n\nexport const watchGetCareers = function* () {\n  yield takeEvery(GET_CAREERS, workerGetCareers);\n}\nfunction* workerGetCareers({ career_id }) {\n    try {\n    const uri = apiUrl+'careers/carrer_jobs?app_name='+appName+'&career_id='+career_id;\n    const result = yield call(Axios.get, uri);\n    var resultArr = [];\n    resultArr.push(result.data);\n      yield put({ type: SET_CAREERS, value: resultArr });\n    } \n    catch {\n      console.log('get data failed');\n    }\n} \n\n"]},"metadata":{},"sourceType":"module"}