{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetGenMessage);\n\n/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_GEN_MESSAGE, SET_GEN_MESSAGE } from '../actions';\nimport { apiUrl, appName } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\nexport var watchGetGenMessage =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetGenMessage() {\n  return _regeneratorRuntime.wrap(function watchGetGenMessage$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery(GET_GEN_MESSAGE, workerGetGenMessage);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, watchGetGenMessage);\n});\n\nfunction workerGetGenMessage(_ref) {\n  var call_id, chattype, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetGenMessage$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          call_id = _ref.call_id, chattype = _ref.chattype;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(getGenMessage, call_id, chattype);\n\n        case 4:\n          result = _context2.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context2.next = 9;\n          return put({\n            type: SET_GEN_MESSAGE,\n            value: resultArr\n          });\n\n        case 9:\n          _context2.next = 14;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log('login failed');\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked, null, [[1, 11]]);\n}\n\nfunction getGenMessage(param, chattype) {\n  return Axios.get(apiUrl + 'genmessage/getMessage?call_id=' + param + '&chattype=' + chattype);\n}","map":{"version":3,"sources":["D:/text video/geniehut-Geni-App-Code/geniehut-Geni-App-Code/front-end/src/sagas/genmessage.js"],"names":["workerGetGenMessage","takeEvery","call","put","GET_GEN_MESSAGE","SET_GEN_MESSAGE","apiUrl","appName","Axios","cookie","watchGetGenMessage","call_id","chattype","getGenMessage","result","resultArr","push","data","type","value","console","log","param","get"],"mappings":";;;;yBAWUA,mB;;AAXV;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,YAAjD;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,6BAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,OAAO,IAAMC,kBAAkB;AAAA;AAAA,yBAAG,SAArBA,kBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChC,iBAAMT,SAAS,CAACG,eAAD,EAAkBJ,mBAAlB,CAAf;;AADgC;AAAA;AAAA;AAAA;AAAA;AAAA,KAArBU,kBAAqB;AAAA,CAAH,CAAxB;;AAIP,SAAUV,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+BW,UAAAA,OAA/B,QAA+BA,OAA/B,EAAwCC,QAAxC,QAAwCA,QAAxC;AAAA;AAAA;AAEmB,iBAAMV,IAAI,CAACW,aAAD,EAAgBF,OAAhB,EAAyBC,QAAzB,CAAV;;AAFnB;AAEUE,UAAAA,MAFV;AAGQC,UAAAA,SAHR,GAGoB,EAHpB;AAIGA,UAAAA,SAAS,CAACC,IAAV,CAAeF,MAAM,CAACG,IAAtB;AAJH;AAKI,iBAAMd,GAAG,CAAC;AAAEe,YAAAA,IAAI,EAAEb,eAAR;AAAyBc,YAAAA,KAAK,EAAEJ;AAAhC,WAAD,CAAT;;AALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQIK,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,SAASR,aAAT,CAAuBS,KAAvB,EAA8BV,QAA9B,EAAwC;AACpC,SAAOJ,KAAK,CAACe,GAAN,CAAUjB,MAAM,GAAC,gCAAP,GAAwCgB,KAAxC,GAA8C,YAA9C,GAA2DV,QAArE,CAAP;AACH","sourcesContent":["/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_GEN_MESSAGE, SET_GEN_MESSAGE } from '../actions';\nimport { apiUrl, appName } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\n\nexport const watchGetGenMessage = function* () {\n  yield takeEvery(GET_GEN_MESSAGE, workerGetGenMessage);\n}\n\nfunction* workerGetGenMessage({call_id, chattype}) {\n  try {    \n    const result = yield call(getGenMessage, call_id, chattype);\n    var resultArr = [];\n\t  resultArr.push(result.data);\n    yield put({ type: SET_GEN_MESSAGE, value: resultArr });\n  } \n  catch {\n    console.log('login failed');\n  }\n} \n\nfunction getGenMessage(param, chattype) {\n    return Axios.get(apiUrl+'genmessage/getMessage?call_id='+param+'&chattype='+chattype);\n}"]},"metadata":{},"sourceType":"module"}