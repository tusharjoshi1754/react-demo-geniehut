{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetProContact);\n\n/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_CONTACT, SET_CONTACT } from '../actions';\nimport { apiUrl } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\nexport var watchGetProContact =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetProContact() {\n  return _regeneratorRuntime.wrap(function watchGetProContact$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery(GET_CONTACT, workerGetProContact);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, watchGetProContact);\n});\n\nfunction workerGetProContact(_ref) {\n  var formPayload, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetProContact$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          formPayload = _ref.formPayload;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(getProContact, formPayload);\n\n        case 4:\n          result = _context2.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context2.next = 9;\n          return put({\n            type: SET_CONTACT,\n            value: resultArr\n          });\n\n        case 9:\n          _context2.next = 14;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log('login failed');\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked, null, [[1, 11]]);\n}\n\nfunction getProContact(formPayload) {\n  var qs = require('qs');\n\n  return Axios.post(apiUrl + 'genpro/contactPro', qs.stringify(formPayload));\n}","map":{"version":3,"sources":["D:/text video/geniehut-Geni-App-Code/geniehut-Geni-App-Code/front-end/src/sagas/procontact.js"],"names":["workerGetProContact","takeEvery","call","put","GET_CONTACT","SET_CONTACT","apiUrl","Axios","cookie","watchGetProContact","formPayload","getProContact","result","resultArr","push","data","type","value","console","log","qs","require","post","stringify"],"mappings":";;;;yBAWUA,mB;;AAXV;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAwC,YAAxC;AACA,SAAQC,MAAR,QAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,OAAO,IAAMC,kBAAkB;AAAA;AAAA,yBAAG,SAArBA,kBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChC,iBAAMR,SAAS,CAACG,WAAD,EAAcJ,mBAAd,CAAf;;AADgC;AAAA;AAAA;AAAA;AAAA;AAAA,KAArBS,kBAAqB;AAAA,CAAH,CAAxB;;AAIP,SAAUT,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgCU,UAAAA,WAAhC,QAAgCA,WAAhC;AAAA;AAAA;AAEmB,iBAAMR,IAAI,CAACS,aAAD,EAAgBD,WAAhB,CAAV;;AAFnB;AAEUE,UAAAA,MAFV;AAGOC,UAAAA,SAHP,GAGmB,EAHnB;AAIGA,UAAAA,SAAS,CAACC,IAAV,CAAeF,MAAM,CAACG,IAAtB;AAJH;AAKI,iBAAMZ,GAAG,CAAC;AAAEa,YAAAA,IAAI,EAAEX,WAAR;AAAqBY,YAAAA,KAAK,EAAEJ;AAA5B,WAAD,CAAT;;AALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQIK,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,SAASR,aAAT,CAAuBD,WAAvB,EAAoC;AAChC,MAAIU,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,SAAOd,KAAK,CAACe,IAAN,CAAWhB,MAAM,GAAC,mBAAlB,EAAuCc,EAAE,CAACG,SAAH,CAAab,WAAb,CAAvC,CAAP;AACH","sourcesContent":["/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_CONTACT, SET_CONTACT} from '../actions';\nimport {apiUrl } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\n\nexport const watchGetProContact = function* () {\n  yield takeEvery(GET_CONTACT, workerGetProContact);\n}\n\nfunction* workerGetProContact({ formPayload }) {\n  try {      \n    const result = yield call(getProContact, formPayload);\n\t  var resultArr = [];\n\t  resultArr.push(result.data);\n    yield put({ type: SET_CONTACT, value: resultArr });\n  } \n  catch {\n    console.log('login failed');\n  }\n}\nfunction getProContact(formPayload) {\n    var qs = require('qs');\n    return Axios.post(apiUrl+'genpro/contactPro', qs.stringify(formPayload));\n}"]},"metadata":{},"sourceType":"module"}