{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetOtpData);\n\n/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_OTP, SET_OTP } from '../actions';\nimport { apiUrl, deliveryId } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\nexport var watchGetOtpData =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetOtpData() {\n  return _regeneratorRuntime.wrap(function watchGetOtpData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery(GET_OTP, workerGetOtpData);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, watchGetOtpData);\n});\n\nfunction workerGetOtpData(_ref) {\n  var formPayload, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetOtpData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          formPayload = _ref.formPayload;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(getOtpData, formPayload);\n\n        case 4:\n          result = _context2.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context2.next = 9;\n          return put({\n            type: SET_OTP,\n            value: resultArr\n          });\n\n        case 9:\n          _context2.next = 14;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log('get data failed');\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked, null, [[1, 11]]);\n}\n\nfunction getOtpData(formPayload) {\n  return Axios.post(apiUrl + 'user/user_otp_verification', formPayload);\n}","map":{"version":3,"sources":["D:/text video/geniehut-Geni-App-Code/geniehut-Geni-App-Code/front-end/src/sagas/otp.js"],"names":["workerGetOtpData","takeEvery","call","put","GET_OTP","SET_OTP","apiUrl","deliveryId","Axios","cookie","watchGetOtpData","formPayload","getOtpData","result","resultArr","push","data","type","value","console","log","post"],"mappings":";;;;yBAUUA,gB;;AAVV;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,YAAjC;AACA,SAAQC,MAAR,EAAgBC,UAAhB,QAAkC,6BAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,OAAO,IAAMC,eAAe;AAAA;AAAA,yBAAG,SAAlBA,eAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7B,iBAAMT,SAAS,CAACG,OAAD,EAAUJ,gBAAV,CAAf;;AAD6B;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlBU,eAAkB;AAAA,CAAH,CAArB;;AAGP,SAAUV,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6BW,UAAAA,WAA7B,QAA6BA,WAA7B;AAAA;AAAA;AAEgB,iBAAMT,IAAI,CAACU,UAAD,EAAaD,WAAb,CAAV;;AAFhB;AAEOE,UAAAA,MAFP;AAGKC,UAAAA,SAHL,GAGiB,EAHjB;AAICA,UAAAA,SAAS,CAACC,IAAV,CAAeF,MAAM,CAACG,IAAtB;AAJD;AAKI,iBAAMb,GAAG,CAAC;AAAEc,YAAAA,IAAI,EAAEZ,OAAR;AAAiBa,YAAAA,KAAK,EAAEJ;AAAxB,WAAD,CAAT;;AALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQIK,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAASR,UAAT,CAAoBD,WAApB,EAAiC;AAC1B,SAAOH,KAAK,CAACa,IAAN,CAAWf,MAAM,GAAC,4BAAlB,EAAgDK,WAAhD,CAAP;AACN","sourcesContent":["/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_OTP, SET_OTP } from '../actions';\nimport {apiUrl, deliveryId } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\n\nexport const watchGetOtpData = function* () {\n  yield takeEvery(GET_OTP, workerGetOtpData);\n}\nfunction* workerGetOtpData({ formPayload }) {\n  try {\n const result = yield call(getOtpData, formPayload);\n\tvar resultArr = [];\n\tresultArr.push(result.data);\n    yield put({ type: SET_OTP, value: resultArr });\n  } \n  catch {\n    console.log('get data failed');\n  }\n} \n\n\nfunction getOtpData(formPayload) {\n       return Axios.post(apiUrl+'user/user_otp_verification', formPayload);\n} \n"]},"metadata":{},"sourceType":"module"}