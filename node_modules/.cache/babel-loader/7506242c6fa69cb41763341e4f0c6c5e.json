{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetGeneralProfile),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetImageProfile),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetGenrunProfile),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetRequestService),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetSelectrunservice),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetGenproProfile),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetEnableType),\n    _marked8 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetProUserDetails),\n    _marked9 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetRunUserDetails),\n    _marked10 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetProServiceUpdate),\n    _marked11 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetRunServiceUpdate),\n    _marked12 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetRunServiceAction),\n    _marked13 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetUserProfile),\n    _marked14 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetPostalAddress),\n    _marked15 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetMobileUpdate),\n    _marked16 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetChangeMobile);\n\n/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_GENERALPROFILE, SET_GENERALPROFILE, GET_IMAGEPROFILE, SET_IMAGEPROFILE, GET_GENRUNPROFILE, SET_GENRUNPROFILE, GET_REQUESTSERVICE, SET_REQUESTSERVICE, GET_SELECTRUNSERVICE, SET_SELECTRUNSERVICE, GET_GENPROPROFILE, SET_GENPROPROFILE, GET_ENABLETYPE, SET_ENABLETYPE, GET_PROUSERDETAILS, SET_PROUSERDETAILS, GET_PROSERVICEUPDATE, SET_PROSERVICEUPDATE, GET_USERPROFILE, SET_USERPROFILE, GET_POSTALADDRESS, SET_POSTALADDRESS, GET_RUNUSERDETAILS, SET_RUNUSERDETAILS, GET_RUNSERVICEUPDATE, SET_RUNSERVICEUPDATE, GET_MOBILEUPDATE, SET_MOBILEUPDATE, GET_CHANGEMOBILE, SET_CHANGEMOBILE, GET_RUNSERVICEACTION, SET_RUNSERVICEACTION } from '../actions';\nimport { apiUrl, deliveryId, appName } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\nexport var watchGetGeneralProfile =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetGeneralProfile() {\n  return _regeneratorRuntime.wrap(function watchGetGeneralProfile$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery(GET_GENERALPROFILE, workerGetGeneralProfile);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, watchGetGeneralProfile);\n});\n\nfunction workerGetGeneralProfile(_ref) {\n  var formPayload, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetGeneralProfile$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          formPayload = _ref.formPayload;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(getGeneralProfile, formPayload);\n\n        case 4:\n          result = _context2.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context2.next = 9;\n          return put({\n            type: SET_GENERALPROFILE,\n            value: resultArr\n          });\n\n        case 9:\n          _context2.next = 14;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log('login failed');\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked, null, [[1, 11]]);\n}\n\nfunction getGeneralProfile(formPayload) {\n  return Axios.post(apiUrl + 'user/generalinfo_update', formPayload);\n}\n/* file upload */\n\n\nexport var watchGetImageProfile =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetImageProfile() {\n  return _regeneratorRuntime.wrap(function watchGetImageProfile$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeEvery(GET_IMAGEPROFILE, workerGetImageProfile);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, watchGetImageProfile);\n});\n\nfunction workerGetImageProfile(_ref2) {\n  var formPayload, Config, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetImageProfile$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          formPayload = _ref2.formPayload, Config = _ref2.Config;\n          _context4.prev = 1;\n          _context4.next = 4;\n          return call(getImageProfile, formPayload, Config);\n\n        case 4:\n          result = _context4.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context4.next = 9;\n          return put({\n            type: SET_IMAGEPROFILE,\n            value: resultArr\n          });\n\n        case 9:\n          _context4.next = 14;\n          break;\n\n        case 11:\n          _context4.prev = 11;\n          _context4.t0 = _context4[\"catch\"](1);\n          console.log('get data failed');\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked2, null, [[1, 11]]);\n}\n\nfunction getImageProfile(formPayload, Config) {\n  return Axios.post(apiUrl + 'user/profileImageUpload', formPayload, Config);\n}\n/* genrun profile update */\n\n\nexport var watchGetGenrunProfile =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetGenrunProfile() {\n  return _regeneratorRuntime.wrap(function watchGetGenrunProfile$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeEvery(GET_GENRUNPROFILE, workerGetGenrunProfile);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, watchGetGenrunProfile);\n});\n\nfunction workerGetGenrunProfile(_ref3) {\n  var formPayload, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetGenrunProfile$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          formPayload = _ref3.formPayload;\n          _context6.prev = 1;\n          _context6.next = 4;\n          return call(getGenrunProfile, formPayload);\n\n        case 4:\n          result = _context6.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context6.next = 9;\n          return put({\n            type: SET_GENRUNPROFILE,\n            value: resultArr\n          });\n\n        case 9:\n          _context6.next = 14;\n          break;\n\n        case 11:\n          _context6.prev = 11;\n          _context6.t0 = _context6[\"catch\"](1);\n          console.log('get data failed');\n\n        case 14:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked3, null, [[1, 11]]);\n}\n\nfunction getGenrunProfile(formPayload) {\n  return Axios.post(apiUrl + 'user/updategenrun', formPayload);\n}\n/* get services list for profile update */\n\n\nexport var watchGetRequestService =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetRequestService() {\n  return _regeneratorRuntime.wrap(function watchGetRequestService$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeEvery(GET_REQUESTSERVICE, workerGetRequestService);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, watchGetRequestService);\n});\n\nfunction workerGetRequestService(_ref4) {\n  var addservice, usertoken, page, uri, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetRequestService$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          addservice = _ref4.addservice, usertoken = _ref4.usertoken, page = _ref4.page;\n          _context8.prev = 1;\n          uri = apiUrl + 'user/listServices?app_name=' + appName + '&addservice=' + addservice + '&usertoken=' + usertoken + '&page=' + page;\n          _context8.next = 5;\n          return call(Axios.get, uri);\n\n        case 5:\n          result = _context8.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context8.next = 10;\n          return put({\n            type: SET_REQUESTSERVICE,\n            value: resultArr\n          });\n\n        case 10:\n          _context8.next = 15;\n          break;\n\n        case 12:\n          _context8.prev = 12;\n          _context8.t0 = _context8[\"catch\"](1);\n          console.log('Get Page Failed');\n\n        case 15:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked4, null, [[1, 12]]);\n}\n/* get selected services list for genrun profile update */\n\n\nexport var watchGetSelectrunservice =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetSelectrunservice() {\n  return _regeneratorRuntime.wrap(function watchGetSelectrunservice$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeEvery(GET_SELECTRUNSERVICE, workerGetSelectrunservice);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, watchGetSelectrunservice);\n});\n\nfunction workerGetSelectrunservice(_ref5) {\n  var usertoken, usertype, uri, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetSelectrunservice$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          usertoken = _ref5.usertoken, usertype = _ref5.usertype;\n          _context10.prev = 1;\n          uri = apiUrl + 'user/selectedvalue?app_name=' + appName + '&user_token=' + usertoken + '&user_type=' + usertype;\n          _context10.next = 5;\n          return call(Axios.get, uri);\n\n        case 5:\n          result = _context10.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context10.next = 10;\n          return put({\n            type: SET_SELECTRUNSERVICE,\n            value: resultArr\n          });\n\n        case 10:\n          _context10.next = 15;\n          break;\n\n        case 12:\n          _context10.prev = 12;\n          _context10.t0 = _context10[\"catch\"](1);\n          console.log('Get Page Failed');\n\n        case 15:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked5, null, [[1, 12]]);\n}\n/* genpro profile update */\n\n\nexport var watchGetGenproProfile =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetGenproProfile() {\n  return _regeneratorRuntime.wrap(function watchGetGenproProfile$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeEvery(GET_GENPROPROFILE, workerGetGenproProfile);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, watchGetGenproProfile);\n});\n\nfunction workerGetGenproProfile(_ref6) {\n  var formPayload, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetGenproProfile$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          formPayload = _ref6.formPayload;\n          _context12.prev = 1;\n          _context12.next = 4;\n          return call(getGenproProfile, formPayload);\n\n        case 4:\n          result = _context12.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context12.next = 9;\n          return put({\n            type: SET_GENPROPROFILE,\n            value: resultArr\n          });\n\n        case 9:\n          _context12.next = 14;\n          break;\n\n        case 11:\n          _context12.prev = 11;\n          _context12.t0 = _context12[\"catch\"](1);\n          console.log('get data failed');\n\n        case 14:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked6, null, [[1, 11]]);\n}\n\nfunction getGenproProfile(formPayload) {\n  return Axios.post(apiUrl + 'user/updategenpro', formPayload);\n}\n/* enable the user type */\n\n\nexport var watchGetEnableType =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetEnableType() {\n  return _regeneratorRuntime.wrap(function watchGetEnableType$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return takeEvery(GET_ENABLETYPE, workerGetEnableType);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, watchGetEnableType);\n});\n\nfunction workerGetEnableType(_ref7) {\n  var formPayload, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetEnableType$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          formPayload = _ref7.formPayload;\n          _context14.prev = 1;\n          _context14.next = 4;\n          return call(getEnableType, formPayload);\n\n        case 4:\n          result = _context14.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context14.next = 9;\n          return put({\n            type: SET_ENABLETYPE,\n            value: resultArr\n          });\n\n        case 9:\n          _context14.next = 14;\n          break;\n\n        case 11:\n          _context14.prev = 11;\n          _context14.t0 = _context14[\"catch\"](1);\n          console.log('get data failed');\n\n        case 14:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked7, null, [[1, 11]]);\n}\n\nfunction getEnableType(formPayload) {\n  return Axios.post(apiUrl + 'user/update_assign_type', formPayload);\n}\n/* get genpro profile details */\n\n\nexport var watchGetProUserDetails =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetProUserDetails() {\n  return _regeneratorRuntime.wrap(function watchGetProUserDetails$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return takeEvery(GET_PROUSERDETAILS, workerGetProUserDetails);\n\n        case 2:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, watchGetProUserDetails);\n});\n\nfunction workerGetProUserDetails(_ref8) {\n  var usertoken, uri, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetProUserDetails$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          usertoken = _ref8.usertoken;\n          _context16.prev = 1;\n          uri = apiUrl + 'user/getProuserdetails?app_name=' + appName + '&user_token=' + usertoken;\n          _context16.next = 5;\n          return call(Axios.get, uri);\n\n        case 5:\n          result = _context16.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context16.next = 10;\n          return put({\n            type: SET_PROUSERDETAILS,\n            value: resultArr\n          });\n\n        case 10:\n          _context16.next = 15;\n          break;\n\n        case 12:\n          _context16.prev = 12;\n          _context16.t0 = _context16[\"catch\"](1);\n          console.log('Get Page Failed');\n\n        case 15:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked8, null, [[1, 12]]);\n}\n/* get genrun profile update */\n\n\nexport var watchGetRunUserDetails =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetRunUserDetails() {\n  return _regeneratorRuntime.wrap(function watchGetRunUserDetails$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.next = 2;\n          return takeEvery(GET_RUNUSERDETAILS, workerGetRunUserDetails);\n\n        case 2:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, watchGetRunUserDetails);\n});\n\nfunction workerGetRunUserDetails(_ref9) {\n  var usertoken, uri, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetRunUserDetails$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          usertoken = _ref9.usertoken;\n          _context18.prev = 1;\n          uri = apiUrl + 'user/Runuserdetails?app_name=' + appName + '&user_token=' + usertoken;\n          _context18.next = 5;\n          return call(Axios.get, uri);\n\n        case 5:\n          result = _context18.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context18.next = 10;\n          return put({\n            type: SET_RUNUSERDETAILS,\n            value: resultArr\n          });\n\n        case 10:\n          _context18.next = 15;\n          break;\n\n        case 12:\n          _context18.prev = 12;\n          _context18.t0 = _context18[\"catch\"](1);\n          console.log('Get Page Failed');\n\n        case 15:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, _marked9, null, [[1, 12]]);\n}\n/* update the pro services */\n\n\nexport var watchGetProServiceUpdate =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetProServiceUpdate() {\n  return _regeneratorRuntime.wrap(function watchGetProServiceUpdate$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.next = 2;\n          return takeEvery(GET_PROSERVICEUPDATE, workerGetProServiceUpdate);\n\n        case 2:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, watchGetProServiceUpdate);\n});\n\nfunction workerGetProServiceUpdate(_ref10) {\n  var formPayload, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetProServiceUpdate$(_context20) {\n    while (1) {\n      switch (_context20.prev = _context20.next) {\n        case 0:\n          formPayload = _ref10.formPayload;\n          _context20.prev = 1;\n          _context20.next = 4;\n          return call(getProServiceUpdate, formPayload);\n\n        case 4:\n          result = _context20.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context20.next = 9;\n          return put({\n            type: SET_PROSERVICEUPDATE,\n            value: resultArr\n          });\n\n        case 9:\n          _context20.next = 14;\n          break;\n\n        case 11:\n          _context20.prev = 11;\n          _context20.t0 = _context20[\"catch\"](1);\n          console.log('get data failed');\n\n        case 14:\n        case \"end\":\n          return _context20.stop();\n      }\n    }\n  }, _marked10, null, [[1, 11]]);\n}\n\nfunction getProServiceUpdate(formPayload) {\n  return Axios.post(apiUrl + 'user/UpdateproServices', formPayload);\n}\n/* update the run services */\n\n\nexport var watchGetRunServiceUpdate =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetRunServiceUpdate() {\n  return _regeneratorRuntime.wrap(function watchGetRunServiceUpdate$(_context21) {\n    while (1) {\n      switch (_context21.prev = _context21.next) {\n        case 0:\n          _context21.next = 2;\n          return takeEvery(GET_RUNSERVICEUPDATE, workerGetRunServiceUpdate);\n\n        case 2:\n        case \"end\":\n          return _context21.stop();\n      }\n    }\n  }, watchGetRunServiceUpdate);\n});\n\nfunction workerGetRunServiceUpdate(_ref11) {\n  var formPayload, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetRunServiceUpdate$(_context22) {\n    while (1) {\n      switch (_context22.prev = _context22.next) {\n        case 0:\n          formPayload = _ref11.formPayload;\n          _context22.prev = 1;\n          _context22.next = 4;\n          return call(getRunServiceUpdate, formPayload);\n\n        case 4:\n          result = _context22.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context22.next = 9;\n          return put({\n            type: SET_RUNSERVICEUPDATE,\n            value: resultArr\n          });\n\n        case 9:\n          _context22.next = 14;\n          break;\n\n        case 11:\n          _context22.prev = 11;\n          _context22.t0 = _context22[\"catch\"](1);\n          console.log('get data failed');\n\n        case 14:\n        case \"end\":\n          return _context22.stop();\n      }\n    }\n  }, _marked11, null, [[1, 11]]);\n}\n/* enable the user type */\n\n\nfunction getRunServiceUpdate(formPayload) {\n  return Axios.post(apiUrl + 'user/UpdaterunServices', formPayload);\n}\n/* update the run services action */\n\n\nexport var watchGetRunServiceAction =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetRunServiceAction() {\n  return _regeneratorRuntime.wrap(function watchGetRunServiceAction$(_context23) {\n    while (1) {\n      switch (_context23.prev = _context23.next) {\n        case 0:\n          _context23.next = 2;\n          return takeEvery(GET_RUNSERVICEACTION, workerGetRunServiceAction);\n\n        case 2:\n        case \"end\":\n          return _context23.stop();\n      }\n    }\n  }, watchGetRunServiceAction);\n});\n\nfunction workerGetRunServiceAction(_ref12) {\n  var formPayload, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetRunServiceAction$(_context24) {\n    while (1) {\n      switch (_context24.prev = _context24.next) {\n        case 0:\n          formPayload = _ref12.formPayload;\n          _context24.prev = 1;\n          _context24.next = 4;\n          return call(getRunServiceAction, formPayload);\n\n        case 4:\n          result = _context24.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context24.next = 9;\n          return put({\n            type: SET_RUNSERVICEACTION,\n            value: resultArr\n          });\n\n        case 9:\n          _context24.next = 14;\n          break;\n\n        case 11:\n          _context24.prev = 11;\n          _context24.t0 = _context24[\"catch\"](1);\n          console.log('get data failed');\n\n        case 14:\n        case \"end\":\n          return _context24.stop();\n      }\n    }\n  }, _marked12, null, [[1, 11]]);\n}\n/* enable the user type */\n\n\nfunction getRunServiceAction(formPayload) {\n  return Axios.post(apiUrl + 'user/UpdaterunSeraction', formPayload);\n}\n/* get services list for profile update */\n\n\nexport var watchGetUserProfile =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetUserProfile() {\n  return _regeneratorRuntime.wrap(function watchGetUserProfile$(_context25) {\n    while (1) {\n      switch (_context25.prev = _context25.next) {\n        case 0:\n          _context25.next = 2;\n          return takeEvery(GET_USERPROFILE, workerGetUserProfile);\n\n        case 2:\n        case \"end\":\n          return _context25.stop();\n      }\n    }\n  }, watchGetUserProfile);\n});\n\nfunction workerGetUserProfile(_ref13) {\n  var usertoken, uri, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetUserProfile$(_context26) {\n    while (1) {\n      switch (_context26.prev = _context26.next) {\n        case 0:\n          usertoken = _ref13.usertoken;\n          _context26.prev = 1;\n          uri = apiUrl + 'user/user_generaldetails?app_name=' + appName + '&user_token=' + usertoken;\n          _context26.next = 5;\n          return call(Axios.get, uri);\n\n        case 5:\n          result = _context26.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context26.next = 10;\n          return put({\n            type: SET_USERPROFILE,\n            value: resultArr\n          });\n\n        case 10:\n          _context26.next = 15;\n          break;\n\n        case 12:\n          _context26.prev = 12;\n          _context26.t0 = _context26[\"catch\"](1);\n          console.log('Get Page Failed');\n\n        case 15:\n        case \"end\":\n          return _context26.stop();\n      }\n    }\n  }, _marked13, null, [[1, 12]]);\n}\n/* get address from postal code */\n\n\nexport var watchGetPostalAddress =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetPostalAddress() {\n  return _regeneratorRuntime.wrap(function watchGetPostalAddress$(_context27) {\n    while (1) {\n      switch (_context27.prev = _context27.next) {\n        case 0:\n          _context27.next = 2;\n          return takeEvery(GET_POSTALADDRESS, workerGetPostalAddress);\n\n        case 2:\n        case \"end\":\n          return _context27.stop();\n      }\n    }\n  }, watchGetPostalAddress);\n});\n\nfunction workerGetPostalAddress(_ref14) {\n  var formPayload, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetPostalAddress$(_context28) {\n    while (1) {\n      switch (_context28.prev = _context28.next) {\n        case 0:\n          formPayload = _ref14.formPayload;\n          _context28.prev = 1;\n          _context28.next = 4;\n          return call(getPostalAddress, formPayload);\n\n        case 4:\n          result = _context28.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context28.next = 9;\n          return put({\n            type: SET_POSTALADDRESS,\n            value: resultArr\n          });\n\n        case 9:\n          _context28.next = 14;\n          break;\n\n        case 11:\n          _context28.prev = 11;\n          _context28.t0 = _context28[\"catch\"](1);\n          console.log('get data failed');\n\n        case 14:\n        case \"end\":\n          return _context28.stop();\n      }\n    }\n  }, _marked14, null, [[1, 11]]);\n}\n/* enable the user type */\n\n\nfunction getPostalAddress(formPayload) {\n  return Axios.post(apiUrl + 'user/get_addr_by_zip', formPayload);\n}\n/* send otp while change mobile number */\n\n\nexport var watchGetMobileUpdate =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetMobileUpdate() {\n  return _regeneratorRuntime.wrap(function watchGetMobileUpdate$(_context29) {\n    while (1) {\n      switch (_context29.prev = _context29.next) {\n        case 0:\n          _context29.next = 2;\n          return takeEvery(GET_MOBILEUPDATE, workerGetMobileUpdate);\n\n        case 2:\n        case \"end\":\n          return _context29.stop();\n      }\n    }\n  }, watchGetMobileUpdate);\n});\n\nfunction workerGetMobileUpdate(_ref15) {\n  var formPayload, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetMobileUpdate$(_context30) {\n    while (1) {\n      switch (_context30.prev = _context30.next) {\n        case 0:\n          formPayload = _ref15.formPayload;\n          _context30.prev = 1;\n          _context30.next = 4;\n          return call(getMobileUpdate, formPayload);\n\n        case 4:\n          result = _context30.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context30.next = 9;\n          return put({\n            type: SET_MOBILEUPDATE,\n            value: resultArr\n          });\n\n        case 9:\n          _context30.next = 14;\n          break;\n\n        case 11:\n          _context30.prev = 11;\n          _context30.t0 = _context30[\"catch\"](1);\n          console.log('Updatesd failed');\n\n        case 14:\n        case \"end\":\n          return _context30.stop();\n      }\n    }\n  }, _marked15, null, [[1, 11]]);\n}\n\nfunction getMobileUpdate(formPayload) {\n  return Axios.post(apiUrl + 'user/changemobileno', formPayload);\n}\n/*update  mobile number */\n\n\nexport var watchGetChangeMobile =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetChangeMobile() {\n  return _regeneratorRuntime.wrap(function watchGetChangeMobile$(_context31) {\n    while (1) {\n      switch (_context31.prev = _context31.next) {\n        case 0:\n          _context31.next = 2;\n          return takeEvery(GET_CHANGEMOBILE, workerGetChangeMobile);\n\n        case 2:\n        case \"end\":\n          return _context31.stop();\n      }\n    }\n  }, watchGetChangeMobile);\n});\n\nfunction workerGetChangeMobile(_ref16) {\n  var formPayload, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetChangeMobile$(_context32) {\n    while (1) {\n      switch (_context32.prev = _context32.next) {\n        case 0:\n          formPayload = _ref16.formPayload;\n          _context32.prev = 1;\n          _context32.next = 4;\n          return call(getChangeMobile, formPayload);\n\n        case 4:\n          result = _context32.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context32.next = 9;\n          return put({\n            type: SET_CHANGEMOBILE,\n            value: resultArr\n          });\n\n        case 9:\n          _context32.next = 14;\n          break;\n\n        case 11:\n          _context32.prev = 11;\n          _context32.t0 = _context32[\"catch\"](1);\n          console.log('Updatesd failed');\n\n        case 14:\n        case \"end\":\n          return _context32.stop();\n      }\n    }\n  }, _marked16, null, [[1, 11]]);\n}\n\nfunction getChangeMobile(formPayload) {\n  return Axios.post(apiUrl + 'user/Updatemobilenumber', formPayload);\n}","map":{"version":3,"sources":["D:/text video/geniehut-Geni-App-Code/geniehut-Geni-App-Code/front-end/src/sagas/profileupdate.js"],"names":["workerGetGeneralProfile","workerGetImageProfile","workerGetGenrunProfile","workerGetRequestService","workerGetSelectrunservice","workerGetGenproProfile","workerGetEnableType","workerGetProUserDetails","workerGetRunUserDetails","workerGetProServiceUpdate","workerGetRunServiceUpdate","workerGetRunServiceAction","workerGetUserProfile","workerGetPostalAddress","workerGetMobileUpdate","workerGetChangeMobile","takeEvery","call","put","GET_GENERALPROFILE","SET_GENERALPROFILE","GET_IMAGEPROFILE","SET_IMAGEPROFILE","GET_GENRUNPROFILE","SET_GENRUNPROFILE","GET_REQUESTSERVICE","SET_REQUESTSERVICE","GET_SELECTRUNSERVICE","SET_SELECTRUNSERVICE","GET_GENPROPROFILE","SET_GENPROPROFILE","GET_ENABLETYPE","SET_ENABLETYPE","GET_PROUSERDETAILS","SET_PROUSERDETAILS","GET_PROSERVICEUPDATE","SET_PROSERVICEUPDATE","GET_USERPROFILE","SET_USERPROFILE","GET_POSTALADDRESS","SET_POSTALADDRESS","GET_RUNUSERDETAILS","SET_RUNUSERDETAILS","GET_RUNSERVICEUPDATE","SET_RUNSERVICEUPDATE","GET_MOBILEUPDATE","SET_MOBILEUPDATE","GET_CHANGEMOBILE","SET_CHANGEMOBILE","GET_RUNSERVICEACTION","SET_RUNSERVICEACTION","apiUrl","deliveryId","appName","Axios","cookie","watchGetGeneralProfile","formPayload","getGeneralProfile","result","resultArr","push","data","type","value","console","log","post","watchGetImageProfile","Config","getImageProfile","watchGetGenrunProfile","getGenrunProfile","watchGetRequestService","addservice","usertoken","page","uri","get","watchGetSelectrunservice","usertype","watchGetGenproProfile","getGenproProfile","watchGetEnableType","getEnableType","watchGetProUserDetails","watchGetRunUserDetails","watchGetProServiceUpdate","getProServiceUpdate","watchGetRunServiceUpdate","getRunServiceUpdate","watchGetRunServiceAction","getRunServiceAction","watchGetUserProfile","watchGetPostalAddress","getPostalAddress","watchGetMobileUpdate","getMobileUpdate","watchGetChangeMobile","getChangeMobile"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_GENERALPROFILE, SET_GENERALPROFILE, GET_IMAGEPROFILE, SET_IMAGEPROFILE, GET_GENRUNPROFILE, SET_GENRUNPROFILE, GET_REQUESTSERVICE,SET_REQUESTSERVICE, GET_SELECTRUNSERVICE, SET_SELECTRUNSERVICE, GET_GENPROPROFILE, SET_GENPROPROFILE, GET_ENABLETYPE, SET_ENABLETYPE,GET_PROUSERDETAILS,SET_PROUSERDETAILS, GET_PROSERVICEUPDATE, SET_PROSERVICEUPDATE, GET_USERPROFILE, SET_USERPROFILE, GET_POSTALADDRESS, SET_POSTALADDRESS, GET_RUNUSERDETAILS, SET_RUNUSERDETAILS, GET_RUNSERVICEUPDATE, SET_RUNSERVICEUPDATE, GET_MOBILEUPDATE, SET_MOBILEUPDATE, GET_CHANGEMOBILE, SET_CHANGEMOBILE, GET_RUNSERVICEACTION, SET_RUNSERVICEACTION } from '../actions';\n\nimport { apiUrl, deliveryId, appName } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\n\nexport const watchGetGeneralProfile = function* () {\n  yield takeEvery(GET_GENERALPROFILE, workerGetGeneralProfile);\n}\n\nfunction* workerGetGeneralProfile({ formPayload }) {\n  try {\n  const result = yield call(getGeneralProfile, formPayload);\n\tvar resultArr = [];\n\tresultArr.push(result.data);\n    yield put({ type: SET_GENERALPROFILE, value: resultArr });\n  } \n  catch {\n    console.log('login failed');\n  }\n} \n\n\nfunction getGeneralProfile(formPayload) {\n       return Axios.post(apiUrl+'user/generalinfo_update', formPayload);\n} \n\n\n\n/* file upload */\nexport const watchGetImageProfile = function* () {\n  yield takeEvery(GET_IMAGEPROFILE, workerGetImageProfile);\n}\nfunction* workerGetImageProfile({ formPayload, Config }) {\n  try {\n const result = yield call(getImageProfile, formPayload, Config);\n  var resultArr = [];\n  resultArr.push(result.data);\n    yield put({ type: SET_IMAGEPROFILE, value: resultArr });\n  } \n  catch {\n    console.log('get data failed');\n  }\n} \n\n\nfunction getImageProfile(formPayload,Config) {\n       return Axios.post(apiUrl+'user/profileImageUpload', formPayload, Config);\n} \n\n\n/* genrun profile update */\nexport const watchGetGenrunProfile = function* () {\n  yield takeEvery(GET_GENRUNPROFILE, workerGetGenrunProfile);\n}\nfunction* workerGetGenrunProfile({ formPayload }) {\n  try {\n  const result = yield call(getGenrunProfile, formPayload);\n  var resultArr = [];\n  resultArr.push(result.data);\n    yield put({ type: SET_GENRUNPROFILE, value: resultArr });\n  } \n  catch {\n    console.log('get data failed');\n  }\n} \n\n\nfunction getGenrunProfile(formPayload) {\n       return Axios.post(apiUrl+'user/updategenrun', formPayload);\n} \n\n\n/* get services list for profile update */\n\nexport const watchGetRequestService = function* () {\n  yield takeEvery(GET_REQUESTSERVICE, workerGetRequestService);\n}\n\nfunction* workerGetRequestService({addservice, usertoken, page}) {\n  try {\n    const uri = apiUrl+'user/listServices?app_name='+appName+'&addservice='+addservice+'&usertoken='+usertoken+'&page='+page;\n    const result = yield call(Axios.get, uri);\n    var resultArr = [];\n    resultArr.push(result.data);\n    yield put({ type: SET_REQUESTSERVICE, value: resultArr });\n  } \n  catch {\n    console.log('Get Page Failed');\n  }\n} \n\n\n/* get selected services list for genrun profile update */\n\nexport const watchGetSelectrunservice = function* () {\n  yield takeEvery(GET_SELECTRUNSERVICE, workerGetSelectrunservice);\n}\n\nfunction* workerGetSelectrunservice( {usertoken,usertype} ) {\n  try {\n    const uri = apiUrl+'user/selectedvalue?app_name='+appName+'&user_token='+usertoken+'&user_type='+usertype;\n    const result = yield call(Axios.get, uri);\n  var resultArr = [];\n  resultArr.push(result.data);\n    yield put({ type: SET_SELECTRUNSERVICE, value: resultArr });\n  } \n  catch {\n    console.log('Get Page Failed');\n  }\n} \n\n\n/* genpro profile update */\nexport const watchGetGenproProfile = function* () {\n  yield takeEvery(GET_GENPROPROFILE, workerGetGenproProfile);\n}\nfunction* workerGetGenproProfile({ formPayload }) {\n  try {\n  const result = yield call(getGenproProfile, formPayload);\n  var resultArr = [];\n  resultArr.push(result.data);\n    yield put({ type: SET_GENPROPROFILE, value: resultArr });\n  } \n  catch {\n    console.log('get data failed');\n  }\n} \n\n\nfunction getGenproProfile(formPayload) {\n     return Axios.post(apiUrl+'user/updategenpro', formPayload);\n} \n\n/* enable the user type */\nexport const watchGetEnableType = function* () {\n  yield takeEvery(GET_ENABLETYPE, workerGetEnableType);\n}\nfunction* workerGetEnableType({ formPayload }) {\n  try {\n  const result = yield call(getEnableType, formPayload);\n  var resultArr = [];\n  resultArr.push(result.data);\n    yield put({ type: SET_ENABLETYPE, value: resultArr });\n  } \n  catch {\n    console.log('get data failed');\n  }\n} \n\n\nfunction getEnableType(formPayload) {\n     return Axios.post(apiUrl+'user/update_assign_type', formPayload);\n} \n\n/* get genpro profile details */\n\nexport const watchGetProUserDetails = function* () {\n  yield takeEvery(GET_PROUSERDETAILS, workerGetProUserDetails);\n}\n\nfunction* workerGetProUserDetails( {usertoken} ) {\n  try {\n    const uri = apiUrl+'user/getProuserdetails?app_name='+appName+'&user_token='+usertoken;\n    const result = yield call(Axios.get, uri);\n  var resultArr = [];\n  resultArr.push(result.data);\n    yield put({ type: SET_PROUSERDETAILS, value: resultArr });\n  } \n  catch {\n    console.log('Get Page Failed');\n  }\n}\n\n\n/* get genrun profile update */\n\nexport const watchGetRunUserDetails = function* () {\n  yield takeEvery(GET_RUNUSERDETAILS, workerGetRunUserDetails);\n}\n\nfunction* workerGetRunUserDetails( {usertoken} ) {\n  try {\n    const uri = apiUrl+'user/Runuserdetails?app_name='+appName+'&user_token='+usertoken;\n    const result = yield call(Axios.get, uri);\n  var resultArr = [];\n  resultArr.push(result.data);\n    yield put({ type: SET_RUNUSERDETAILS, value: resultArr });\n  } \n  catch {\n    console.log('Get Page Failed');\n  }\n}\n\n/* update the pro services */\n\nexport const watchGetProServiceUpdate = function* () {\n  yield takeEvery(GET_PROSERVICEUPDATE, workerGetProServiceUpdate);\n}\nfunction* workerGetProServiceUpdate({ formPayload }) {\n  try {\n  const result = yield call(getProServiceUpdate, formPayload);\n  var resultArr = [];\n  resultArr.push(result.data);\n    yield put({ type: SET_PROSERVICEUPDATE, value: resultArr });\n  } \n  catch {\n    console.log('get data failed');\n  }\n} \n\nfunction getProServiceUpdate(formPayload) {\n     return Axios.post(apiUrl+'user/UpdateproServices', formPayload);\n} \n\n\n/* update the run services */\n\nexport const watchGetRunServiceUpdate = function* () {\n  yield takeEvery(GET_RUNSERVICEUPDATE, workerGetRunServiceUpdate);\n}\nfunction* workerGetRunServiceUpdate({ formPayload }) {\n  try {\n  const result = yield call(getRunServiceUpdate, formPayload);\n  var resultArr = [];\n  resultArr.push(result.data);\n    yield put({ type: SET_RUNSERVICEUPDATE, value: resultArr });\n  } \n  catch {\n    console.log('get data failed');\n  }\n} \n\n/* enable the user type */\nfunction getRunServiceUpdate(formPayload) {\n     return Axios.post(apiUrl+'user/UpdaterunServices', formPayload);\n} \n\n\n/* update the run services action */\n\nexport const watchGetRunServiceAction = function* () {\n  yield takeEvery(GET_RUNSERVICEACTION, workerGetRunServiceAction);\n}\nfunction* workerGetRunServiceAction({ formPayload }) {\n  try {\n  const result = yield call(getRunServiceAction, formPayload);\n  var resultArr = [];\n  resultArr.push(result.data);\n    yield put({ type: SET_RUNSERVICEACTION, value: resultArr });\n  } \n  catch {\n    console.log('get data failed');\n  }\n} \n\n/* enable the user type */\nfunction getRunServiceAction(formPayload) {\n     return Axios.post(apiUrl+'user/UpdaterunSeraction', formPayload);\n}\n\n\n/* get services list for profile update */\n\nexport const watchGetUserProfile = function* () {\n  yield takeEvery(GET_USERPROFILE, workerGetUserProfile);\n}\n\nfunction* workerGetUserProfile({usertoken}) {\n  try {\n    const uri = apiUrl+'user/user_generaldetails?app_name='+appName+'&user_token='+usertoken;\n    const result = yield call(Axios.get, uri);\n    var resultArr = [];\n    resultArr.push(result.data);\n    yield put({ type: SET_USERPROFILE, value: resultArr });\n  } \n  catch {\n    console.log('Get Page Failed');\n  }\n} \n\n\n\n/* get address from postal code */\n\nexport const watchGetPostalAddress = function* () {\n  yield takeEvery(GET_POSTALADDRESS, workerGetPostalAddress);\n}\nfunction* workerGetPostalAddress({ formPayload }) {\n  try {\n  const result = yield call(getPostalAddress, formPayload);\n  var resultArr = [];\n  resultArr.push(result.data);\n    yield put({ type: SET_POSTALADDRESS, value: resultArr });\n  } \n  catch {\n    console.log('get data failed');\n  }\n} \n\n/* enable the user type */\nfunction getPostalAddress(formPayload) {\n     return Axios.post(apiUrl+'user/get_addr_by_zip', formPayload);\n}\n\n\n/* send otp while change mobile number */\n\nexport const watchGetMobileUpdate = function* () {\n  yield takeEvery(GET_MOBILEUPDATE, workerGetMobileUpdate);\n}\n\nfunction* workerGetMobileUpdate({ formPayload }) {\n  try {\n  const result = yield call(getMobileUpdate, formPayload);\n  var resultArr = [];\n  resultArr.push(result.data);\n    yield put({ type: SET_MOBILEUPDATE, value: resultArr });\n  } \n  catch {\n    console.log('Updatesd failed');\n  }\n} \n\n\nfunction getMobileUpdate(formPayload) {\n       return Axios.post(apiUrl+'user/changemobileno', formPayload);\n} \n\n/*update  mobile number */\n\nexport const watchGetChangeMobile = function* () {\n  yield takeEvery(GET_CHANGEMOBILE, workerGetChangeMobile);\n}\n\nfunction* workerGetChangeMobile({ formPayload }) {\n  try {\n  const result = yield call(getChangeMobile, formPayload);\n  var resultArr = [];\n  resultArr.push(result.data);\n    yield put({ type: SET_CHANGEMOBILE, value: resultArr });\n  } \n  catch {\n    console.log('Updatesd failed');\n  }\n} \n\n\nfunction getChangeMobile(formPayload) {\n       return Axios.post(apiUrl+'user/Updatemobilenumber', formPayload);\n} "]},"metadata":{},"sourceType":"module"}