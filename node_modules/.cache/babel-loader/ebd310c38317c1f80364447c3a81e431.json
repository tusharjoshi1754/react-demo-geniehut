{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetAsktocall),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetCallRequest),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetAvailTransaction);\n\n/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_ASKTOCALL, SET_ASKTOCALL, GET_CALLREQUEST, SET_CALLREQUEST, GET_AVAILTRANSACTION, SET_AVAILTRANSACTION } from '../actions';\nimport { apiUrl, deliveryId, appName } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\n/* ask to call */\n\nexport var watchGetAsktocall =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetAsktocall() {\n  return _regeneratorRuntime.wrap(function watchGetAsktocall$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery(GET_ASKTOCALL, workerGetAsktocall);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, watchGetAsktocall);\n});\n\nfunction workerGetAsktocall(_ref) {\n  var formPayload, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetAsktocall$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          formPayload = _ref.formPayload;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(getAsktocall, formPayload);\n\n        case 4:\n          result = _context2.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context2.next = 9;\n          return put({\n            type: SET_ASKTOCALL,\n            value: resultArr\n          });\n\n        case 9:\n          _context2.next = 14;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log('login failed');\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked, null, [[1, 11]]);\n}\n\nfunction getAsktocall(formPayload) {\n  console.log('REquest', formPayload);\n  return Axios.post(apiUrl + 'genrun/asktocall', formPayload);\n}\n/* genrun customerleads */\n\n\nexport var watchGetCallRequest =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetCallRequest() {\n  return _regeneratorRuntime.wrap(function watchGetCallRequest$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeEvery(GET_CALLREQUEST, workerGetCallRequest);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, watchGetCallRequest);\n});\n\nfunction workerGetCallRequest(_ref2) {\n  var UserToken, trans_id, service_id, uri, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetCallRequest$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          UserToken = _ref2.UserToken, trans_id = _ref2.trans_id, service_id = _ref2.service_id;\n          _context4.prev = 1;\n          uri = apiUrl + 'customer/getCallrequest?app_name=' + appName + '&UserToken=' + UserToken + '&trans_id=' + trans_id + '&service_id=' + service_id;\n          console.log(uri);\n          _context4.next = 6;\n          return call(Axios.get, uri);\n\n        case 6:\n          result = _context4.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context4.next = 11;\n          return put({\n            type: SET_CALLREQUEST,\n            value: resultArr\n          });\n\n        case 11:\n          _context4.next = 16;\n          break;\n\n        case 13:\n          _context4.prev = 13;\n          _context4.t0 = _context4[\"catch\"](1);\n          console.log('get data failed');\n\n        case 16:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked2, null, [[1, 13]]);\n}\n/* genrun customerleads */\n\n\nexport var watchGetAvailTransaction =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetAvailTransaction() {\n  return _regeneratorRuntime.wrap(function watchGetAvailTransaction$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeEvery(GET_AVAILTRANSACTION, workerGetAvailTransaction);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, watchGetAvailTransaction);\n});\n\nfunction workerGetAvailTransaction(_ref3) {\n  var UserToken, trans_id, service_id, uri, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetAvailTransaction$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          UserToken = _ref3.UserToken, trans_id = _ref3.trans_id, service_id = _ref3.service_id;\n          _context6.prev = 1;\n          uri = apiUrl + 'customer/genrunServiceList?app_name=' + appName + '&UserToken=' + UserToken + '&trans_id=' + trans_id + '&service_id=' + service_id;\n          _context6.next = 5;\n          return call(Axios.get, uri);\n\n        case 5:\n          result = _context6.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context6.next = 10;\n          return put({\n            type: SET_AVAILTRANSACTION,\n            value: resultArr\n          });\n\n        case 10:\n          _context6.next = 15;\n          break;\n\n        case 12:\n          _context6.prev = 12;\n          _context6.t0 = _context6[\"catch\"](1);\n          console.log('get data failed');\n\n        case 15:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked3, null, [[1, 12]]);\n}","map":{"version":3,"sources":["D:/text video/geniehut-Geni-App-Code/geniehut-Geni-App-Code/front-end/src/sagas/asktocall.js"],"names":["workerGetAsktocall","workerGetCallRequest","workerGetAvailTransaction","takeEvery","call","put","GET_ASKTOCALL","SET_ASKTOCALL","GET_CALLREQUEST","SET_CALLREQUEST","GET_AVAILTRANSACTION","SET_AVAILTRANSACTION","apiUrl","deliveryId","appName","Axios","cookie","watchGetAsktocall","formPayload","getAsktocall","result","resultArr","push","data","type","value","console","log","post","watchGetCallRequest","UserToken","trans_id","service_id","uri","get","watchGetAvailTransaction"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport {GET_ASKTOCALL, SET_ASKTOCALL, GET_CALLREQUEST, SET_CALLREQUEST, GET_AVAILTRANSACTION, SET_AVAILTRANSACTION} from '../actions';\nimport {apiUrl, deliveryId, appName } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\n\n/* ask to call */\n\nexport const watchGetAsktocall = function* () {\n  yield takeEvery(GET_ASKTOCALL, workerGetAsktocall);\n}\n\nfunction* workerGetAsktocall({ formPayload }) {\n  try {      \n    const result = yield call(getAsktocall, formPayload);\n    var resultArr = [];\n    resultArr.push(result.data);\n    yield put({ type: SET_ASKTOCALL, value: resultArr });\n  } \n  catch {\n    console.log('login failed');\n  }\n}\nfunction getAsktocall(formPayload) {\n  console.log('REquest', formPayload);\n   return Axios.post(apiUrl+'genrun/asktocall', formPayload);\n}\n\n\n/* genrun customerleads */\n\nexport const watchGetCallRequest = function* () {\n  yield takeEvery(GET_CALLREQUEST, workerGetCallRequest);\n}\nfunction* workerGetCallRequest({ UserToken, trans_id, service_id }) {\n    try {\n    const uri = apiUrl+'customer/getCallrequest?app_name='+appName+'&UserToken='+UserToken+'&trans_id='+trans_id+'&service_id='+service_id;\n    console.log(uri)\n    const result = yield call(Axios.get, uri);\n    var resultArr = [];\n    resultArr.push(result.data);\n      yield put({ type: SET_CALLREQUEST, value: resultArr });\n    } \n    catch {\n      console.log('get data failed');\n    }\n} \n\n\n/* genrun customerleads */\n\nexport const watchGetAvailTransaction = function* () {\n  yield takeEvery(GET_AVAILTRANSACTION, workerGetAvailTransaction);\n}\nfunction* workerGetAvailTransaction({ UserToken, trans_id, service_id }) {\n    try {\n    const uri = apiUrl+'customer/genrunServiceList?app_name='+appName+'&UserToken='+UserToken+'&trans_id='+trans_id+'&service_id='+service_id;\n    const result = yield call(Axios.get, uri);\n    var resultArr = [];\n    resultArr.push(result.data);\n      yield put({ type: SET_AVAILTRANSACTION, value: resultArr });\n    } \n    catch {\n      console.log('get data failed');\n    }\n} \n"]},"metadata":{},"sourceType":"module"}