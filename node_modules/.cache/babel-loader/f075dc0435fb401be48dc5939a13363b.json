{"ast":null,"code":"import _defineProperty from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\src\\\\components\\\\Pages\\\\ApplyNow.js\";\n\n/* eslint-disable */\nimport React, { Component } from 'react';\nimport { Row, Col, OverlayTrigger, ButtonToolbar, Tooltip, Button } from 'react-bootstrap';\nimport IntlTelInput from 'react-intl-tel-input';\nimport 'react-intl-tel-input/dist/main.css';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport cookie from 'react-cookies';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport { appName } from \"../Config/Config\";\nimport { GET_IPDATA, GET_MOBILE_COUNTRY, GET_JOBAPPLIED } from '../../actions';\nimport { emailValidate } from \"../Helpers/SettingHelper\";\nimport Parser from 'html-react-parser';\n\nvar ApplyNow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ApplyNow, _Component);\n\n  function ApplyNow(props) {\n    var _this;\n\n    _classCallCheck(this, ApplyNow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ApplyNow).call(this, props));\n\n    _this.getipdetails = function () {\n      $.getJSON(\"https://api.ipify.org?format=json\", function (data) {\n        cookie.save(\"ipaddress\", data.ip);\n      });\n\n      var qs = require('qs');\n\n      var postObject = {\n        \"app_name\": appName,\n        \"ipaddress\": cookie.load('ipaddress')\n      };\n\n      _this.props.getIpData(qs.stringify(postObject));\n    };\n\n    _this.applyForm = function (valid, inputphone, object, fullnumber) {\n      var errors = {};\n      var formIsValid = true;\n      cookie.save('valid', valid);\n\n      if (valid == false) {\n        formIsValid = false;\n\n        _this.setState({\n          MobileValid: 1\n        });\n\n        $('.errorusermobile').html('<span class=\"errorspan\">Please enter valid mobile number</span>');\n      } else if (valid == true) {\n        $('.errorusermobile').html('');\n\n        _this.setState({\n          MobileValid: 0\n        });\n      }\n\n      return formIsValid;\n    };\n\n    _this.handleChangeTxt = function (valid, event, object) {\n      _this.setState({\n        countrycode: object.dialCode\n      });\n\n      _this.setState({\n        mobile: event\n      });\n    };\n\n    _this.onChangeHandler = function (event) {\n      var reader = new FileReader();\n      var file = event.target.files[0];\n\n      reader.onloadend = function () {\n        _this.setState({\n          resume_name: file.name,\n          resume: file\n        });\n      };\n\n      reader.readAsDataURL(file);\n    };\n\n    _this.handleSubmitForm = function (e) {\n      e.preventDefault();\n\n      if (_this.validateForm()) {\n        var formPayload = _this.state;\n\n        var qs = require('qs');\n\n        var postObject = {\n          \"name\": formPayload.name,\n          \"mobile_no\": formPayload.mobile,\n          \"user_country\": formPayload.countrycode,\n          \"email\": formPayload.email,\n          \"message\": formPayload.content,\n          \"file\": formPayload.resume,\n          \"job_name\": formPayload.careertitle\n        };\n        var config = {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        };\n        var formData = new FormData();\n\n        for (var k in postObject) {\n          formData.append(k, postObject[k]);\n        }\n\n        _this.props.getJobapplied(formData, config);\n\n        _this.setState({\n          name: '',\n          email: '',\n          content: '',\n          mobile: ''\n        });\n      }\n    };\n\n    _this.state = {\n      name: '',\n      email: '',\n      mobile: '',\n      content: '',\n      resume: [],\n      resume_name: \"\",\n      MobileValid: 0,\n      Loading: false,\n      careertitle: _this.props.careertitle,\n      showcontactmsg: ''\n    };\n\n    _this.props.getMobileCountry();\n\n    _this.getipdetails();\n\n    _this.handleSubmitForm = _this.handleSubmitForm.bind(_assertThisInitialized(_this));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ApplyNow, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(Props) {\n      var _this2 = this;\n\n      if (Props.ipaddress !== this.props.ipaddress) {\n        if (Props.ipaddress[0] != '') {\n          this.setState({\n            clientip: Props.ipaddress[0]\n          });\n        } else {\n          this.setState({\n            clientip: 'sg'\n          });\n        }\n      }\n\n      if (Props.mobilecountry !== this.props.mobilecountry) {\n        this.setState({\n          mobilecountry: Props.mobilecountry[0].result_set\n        }, function () {\n          this.loadCountryList();\n        });\n      }\n\n      if (Props.jobapplied !== this.props.jobapplied) {\n        if (Props.jobapplied[0].status == 'success') {\n          this.setState({\n            showcontactmsg: Parser('<span class=\"contactsuccessmsg\"><p>' + Props.jobapplied[0].message + '</p></span>')\n          });\n          setTimeout(function () {\n            _this2.setState({\n              showcontactmsg: ''\n            });\n          }, 5000);\n        } else if (Props.jobapplied[0].status == 'error') {\n          $('.errorresume').html('<span class=\"errorspan\">Please upload CV as doc,docx,pdf only</span>');\n          this.setState({\n            Loading: false\n          });\n        }\n      }\n    }\n  }, {\n    key: \"loadCountryList\",\n    value: function loadCountryList() {\n      var country = [];\n      this.state.mobilecountry.map(function (countries) {\n        country.push(countries.short_code.toLowerCase());\n      });\n      this.setState({\n        countryList: country\n      });\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      var _this$state = this.state,\n          name = _this$state.name,\n          email = _this$state.email,\n          mobile = _this$state.mobile,\n          content = _this$state.content,\n          resume_name = _this$state.resume_name;\n      var errors = {};\n      var formIsValid = true;\n\n      if (!name) {\n        formIsValid = false;\n        $('.errorusername').html('<span class=\"errorspan\">Please enter your name</span>');\n      } else if (name) {\n        $('.errorusername').html('');\n      }\n\n      if (email !== '') {\n        if (emailValidate(email) === false) {\n          formIsValid = false;\n          $('.erroremail').html('<span class=\"errorspan\">Please enter your valid email address</span>');\n        } else {\n          $('.erroremail').html('');\n        }\n      }\n\n      if (!mobile) {\n        formIsValid = false;\n        $('.errorusermobile').html('<span class=\"errorspan\">Please enter your mobile number</span>');\n      } else if (mobile) {\n        if (isNaN(mobile)) {\n          formIsValid = false;\n          $('.errorusermobile').html('<span class=\"errorspan\">Please enter your valid mobile number</span>');\n        } else {\n          if (this.state.MobileValid === 1) {\n            formIsValid = false;\n            $('.errorusermobile').html('<span class=\"errorspan\">Please enter your valid mobile number</span>');\n          } else {\n            $('.errorusermobile').html('');\n          }\n        }\n      }\n\n      if (!content) {\n        formIsValid = false;\n        $('.errorcontent').html('<span class=\"errorspan\">Please fill the message</span>');\n      } else if (content) {\n        $('.errorcontent').html('');\n      }\n\n      if (!resume_name) {\n        formIsValid = false;\n        $('.errorresume').html('<span class=\"errorspan\">Please upload your CV</span>');\n      } else if (resume_name) {\n        $('.errorresume').html('');\n      }\n\n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var defaultip = this.state.clientip;\n\n      if (this.state.countryList && defaultip != '') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"applynow-form-wrap\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"applynow-inner-form-wrap\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          className: \"user_register\",\n          id: \"user_register\",\n          onSubmit: function onSubmit(e) {\n            return _this3.handleSubmitForm(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, React.createElement(Col, {\n          md: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }, \"Name \", React.createElement(\"span\", {\n          className: \"required\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }, \"*\")), React.createElement(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          tabindex: \"3\",\n          className: \"form-control\",\n          onChange: this.handleInputChange,\n          autoComplete: \"off\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"errorusername\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        }, React.createElement(Col, {\n          md: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, \"Email \", React.createElement(\"span\", {\n          className: \"required\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, \"*\")), React.createElement(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          tabindex: \"3\",\n          className: \"form-control\",\n          onChange: this.handleInputChange,\n          autoComplete: \"off\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"erroremail\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          },\n          __self: this\n        }, React.createElement(Col, {\n          md: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          },\n          __self: this\n        }, \"Upload CV \", React.createElement(\"span\", {\n          className: \"required\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          },\n          __self: this\n        }, \"*\"), \" (docx, doc, pdf)\"), React.createElement(\"input\", {\n          type: \"file\",\n          name: \"file\",\n          onChange: this.onChangeHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"errorresume\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        }, React.createElement(Col, {\n          md: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }, \"Mobile Number \", React.createElement(\"span\", {\n          className: \"required\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }, \"*\")), React.createElement(\"div\", {\n          className: \"account-mobile-wrap\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        }, React.createElement(IntlTelInput, {\n          className: \"form-control\",\n          name: \"mobile\",\n          id: \"mobile\",\n          defaultCountry: defaultip,\n          separateDialCode: \"true\",\n          preferredCountries: this.state.countryList,\n          onPhoneNumberBlur: this.applyForm.bind(this),\n          value: this.state.mobile,\n          onPhoneNumberChange: this.handleChangeTxt.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          className: \"errorusermobile\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294\n          },\n          __self: this\n        }, React.createElement(Col, {\n          md: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        }, \"Message \", React.createElement(\"span\", {\n          className: \"required\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        }, \"*\")), React.createElement(\"textarea\", {\n          className: \"form-control\",\n          name: \"content\",\n          onChange: this.handleInputChange,\n          autoComplete: \"off\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"errorcontent\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"form-group txt-center mb0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn_orange btn_minwid animate-btn2 mt10\",\n          type: \"submit\",\n          disabled: this.state.Loading === true ? true : false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303\n          },\n          __self: this\n        }, \" \", this.state.Loading === true && React.createElement(\"span\", {\n          className: \"load-data\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304\n          },\n          __self: this\n        }, \"Loading\"), \" Submit\")), React.createElement(\"div\", {\n          className: \"successMsg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308\n          },\n          __self: this\n        }, this.state.showcontactmsg)))));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"loading loading-h-200\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return ApplyNow;\n}(Component);\n\nvar mapStateTopProps = function mapStateTopProps(state) {\n  return {\n    ipaddress: state.ip,\n    mobilecountry: state.mobilecountry,\n    jobapplied: state.jobapplied\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getIpData: function getIpData(ipaddress) {\n      dispatch({\n        type: GET_IPDATA,\n        ipaddress: ipaddress\n      });\n    },\n    getMobileCountry: function getMobileCountry() {\n      dispatch({\n        type: GET_MOBILE_COUNTRY\n      });\n    },\n    getJobapplied: function getJobapplied(formPayload, config) {\n      dispatch({\n        type: GET_JOBAPPLIED,\n        formPayload: formPayload,\n        config: config\n      });\n    }\n  };\n};\n\nexport default connect(mapStateTopProps, mapDispatchToProps)(withRouter(ApplyNow));","map":{"version":3,"sources":["D:/text video/geniehut-Geni-App-Code/geniehut-Geni-App-Code/front-end/src/components/Pages/ApplyNow.js"],"names":["React","Component","Row","Col","OverlayTrigger","ButtonToolbar","Tooltip","Button","IntlTelInput","Link","withRouter","connect","cookie","axios","$","appName","GET_IPDATA","GET_MOBILE_COUNTRY","GET_JOBAPPLIED","emailValidate","Parser","ApplyNow","props","getipdetails","getJSON","data","save","ip","qs","require","postObject","load","getIpData","stringify","applyForm","valid","inputphone","object","fullnumber","errors","formIsValid","setState","MobileValid","html","handleChangeTxt","event","countrycode","dialCode","mobile","onChangeHandler","reader","FileReader","file","target","files","onloadend","resume_name","name","resume","readAsDataURL","handleSubmitForm","e","preventDefault","validateForm","formPayload","state","email","content","careertitle","config","headers","formData","FormData","k","append","getJobapplied","Loading","showcontactmsg","getMobileCountry","bind","handleInputChange","Props","ipaddress","clientip","mobilecountry","result_set","loadCountryList","jobapplied","status","message","setTimeout","country","map","countries","push","short_code","toLowerCase","countryList","value","isNaN","defaultip","mapStateTopProps","mapDispatchToProps","dispatch","type"],"mappings":";;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,GAAR,EAAaC,GAAb,EAAkBC,cAAlB,EAAkCC,aAAlC,EAAiDC,OAAjD,EAA0DC,MAA1D,QAAuE,iBAAvE;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAO,oCAAP;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,SAASC,UAAT,EAAqBC,kBAArB,EAAyCC,cAAzC,QAA8D,eAA9D;AACA,SAAUC,aAAV,QAA+B,0BAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;IAGMC,Q;;;;;AAEF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;;AADe,UAqBnBC,YArBmB,GAqBL,YAAM;AAChBT,MAAAA,CAAC,CAACU,OAAF,CAAU,mCAAV,EAA+C,UAAUC,IAAV,EAAgB;AAC3Db,QAAAA,MAAM,CAACc,IAAP,CAAY,WAAZ,EAAwBD,IAAI,CAACE,EAA7B;AACH,OAFD;;AAIA,UAAIC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACI,UAAIC,UAAU,GAAG;AACjB,oBAAYf,OADK;AAEjB,qBAAaH,MAAM,CAACmB,IAAP,CAAY,WAAZ;AAFI,OAAjB;;AAIJ,YAAKT,KAAL,CAAWU,SAAX,CAAqBJ,EAAE,CAACK,SAAH,CAAaH,UAAb,CAArB;AACH,KAhCkB;;AAAA,UAoFnBI,SApFmB,GAoFP,UAACC,KAAD,EAAOC,UAAP,EAAkBC,MAAlB,EAAyBC,UAAzB,EAAyC;AACjD,UAAIC,MAAM,GAAG,EAAb;AACA,UAAIC,WAAW,GAAG,IAAlB;AACA5B,MAAAA,MAAM,CAACc,IAAP,CAAY,OAAZ,EAAoBS,KAApB;;AACA,UAAGA,KAAK,IAAI,KAAZ,EAAkB;AACdK,QAAAA,WAAW,GAAG,KAAd;;AACA,cAAKC,QAAL,CAAc;AAACC,UAAAA,WAAW,EAAC;AAAb,SAAd;;AAEA5B,QAAAA,CAAC,CAAC,kBAAD,CAAD,CAAsB6B,IAAtB,CAA2B,iEAA3B;AACH,OALD,MAKM,IAAGR,KAAK,IAAI,IAAZ,EAAiB;AACrBrB,QAAAA,CAAC,CAAC,kBAAD,CAAD,CAAsB6B,IAAtB,CAA2B,EAA3B;;AACA,cAAKF,QAAL,CAAc;AAACC,UAAAA,WAAW,EAAC;AAAb,SAAd;AACD;;AAED,aAAOF,WAAP;AACH,KAnGkB;;AAAA,UAqGlBI,eArGkB,GAqGA,UAACT,KAAD,EAAQU,KAAR,EAAcR,MAAd,EAAyB;AACxC,YAAKI,QAAL,CAAc;AAACK,QAAAA,WAAW,EAAET,MAAM,CAACU;AAArB,OAAd;;AACA,YAAKN,QAAL,CAAc;AAACO,QAAAA,MAAM,EAAEH;AAAT,OAAd;AACH,KAxGkB;;AAAA,UA0GlBI,eA1GkB,GA0GF,UAAAJ,KAAK,EAAE;AACpB,UAAIK,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACA,UAAMC,IAAI,GAAGP,KAAK,CAACQ,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;;AACAJ,MAAAA,MAAM,CAACK,SAAP,GAAmB,YAAM;AACvB,cAAKd,QAAL,CAAc;AACZe,UAAAA,WAAW,EAAEJ,IAAI,CAACK,IADN;AAEZC,UAAAA,MAAM,EAAEN;AAFI,SAAd;AAID,OALD;;AAOAF,MAAAA,MAAM,CAACS,aAAP,CAAqBP,IAArB;AACH,KArHkB;;AAAA,UAuHlBQ,gBAvHkB,GAuHC,UAACC,CAAD,EAAO;AACvBA,MAAAA,CAAC,CAACC,cAAF;;AACI,UAAG,MAAKC,YAAL,EAAH,EAAuB;AAEnB,YAAMC,WAAW,GAAG,MAAKC,KAAzB;;AACA,YAAIrC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,YAAIC,UAAU,GAAG;AACjB,kBAAQkC,WAAW,CAACP,IADH;AAEjB,uBAAaO,WAAW,CAAChB,MAFR;AAGjB,0BAAgBgB,WAAW,CAAClB,WAHX;AAIjB,mBAASkB,WAAW,CAACE,KAJJ;AAKjB,qBAAWF,WAAW,CAACG,OALN;AAMjB,kBAAQH,WAAW,CAACN,MANH;AAOjB,sBAAYM,WAAW,CAACI;AAPP,SAAjB;AAUA,YAAMC,MAAM,GAAG;AACfC,UAAAA,OAAO,EAAE;AACT,4BAAgB;AADP;AADM,SAAf;AAMA,YAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;;AACA,aAAI,IAAIC,CAAR,IAAa3C,UAAb,EAAyB;AACzByC,UAAAA,QAAQ,CAACG,MAAT,CAAgBD,CAAhB,EAAmB3C,UAAU,CAAC2C,CAAD,CAA7B;AACC;;AACD,cAAKnD,KAAL,CAAWqD,aAAX,CAAyBJ,QAAzB,EAAkCF,MAAlC;;AAEA,cAAK5B,QAAL,CAAc;AAACgB,UAAAA,IAAI,EAAC,EAAN;AAASS,UAAAA,KAAK,EAAC,EAAf;AAAkBC,UAAAA,OAAO,EAAC,EAA1B;AAA6BnB,UAAAA,MAAM,EAAC;AAApC,SAAd;AAEH;AACP,KAtJiB;;AAEf,UAAKiB,KAAL,GAAa;AACTR,MAAAA,IAAI,EAAE,EADG;AAETS,MAAAA,KAAK,EAAE,EAFE;AAGTlB,MAAAA,MAAM,EAAC,EAHE;AAITmB,MAAAA,OAAO,EAAC,EAJC;AAKTT,MAAAA,MAAM,EAAE,EALC;AAMTF,MAAAA,WAAW,EAAE,EANJ;AAOTd,MAAAA,WAAW,EAAC,CAPH;AAQTkC,MAAAA,OAAO,EAAG,KARD;AASTR,MAAAA,WAAW,EAAE,MAAK9C,KAAL,CAAW8C,WATf;AAUTS,MAAAA,cAAc,EAAC;AAVN,KAAb;;AAaA,UAAKvD,KAAL,CAAWwD,gBAAX;;AACA,UAAKvD,YAAL;;AACA,UAAKqC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBmB,IAAtB,+BAAxB;AACA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBD,IAAvB,+BAAzB;AAlBe;AAoBlB;;;;8CAeyBE,K,EAAO;AAAA;;AAGxB,UAAGA,KAAK,CAACC,SAAN,KAAmB,KAAK5D,KAAL,CAAW4D,SAAjC,EAA2C;AACxC,YAAGD,KAAK,CAACC,SAAN,CAAgB,CAAhB,KAAoB,EAAvB,EAA0B;AACtB,eAAKzC,QAAL,CAAc;AAAC0C,YAAAA,QAAQ,EAAEF,KAAK,CAACC,SAAN,CAAgB,CAAhB;AAAX,WAAd;AACH,SAFD,MAEO;AACH,eAAKzC,QAAL,CAAc;AAAC0C,YAAAA,QAAQ,EAAE;AAAX,WAAd;AACH;AACH;;AACD,UAAGF,KAAK,CAACG,aAAN,KAAuB,KAAK9D,KAAL,CAAW8D,aAArC,EAAmD;AAChD,aAAK3C,QAAL,CAAc;AAAC2C,UAAAA,aAAa,EAACH,KAAK,CAACG,aAAN,CAAoB,CAApB,EAAuBC;AAAtC,SAAd,EAAiE,YAAW;AACxE,eAAKC,eAAL;AACH,SAFD;AAGH;;AAEA,UAAGL,KAAK,CAACM,UAAN,KAAoB,KAAKjE,KAAL,CAAWiE,UAAlC,EAA6C;AAC1C,YAAGN,KAAK,CAACM,UAAN,CAAiB,CAAjB,EAAoBC,MAApB,IAA8B,SAAjC,EAA2C;AAEnC,eAAK/C,QAAL,CAAc;AAACoC,YAAAA,cAAc,EAACzD,MAAM,CAAC,wCAAsC6D,KAAK,CAACM,UAAN,CAAiB,CAAjB,EAAoBE,OAA1D,GAAkE,aAAnE;AAAtB,WAAd;AACAC,UAAAA,UAAU,CAAC,YAAM;AACjB,YAAA,MAAI,CAACjD,QAAL,CAAc;AAACoC,cAAAA,cAAc,EAAC;AAAhB,aAAd;AACC,WAFS,EAER,IAFQ,CAAV;AAIP,SAPD,MAOM,IAAGI,KAAK,CAACM,UAAN,CAAiB,CAAjB,EAAoBC,MAApB,IAA8B,OAAjC,EAAyC;AAC1C1E,UAAAA,CAAC,CAAC,cAAD,CAAD,CAAkB6B,IAAlB,CAAuB,sEAAvB;AACD,eAAKF,QAAL,CAAc;AAACmC,YAAAA,OAAO,EAAC;AAAT,WAAd;AAEH;AACJ;AAER;;;sCAEiB;AACV,UAAIe,OAAO,GAAE,EAAb;AACA,WAAK1B,KAAL,CAAWmB,aAAX,CAAyBQ,GAAzB,CAA6B,UAASC,SAAT,EAAmB;AACxCF,QAAAA,OAAO,CAACG,IAAR,CAAaD,SAAS,CAACE,UAAV,CAAqBC,WAArB,EAAb;AACP,OAFD;AAGA,WAAKvD,QAAL,CAAc;AAACwD,QAAAA,WAAW,EAACN;AAAb,OAAd;AACN;;;sCAEgB9C,K,EAAO;AAAA,0BACGA,KAAK,CAACQ,MADT;AAAA,UACZI,IADY,iBACZA,IADY;AAAA,UACNyC,KADM,iBACNA,KADM;AAEnB,WAAKzD,QAAL,qBACGgB,IADH,EACUyC,KADV;AAIL;;;mCAsEe;AAAA,wBAE6C,KAAKjC,KAFlD;AAAA,UAEAR,IAFA,eAEAA,IAFA;AAAA,UAEMS,KAFN,eAEMA,KAFN;AAAA,UAEalB,MAFb,eAEaA,MAFb;AAAA,UAEqBmB,OAFrB,eAEqBA,OAFrB;AAAA,UAE8BX,WAF9B,eAE8BA,WAF9B;AAIR,UAAIjB,MAAM,GAAG,EAAb;AACA,UAAIC,WAAW,GAAG,IAAlB;;AAEA,UAAI,CAACiB,IAAL,EAAW;AACPjB,QAAAA,WAAW,GAAG,KAAd;AACA1B,QAAAA,CAAC,CAAC,gBAAD,CAAD,CAAoB6B,IAApB,CAAyB,uDAAzB;AACH,OAHD,MAGM,IAAIc,IAAJ,EAAU;AACZ3C,QAAAA,CAAC,CAAC,gBAAD,CAAD,CAAoB6B,IAApB,CAAyB,EAAzB;AACH;;AACD,UAAIuB,KAAK,KAAG,EAAZ,EAAgB;AACZ,YAAG/C,aAAa,CAAC+C,KAAD,CAAb,KAAuB,KAA1B,EAAiC;AAC7B1B,UAAAA,WAAW,GAAG,KAAd;AACA1B,UAAAA,CAAC,CAAC,aAAD,CAAD,CAAiB6B,IAAjB,CAAsB,sEAAtB;AACH,SAHD,MAGM;AACF7B,UAAAA,CAAC,CAAC,aAAD,CAAD,CAAiB6B,IAAjB,CAAsB,EAAtB;AACH;AAEJ;;AACD,UAAI,CAACK,MAAL,EAAa;AACTR,QAAAA,WAAW,GAAG,KAAd;AACA1B,QAAAA,CAAC,CAAC,kBAAD,CAAD,CAAsB6B,IAAtB,CAA2B,gEAA3B;AACH,OAHD,MAGM,IAAIK,MAAJ,EAAY;AACd,YAAGmD,KAAK,CAACnD,MAAD,CAAR,EACA;AACIR,UAAAA,WAAW,GAAG,KAAd;AACA1B,UAAAA,CAAC,CAAC,kBAAD,CAAD,CAAsB6B,IAAtB,CAA2B,sEAA3B;AACH,SAJD,MAKK;AACD,cAAG,KAAKsB,KAAL,CAAWvB,WAAX,KAAyB,CAA5B,EAA+B;AAC3BF,YAAAA,WAAW,GAAG,KAAd;AACA1B,YAAAA,CAAC,CAAC,kBAAD,CAAD,CAAsB6B,IAAtB,CAA2B,sEAA3B;AACH,WAHD,MAIK;AACD7B,YAAAA,CAAC,CAAC,kBAAD,CAAD,CAAsB6B,IAAtB,CAA2B,EAA3B;AACH;AAGJ;AACJ;;AAED,UAAI,CAACwB,OAAL,EAAc;AACV3B,QAAAA,WAAW,GAAG,KAAd;AACA1B,QAAAA,CAAC,CAAC,eAAD,CAAD,CAAmB6B,IAAnB,CAAwB,wDAAxB;AACH,OAHD,MAGM,IAAIwB,OAAJ,EAAa;AACfrD,QAAAA,CAAC,CAAC,eAAD,CAAD,CAAmB6B,IAAnB,CAAwB,EAAxB;AACH;;AAED,UAAI,CAACa,WAAL,EAAkB;AACdhB,QAAAA,WAAW,GAAG,KAAd;AACA1B,QAAAA,CAAC,CAAC,cAAD,CAAD,CAAkB6B,IAAlB,CAAuB,sDAAvB;AACH,OAHD,MAGM,IAAIa,WAAJ,EAAiB;AACnB1C,QAAAA,CAAC,CAAC,cAAD,CAAD,CAAkB6B,IAAlB,CAAuB,EAAvB;AACH;;AAED,WAAKF,QAAL,CAAc;AACVF,QAAAA,MAAM,EAAEA;AADE,OAAd;AAGA,aAAOC,WAAP;AACH;;;6BAIE;AAAA;;AACT,UAAI4D,SAAS,GAAI,KAAKnC,KAAL,CAAWkB,QAA5B;;AACA,UAAG,KAAKlB,KAAL,CAAWgC,WAAX,IAA0BG,SAAS,IAAI,EAA1C,EAA8C;AAC5C,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK;AAAM,UAAA,SAAS,EAAC,eAAhB;AAAgC,UAAA,EAAE,EAAC,eAAnC;AAAmD,UAAA,QAAQ,EAAG,kBAACvC,CAAD;AAAA,mBAAO,MAAI,CAACD,gBAAL,CAAsBC,CAAtB,CAAP;AAAA,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAY;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAZ,CADJ,EAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,MAAxB;AAAgC,UAAA,QAAQ,EAAC,GAAzC;AAA6C,UAAA,SAAS,EAAC,cAAvD;AAAsE,UAAA,QAAQ,EAAE,KAAKmB,iBAArF;AAAyG,UAAA,YAAY,EAAC,KAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADJ,CADA,EAOA;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPA,CADH,EAUG;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAa;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAb,CADJ,EAEI;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,IAAI,EAAC,OAAzB;AAAkC,UAAA,QAAQ,EAAC,GAA3C;AAA+C,UAAA,SAAS,EAAC,cAAzD;AAAwE,UAAA,QAAQ,EAAE,KAAKA,iBAAvF;AAA2G,UAAA,YAAY,EAAC,KAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADJ,CADA,EAOA;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPA,CAVH,EAmBG;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAiB;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAjB,sBADJ,EAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,MAAxB;AAA+B,UAAA,QAAQ,EAAE,KAAK/B,eAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADJ,CADA,EAOA;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPA,CAnBH,EA4BG;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAqB;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAArB,CADJ,EAEI;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACU,oBAAC,YAAD;AAAc,UAAA,SAAS,EAAC,cAAxB;AAAuC,UAAA,IAAI,EAAC,QAA5C;AAAqD,UAAA,EAAE,EAAC,QAAxD;AACQ,UAAA,cAAc,EAAEmD,SADxB;AAEQ,UAAA,gBAAgB,EAAC,MAFzB;AAGQ,UAAA,kBAAkB,EAAE,KAAKnC,KAAL,CAAWgC,WAHvC;AAIQ,UAAA,iBAAiB,EAAE,KAAK/D,SAAL,CAAe6C,IAAf,CAAoB,IAApB,CAJ3B;AAKQ,UAAA,KAAK,EAAE,KAAKd,KAAL,CAAWjB,MAL1B;AAMQ,UAAA,mBAAmB,EAAE,KAAKJ,eAAL,CAAqBmC,IAArB,CAA0B,IAA1B,CAN7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADV,CAFJ,CADJ,CADA,EAkBA;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAlBA,CA5BH,EAgDG;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAe;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAf,CADJ,EAEI;AAAU,UAAA,SAAS,EAAC,cAApB;AAAmC,UAAA,IAAI,EAAC,SAAxC;AAAkD,UAAA,QAAQ,EAAE,KAAKC,iBAAjE;AAAqF,UAAA,YAAY,EAAC,KAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADJ,CADA,EAOA;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPA,CAhDH,EAyDG;AAAK,UAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAQ,UAAA,SAAS,EAAC,6CAAlB;AAAgE,UAAA,IAAI,EAAC,QAArE;AAA8E,UAAA,QAAQ,EAAG,KAAKf,KAAL,CAAWW,OAAX,KAAsB,IAAvB,GAA6B,IAA7B,GAAkC,KAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAmI,KAAKX,KAAL,CAAWW,OAAX,KAAsB,IAAtB,IACnH;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADhB,YADA,CAzDH,EA+DG;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6B,KAAKX,KAAL,CAAWY,cAAxC,CA/DH,CADL,CADJ,CADJ,CADJ;AA0ED,OA3ED,MA2EM;AACL,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAL,CAAR;AACA;AACD;;;;EA5SqB5E,S;;AA+SvB,IAAMoG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACpC,KAAD,EAAW;AAClC,SAAO;AACLiB,IAAAA,SAAS,EAASjB,KAAK,CAACtC,EADnB;AAELyD,IAAAA,aAAa,EAAKnB,KAAK,CAACmB,aAFnB;AAGLG,IAAAA,UAAU,EAAQtB,KAAK,CAACsB;AAHnB,GAAP;AAKD,CAND;;AAQA,IAAMe,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLvE,IAAAA,SAAS,EAAE,mBAACkD,SAAD,EAAe;AACtBqB,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAExF,UAAR;AAAoBkE,QAAAA,SAAS,EAATA;AAApB,OAAD,CAAR;AACH,KAHI;AAILJ,IAAAA,gBAAgB,EAAE,4BAAM;AACtByB,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEvF;AAAR,OAAD,CAAR;AACD,KANI;AAON0D,IAAAA,aAAa,EAAE,uBAACX,WAAD,EAAaK,MAAb,EAAwB;AACpCkC,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEtF,cAAR;AAAwB8C,QAAAA,WAAW,EAAXA,WAAxB;AAAoCK,QAAAA,MAAM,EAANA;AAApC,OAAD,CAAR;AACF;AATK,GAAP;AAWD,CAZD;;AAaA,eAAe1D,OAAO,CAAC0F,gBAAD,EAAmBC,kBAAnB,CAAP,CAA8C5F,UAAU,CAACW,QAAD,CAAxD,CAAf","sourcesContent":["/* eslint-disable */\nimport React, { Component } from 'react';\nimport {Row, Col, OverlayTrigger, ButtonToolbar, Tooltip, Button} from 'react-bootstrap';\nimport IntlTelInput from 'react-intl-tel-input';\nimport 'react-intl-tel-input/dist/main.css';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport cookie from 'react-cookies';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport { appName } from \"../Config/Config\";\n\nimport { GET_IPDATA, GET_MOBILE_COUNTRY, GET_JOBAPPLIED} from '../../actions';\nimport {  emailValidate } from \"../Helpers/SettingHelper\";\nimport Parser from 'html-react-parser';\n\n\nclass ApplyNow extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {  \n            name: '',\n            email: '',\n            mobile:'',\n            content:'',\n            resume: [],\n            resume_name: \"\",\n            MobileValid:0,\n            Loading : false,\n            careertitle: this.props.careertitle,\n            showcontactmsg:''\n            };\n      \n        this.props.getMobileCountry();\n        this.getipdetails();\n        this.handleSubmitForm = this.handleSubmitForm.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n\n    }\n    getipdetails =() => {\n        $.getJSON(\"https://api.ipify.org?format=json\", function (data) {\n            cookie.save(\"ipaddress\",data.ip);\n        });\n\n        var qs = require('qs');\n            var postObject = {\n            \"app_name\": appName,\n            \"ipaddress\": cookie.load('ipaddress')\n            };\n        this.props.getIpData(qs.stringify(postObject));\n    }\n\n\n    componentWillReceiveProps(Props) {\n\n     \n             if(Props.ipaddress !==this.props.ipaddress){\n                if(Props.ipaddress[0]!=''){\n                    this.setState({clientip :Props.ipaddress[0]});\n                } else {\n                    this.setState({clientip :'sg'});\n                }\n             }\n             if(Props.mobilecountry !==this.props.mobilecountry){\n                this.setState({mobilecountry:Props.mobilecountry[0].result_set}, function() {\n                    this.loadCountryList();\n                });\n            }\n\n             if(Props.jobapplied !==this.props.jobapplied){\n                if(Props.jobapplied[0].status == 'success'){\n\n                        this.setState({showcontactmsg:Parser('<span class=\"contactsuccessmsg\"><p>'+Props.jobapplied[0].message+'</p></span>')})\n                        setTimeout(() => {\n                        this.setState({showcontactmsg:''})\n                        },5000);\n\n                }else if(Props.jobapplied[0].status == 'error'){\n                     $('.errorresume').html('<span class=\"errorspan\">Please upload CV as doc,docx,pdf only</span>');\n                    this.setState({Loading:false})\n\n                }\n            }\n\n    }\n\n    loadCountryList() {\n            var country= [];\n            this.state.mobilecountry.map(function(countries){\n                    country.push(countries.short_code.toLowerCase());\n            });\n            this.setState({countryList:country});\n     }\n\n    handleInputChange(event) {\n          const {name, value} = event.target;\n          this.setState({\n            [name]: value\n          });\n          \n    }\n\n    applyForm = (valid,inputphone,object,fullnumber)  => {\n        let errors = {};\n        let formIsValid = true;\n        cookie.save('valid',valid);\n        if(valid == false){\n            formIsValid = false;\n            this.setState({MobileValid:1});\n            \n            $('.errorusermobile').html('<span class=\"errorspan\">Please enter valid mobile number</span>');\n        }else if(valid == true){\n          $('.errorusermobile').html('');\n          this.setState({MobileValid:0});\n        }\n\n        return formIsValid;\n    }\n\n     handleChangeTxt = (valid, event,object) => {  \n        this.setState({countrycode :object.dialCode });\n        this.setState({mobile :event });\n    }\n\n     onChangeHandler=event=>{\n        let reader = new FileReader();\n        const file = event.target.files[0];\n        reader.onloadend = () => {\n          this.setState({\n            resume_name: file.name,\n            resume: file\n          });\n        };\n\n        reader.readAsDataURL(file);\n    }\n\n     handleSubmitForm = (e) => {\n        e.preventDefault();\n            if(this.validateForm()){\n                \n                const formPayload = this.state;\n                var qs = require('qs');\n                var postObject = {\n                \"name\": formPayload.name,\n                \"mobile_no\": formPayload.mobile,\n                \"user_country\": formPayload.countrycode,\n                \"email\": formPayload.email,\n                \"message\": formPayload.content,\n                \"file\": formPayload.resume, \n                \"job_name\": formPayload.careertitle\n                };\n\n                const config = {\n                headers: {\n                'Content-Type': 'multipart/form-data'\n                }\n                };\n             \n                let formData = new FormData();\n                for(let k in postObject) {\n                formData.append(k, postObject[k]);\n                }\n                this.props.getJobapplied(formData,config);\n\n                this.setState({name:'',email:'',content:'',mobile:''})\n\n            }\n     }\n\n     validateForm() {\n            \n            const { name, email, mobile, content, resume_name} = this.state;\n            \n            let errors = {};\n            let formIsValid = true;\n\n            if (!name) {\n                formIsValid = false;\n                $('.errorusername').html('<span class=\"errorspan\">Please enter your name</span>');\n            }else if (name) {\n                $('.errorusername').html('');\n            }\n            if (email!=='') {\n                if(emailValidate(email)===false) {\n                    formIsValid = false;\n                    $('.erroremail').html('<span class=\"errorspan\">Please enter your valid email address</span>');\n                }else {\n                    $('.erroremail').html('');\n                }\n                \n            }\n            if (!mobile) {\n                formIsValid = false;\n                $('.errorusermobile').html('<span class=\"errorspan\">Please enter your mobile number</span>');\n            }else if (mobile) {\n                if(isNaN(mobile))\n                {\n                    formIsValid = false;\n                    $('.errorusermobile').html('<span class=\"errorspan\">Please enter your valid mobile number</span>');\n                }\n                else {\n                    if(this.state.MobileValid===1) {\n                        formIsValid = false;\n                        $('.errorusermobile').html('<span class=\"errorspan\">Please enter your valid mobile number</span>');\n                    }\n                    else {\n                        $('.errorusermobile').html('');\n                    }\n\n                 \n                }\n            }\n\n            if (!content) {\n                formIsValid = false;\n                $('.errorcontent').html('<span class=\"errorspan\">Please fill the message</span>');\n            }else if (content) {\n                $('.errorcontent').html('');\n            }\n\n            if (!resume_name) {\n                formIsValid = false;\n                $('.errorresume').html('<span class=\"errorspan\">Please upload your CV</span>');\n            }else if (resume_name) {\n                $('.errorresume').html('');\n            }\n            \n            this.setState({\n                errors: errors\n            });\n            return formIsValid;\n        }\n\n\n\n  render() {\n  let defaultip  = this.state.clientip;\n  if(this.state.countryList && defaultip != '') {\n    return (\n        <div>\n            <div className=\"applynow-form-wrap\">\n                <div className=\"applynow-inner-form-wrap\">\n                     <form className=\"user_register\" id=\"user_register\" onSubmit={ (e) => this.handleSubmitForm(e)}>\n                        <div className=\"form-group\">\n                        <Row>\n                            <Col md={12}>\n                                <label>Name <span className=\"required\">*</span></label>\n                                <input type=\"text\" name=\"name\"  tabindex=\"3\" className=\"form-control\" onChange={this.handleInputChange}  autoComplete=\"off\"/>\n                            </Col>\n                        </Row>\n                        <div className=\"errorusername\"></div>\n                        </div>\n                        <div className=\"form-group\">\n                        <Row>\n                            <Col md={12}>\n                                <label>Email <span className=\"required\">*</span></label>\n                                <input type=\"email\" name=\"email\"  tabindex=\"3\" className=\"form-control\" onChange={this.handleInputChange}  autoComplete=\"off\"/>\n                            </Col>\n                        </Row>\n                        <div className=\"erroremail\"></div>\n                        </div>\n                        <div className=\"form-group\">\n                        <Row>\n                            <Col md={12}>\n                                <label>Upload CV <span className=\"required\">*</span> (docx, doc, pdf)</label>\n                                <input type=\"file\" name=\"file\" onChange={this.onChangeHandler} />\n                            </Col>\n                        </Row>\n                        <div className=\"errorresume\"></div>\n                        </div>\n                        <div className=\"form-group\">\n                        <Row>\n                            <Col md={12}>\n                                <label>Mobile Number <span className=\"required\">*</span></label>\n                                <div className=\"account-mobile-wrap\">\n                                          <IntlTelInput className=\"form-control\" name=\"mobile\" id=\"mobile\"\n                                                  defaultCountry={defaultip}\n                                                  separateDialCode='true'\n                                                  preferredCountries={this.state.countryList}\n                                                  onPhoneNumberBlur={this.applyForm.bind(this)}\n                                                  value={this.state.mobile}\n                                                  onPhoneNumberChange={this.handleChangeTxt.bind(this)}\n\n                                                 \n                                             />\n                                </div>\n                            </Col>\n                        </Row>\n                        <div className=\"errorusermobile\"></div>\n                        </div>\n                        <div className=\"form-group\">\n                        <Row>\n                            <Col md={12}>\n                                <label>Message <span className=\"required\">*</span></label>\n                                <textarea className=\"form-control\" name=\"content\" onChange={this.handleInputChange}  autoComplete=\"off\"></textarea>\n                            </Col>\n                        </Row>\n                        <div className=\"errorcontent\"></div>\n                        </div>\n                        <div className=\"form-group txt-center mb0\">\n                        <button className=\"btn btn_orange btn_minwid animate-btn2 mt10\" type=\"submit\" disabled={(this.state.Loading ===true)?true:false}> {this.state.Loading ===true &&\n                                        <span className=\"load-data\">Loading</span> \n                                        } Submit\n                        </button>\n                        </div>\n                        <div className=\"successMsg\">{this.state.showcontactmsg}</div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n   \n  }else {\n   return (<div><div className=\"loading loading-h-200\"></div></div>);\n  }\n }\n}\n\nconst mapStateTopProps = (state) => {\n  return {\n    ipaddress       : state.ip,\n    mobilecountry   : state.mobilecountry,\n    jobapplied      : state.jobapplied\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getIpData: (ipaddress) => {\n        dispatch({ type: GET_IPDATA, ipaddress});\n    },\n    getMobileCountry: () => {\n      dispatch({ type: GET_MOBILE_COUNTRY});\n    },\n   getJobapplied: (formPayload,config) => {\n      dispatch({ type: GET_JOBAPPLIED, formPayload,config});\n   },\n  }\n}\nexport default connect(mapStateTopProps, mapDispatchToProps)(withRouter(ApplyNow));\n\n"]},"metadata":{},"sourceType":"module"}