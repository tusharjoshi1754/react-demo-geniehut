{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetProServices),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetAllProServices);\n\n/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_PROSERVICES, SET_PROSERVICES, GET_ALLPROSERVICES, SET_ALLPROSERVICES } from '../actions';\nimport { apiUrl, appName } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\nexport var watchGetProServices =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetProServices() {\n  return _regeneratorRuntime.wrap(function watchGetProServices$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery(GET_PROSERVICES, workerGetProServices);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, watchGetProServices);\n});\n\nfunction workerGetProServices(params, page) {\n  var result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetProServices$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(GetProServices, params);\n\n        case 3:\n          result = _context2.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context2.next = 8;\n          return put({\n            type: SET_PROSERVICES,\n            value: resultArr\n          });\n\n        case 8:\n          _context2.next = 13;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log('login failed');\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n}\n\nfunction GetProServices(params) {\n  var category = '';\n\n  if (params.category !== '' && typeof params.category !== 'undefined') {\n    category = \"category_id=\" + params.category + \"&page=\" + params.page + \"\";\n  } else {\n    category = \"page=\" + params.page + \"\";\n  }\n\n  return Axios.get(apiUrl + 'user/listServices?app_name=' + appName + '&addservice=genpro&' + category);\n}\n\nexport var watchGetAllProServices =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetAllProServices() {\n  return _regeneratorRuntime.wrap(function watchGetAllProServices$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeEvery(GET_ALLPROSERVICES, workerGetAllProServices);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, watchGetAllProServices);\n});\n\nfunction workerGetAllProServices() {\n  var result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetAllProServices$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(GetAllProServices);\n\n        case 3:\n          result = _context4.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context4.next = 8;\n          return put({\n            type: SET_ALLPROSERVICES,\n            value: resultArr\n          });\n\n        case 8:\n          _context4.next = 13;\n          break;\n\n        case 10:\n          _context4.prev = 10;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log('login failed');\n\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked2, null, [[0, 10]]);\n}\n\nfunction GetAllProServices() {\n  return Axios.get(apiUrl + 'user/listallpro');\n}","map":{"version":3,"sources":["D:/text video/geniehut-Geni-App-Code/geniehut-Geni-App-Code/front-end/src/sagas/proservices.js"],"names":["workerGetProServices","workerGetAllProServices","takeEvery","call","put","GET_PROSERVICES","SET_PROSERVICES","GET_ALLPROSERVICES","SET_ALLPROSERVICES","apiUrl","appName","Axios","cookie","watchGetProServices","params","page","GetProServices","result","resultArr","push","data","type","value","console","log","category","get","watchGetAllProServices","GetAllProServices"],"mappings":";;;;yBAWUA,oB;;;yBA6BAC,uB;;AAxCV;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,eAAT,EAA0BC,eAA1B,EAA0CC,kBAA1C,EAA8DC,kBAA9D,QAAwF,YAAxF;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,6BAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,OAAO,IAAMC,mBAAmB;AAAA;AAAA,yBAAG,SAAtBA,mBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AACjC,iBAAMX,SAAS,CAACG,eAAD,EAAkBL,oBAAlB,CAAf;;AADiC;AAAA;AAAA;AAAA;AAAA;AAAA,KAAtBa,mBAAsB;AAAA,CAAH,CAAzB;;AAIP,SAAUb,oBAAV,CAA+Bc,MAA/B,EAAuCC,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmB,iBAAMZ,IAAI,CAACa,cAAD,EAAiBF,MAAjB,CAAV;;AAFnB;AAEUG,UAAAA,MAFV;AAGQC,UAAAA,SAHR,GAGoB,EAHpB;AAIGA,UAAAA,SAAS,CAACC,IAAV,CAAeF,MAAM,CAACG,IAAtB;AAJH;AAKI,iBAAMhB,GAAG,CAAC;AAAEiB,YAAAA,IAAI,EAAEf,eAAR;AAAyBgB,YAAAA,KAAK,EAAEJ;AAAhC,WAAD,CAAT;;AALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQIK,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAASR,cAAT,CAAwBF,MAAxB,EAAgC;AAC9B,MAAIW,QAAQ,GAAG,EAAf;;AACA,MAAGX,MAAM,CAACW,QAAP,KAAkB,EAAlB,IAAwB,OAAOX,MAAM,CAACW,QAAd,KAAyB,WAApD,EAAiE;AAC/DA,IAAAA,QAAQ,GAAC,iBAAeX,MAAM,CAACW,QAAtB,GAA+B,QAA/B,GAAwCX,MAAM,CAACC,IAA/C,GAAoD,EAA7D;AACD,GAFD,MAEK;AACHU,IAAAA,QAAQ,GAAC,UAAQX,MAAM,CAACC,IAAf,GAAoB,EAA7B;AACD;;AACD,SAAOJ,KAAK,CAACe,GAAN,CAAUjB,MAAM,GAAC,6BAAP,GAAqCC,OAArC,GAA6C,qBAA7C,GAAmEe,QAA7E,CAAP;AACD;;AAID,OAAO,IAAME,sBAAsB;AAAA;AAAA,yBAAG,SAAzBA,sBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AACpC,iBAAMzB,SAAS,CAACK,kBAAD,EAAqBN,uBAArB,CAAf;;AADoC;AAAA;AAAA;AAAA;AAAA;AAAA,KAAzB0B,sBAAyB;AAAA,CAAH,CAA5B;;AAIP,SAAU1B,uBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmB,iBAAME,IAAI,CAACyB,iBAAD,CAAV;;AAFnB;AAEUX,UAAAA,MAFV;AAGQC,UAAAA,SAHR,GAGoB,EAHpB;AAIIA,UAAAA,SAAS,CAACC,IAAV,CAAeF,MAAM,CAACG,IAAtB;AAJJ;AAKI,iBAAMhB,GAAG,CAAC;AAAEiB,YAAAA,IAAI,EAAEb,kBAAR;AAA4Bc,YAAAA,KAAK,EAAEJ;AAAnC,WAAD,CAAT;;AALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQIK,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,SAASI,iBAAT,GAA6B;AAC3B,SAAOjB,KAAK,CAACe,GAAN,CAAUjB,MAAM,GAAC,iBAAjB,CAAP;AACD","sourcesContent":["/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_PROSERVICES, SET_PROSERVICES,GET_ALLPROSERVICES, SET_ALLPROSERVICES } from '../actions';\nimport { apiUrl, appName } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\n\nexport const watchGetProServices = function* () {\n  yield takeEvery(GET_PROSERVICES, workerGetProServices);\n}\n\nfunction* workerGetProServices(params, page) {\n  try {\n    const result = yield call(GetProServices, params);    \n    var resultArr = [];\n\t  resultArr.push(result.data);\n    yield put({ type: SET_PROSERVICES, value: resultArr });\n  } \n  catch {\n    console.log('login failed');\n  }\n} \n\n\nfunction GetProServices(params) {\n  let category = '';\n  if(params.category!=='' && typeof params.category!=='undefined') {\n    category=\"category_id=\"+params.category+\"&page=\"+params.page+\"\";\n  }else{\n    category=\"page=\"+params.page+\"\";\n  }\n  return Axios.get(apiUrl+'user/listServices?app_name='+appName+'&addservice=genpro&'+category);\n} \n\n\n\nexport const watchGetAllProServices = function* () {\n  yield takeEvery(GET_ALLPROSERVICES, workerGetAllProServices);\n}\n\nfunction* workerGetAllProServices() {\n  try {\n    const result = yield call(GetAllProServices);    \n    var resultArr = [];\n    resultArr.push(result.data);\n    yield put({ type: SET_ALLPROSERVICES, value: resultArr });\n  } \n  catch {\n    console.log('login failed');\n  }\n} \n\nfunction GetAllProServices() {\n  return Axios.get(apiUrl+'user/listallpro');\n} "]},"metadata":{},"sourceType":"module"}