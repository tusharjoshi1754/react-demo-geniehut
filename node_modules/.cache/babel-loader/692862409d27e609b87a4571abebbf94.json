{"ast":null,"code":"import _classCallCheck from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\src\\\\components\\\\Customer\\\\Genruntranscation.js\";\n\n/* eslint-disable */\nimport React, { Component } from \"react\";\nimport Select from \"react-select\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Header from \"../Layout/Header\";\nimport Footer from \"../Layout/Footer\";\nimport cookie from \"react-cookies\";\nimport SecondaryHeader from \"../Layout/SecondaryHeader\";\nimport Profilebar from \"../Account/Profilebar\";\nimport { PageTitle, LoadingSec, getExpirydate } from \"../Helpers/SettingHelper\";\nimport { SearchImage } from \"../Config/Config\";\nimport { GET_RUNTRANSACTION } from \"../../actions\";\nvar options = [{\n  value: \"P\",\n  label: \"Pending\"\n}, {\n  value: \"CO\",\n  label: \"Completed\"\n}];\n\nvar Genruntranscation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Genruntranscation, _Component);\n\n  function Genruntranscation(props) {\n    var _this;\n\n    _classCallCheck(this, Genruntranscation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Genruntranscation).call(this, props));\n\n    _this.handleChange = function (selectedOption) {\n      _this.setState({\n        selectedOption: selectedOption\n      });\n\n      _this.setState({\n        selectedvalue: selectedOption.value,\n        page: 0,\n        oldleads: [],\n        runleadlist: \"\"\n      }, function () {\n        this.loadruntransaction();\n      }.bind(_assertThisInitialized(_this)));\n    };\n\n    _this.state = {\n      selectedvalue: \"\",\n      selectedOption: \"\",\n      page: 0,\n      loadMoreEnable: false,\n      oldleads: [],\n      moreloading: false,\n      runleadlist: \"\"\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Genruntranscation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.title = PageTitle(\"My Transactions\");\n      this.props.getRunTransaction(cookie.load(\"UserAuthToken\"), this.state.page, \"\");\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(Props) {\n      this.setState({\n        moreloading: false\n      });\n\n      if (Object.keys(Props.runtransaction).length > 0) {\n        if (Props.runtransaction[0].status === \"Success\") {\n          var totalrecords = Props.runtransaction[0].total_rows;\n          var limit = Props.runtransaction[0].limit;\n          var loadMoreCount = totalrecords / limit;\n          var pagecount = parseInt(this.state.page) + 1;\n\n          if (loadMoreCount > pagecount && totalrecords > limit) {\n            this.setState({\n              loadMoreEnable: true\n            });\n          } else {\n            this.setState({\n              loadMoreEnable: false\n            });\n          }\n\n          var newleads = \"\";\n\n          if (this.state.oldleads !== \"\") {\n            var oldleads = this.state.oldleads;\n            newleads = oldleads.concat(Props.runtransaction[0].result_set.records);\n          } else {\n            newleads = Props.runtransaction[0].result_set.records;\n          }\n\n          this.setState({\n            oldleads: newleads\n          }, function () {\n            this.getRunTransaction(newleads);\n          }.bind(this));\n          this.getRunTransaction(Props.runtransaction[0].result_set.records);\n          this.setState({\n            totalrecords: Props.runtransaction[0].total_records\n          });\n        } else if (Props.runtransaction[0].status === \"error\") {\n          this.setState({\n            runleadlist: \"No records found\"\n          });\n        } else if (Props.runtransaction[0].status === \"authenticfailed\") {\n          window.location.href = \"/logout\";\n        }\n      }\n    }\n  }, {\n    key: \"getRunTransaction\",\n    value: function getRunTransaction(rundetails) {\n      var rundetailsdata = rundetails;\n\n      if (rundetailsdata !== undefined && rundetailsdata !== null) {\n        if (Object.keys(rundetailsdata).length > 0) {\n          var rundetailInfodataDetails = rundetailsdata.map(function (rundetailInfo, rundetailInfoIndex) {\n            var transStatus = rundetailInfo.trans_status;\n            var classstatus, trans_status;\n\n            if (transStatus === \"P\") {\n              trans_status = \"Pending\";\n              classstatus = \"gencus_trans_status Pending\";\n            } else if (transStatus === \"O\") {\n              classstatus = \"gencus_trans_status Ongoing\";\n              trans_status = \"Ongoing\";\n            } else if (transStatus === \"CO\") {\n              classstatus = \"gencus_trans_status Completed\";\n              trans_status = \"Completed\";\n            }\n\n            var date = new Date(rundetailInfo.trans_startdate);\n            var month = date.toLocaleString(\"default\", {\n              month: \"short\"\n            });\n            var dates = date.getDate() + \", \" + month + \" \" + date.getFullYear();\n            var date1 = new Date(rundetailInfo.trans_enddate);\n            var month1 = date1.toLocaleString(\"default\", {\n              month: \"short\"\n            });\n            var dates1 = date1.getDate() + \", \" + month1 + \" \" + date1.getFullYear();\n            var service_img_txt = SearchImage + \"services/\" + rundetailInfo.services_background_img;\n            return React.createElement(\"div\", {\n              className: \"genrun_leads_wrap gencus_trans_wrap\",\n              key: rundetailInfoIndex,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 131\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"genrun_leads_inner_wrap\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 135\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"img_title_tid_wrap\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 136\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"genrun_leads_img\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 137\n              },\n              __self: this\n            }, React.createElement(\"img\", {\n              src: service_img_txt,\n              alt: \"\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 138\n              },\n              __self: this\n            })), React.createElement(\"div\", {\n              className: \"genrun_leads_title_tid\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 140\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              className: classstatus,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 141\n              },\n              __self: this\n            }, trans_status), React.createElement(\"h2\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 142\n              },\n              __self: this\n            }, React.createElement(Link, {\n              to: {\n                pathname: \"/customer/runtrans-details\",\n                state: {\n                  transId: rundetailInfo.trans_id\n                }\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 143\n              },\n              __self: this\n            }, rundetailInfo.services_title), \" \"), React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 153\n              },\n              __self: this\n            }, \"Transaction ID -\", \" \", React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 155\n              },\n              __self: this\n            }, React.createElement(Link, {\n              to: {\n                pathname: \"/customer/runtrans-details\",\n                state: {\n                  transId: rundetailInfo.trans_id\n                }\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 156\n              },\n              __self: this\n            }, rundetailInfo.trans_key))))), transStatus === \"P\" && React.createElement(\"div\", {\n              className: \"genrun_leads_avail\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 169\n              },\n              __self: this\n            }, rundetailInfo.avail_genrun !== \"\" && rundetailInfo.avail_genrun > 0 ? React.createElement(Link, {\n              to: {\n                pathname: \"/customer/search_list\",\n                state: {\n                  serviceId: rundetailInfo.trans_service_id,\n                  TransId: rundetailInfo.trans_id,\n                  runserachlist: \"\"\n                }\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 172\n              },\n              __self: this\n            }, React.createElement(\"h5\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 182\n              },\n              __self: this\n            }, \"List of GenRun available:\", \" \", React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 184\n              },\n              __self: this\n            }, rundetailInfo.avail_genrun))) : React.createElement(\"h5\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 188\n              },\n              __self: this\n            }, \"List of GenRun available:\", \" \", React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 190\n              },\n              __self: this\n            }, rundetailInfo.avail_genrun))), React.createElement(\"div\", {\n              className: \"genrun_leads_date\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 195\n              },\n              __self: this\n            }, React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 196\n              },\n              __self: this\n            }, React.createElement(\"b\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 197\n              },\n              __self: this\n            }, \"Start :\"), \" \", dates), React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 199\n              },\n              __self: this\n            }, React.createElement(\"b\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 200\n              },\n              __self: this\n            }, \"End :\"), \" \", dates1, React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 201\n              },\n              __self: this\n            }, React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 202\n              },\n              __self: this\n            }), getExpirydate(rundetailInfo.trans_enddate) === 1 && rundetailInfo.trans_status === \"P\" ? \"(Expired)\" : \"\"))), React.createElement(\"div\", {\n              className: \"genrun_leads_price_btn\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 210\n              },\n              __self: this\n            }, React.createElement(\"h2\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 211\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 212\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"fa fa-usd\",\n              \"aria-hidden\": \"true\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 213\n              },\n              __self: this\n            }), \" \"), rundetailInfo.new_amount !== \"\" && rundetailInfo.new_amount !== null ? rundetailInfo.new_amount : rundetailInfo.trans_fee), React.createElement(\"div\", {\n              className: \"genrun_leads_btn\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 220\n              },\n              __self: this\n            }, React.createElement(Link, {\n              to: {\n                pathname: \"/customer/genrun/service/\" + rundetailInfo.trans_service_id,\n                state: {\n                  transId2: rundetailInfo.trans_id\n                }\n              },\n              className: \"btn btn_orange animate-btn2\",\n              title: \"Duplicate\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 221\n              },\n              __self: this\n            }, \"Duplicate\")))));\n          });\n          this.setState({\n            runleadlist: rundetailInfodataDetails\n          });\n        } else {\n          this.setState({\n            runleadlist: \"No records found\"\n          });\n        }\n      }\n    }\n  }, {\n    key: \"loadMore\",\n    value: function loadMore() {\n      var page = parseInt(this.state.page) + 1;\n      this.setState({\n        page: page\n      }, function () {\n        this.loadruntransaction();\n      }.bind(this));\n    }\n  }, {\n    key: \"loadruntransaction\",\n    value: function loadruntransaction() {\n      if (this.state.page > 0) {\n        this.setState({\n          moreloading: true\n        });\n      }\n\n      this.props.getRunTransaction(cookie.load(\"UserAuthToken\"), this.state.page, this.state.selectedvalue);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var selectedOption = this.state.selectedOption;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }), React.createElement(SecondaryHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }), React.createElement(Profilebar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"gencus-transaction-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gen-table-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gen-table-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"Your search history\"), React.createElement(\"div\", {\n        className: \"gen-table-sort\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"re_select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(Select, {\n        value: selectedOption ? selectedOption : {\n          value: \"P\",\n          label: \"Pending\"\n        },\n        options: options,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"genrun-leads-wrapper gencus-trans-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"genrun-leads-list-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, this.state.runleadlist !== \"\" && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, \"Press the transaction ID to see your request and give rating/review\"), this.state.runleadlist !== \"\" ? this.state.runleadlist : LoadingSec, React.createElement(\"div\", {\n        className: \"text-center mt25\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"javascript:;\",\n        className: \"btn btn_orange animate-btn2\",\n        onClick: this.loadMore.bind(this),\n        title: \"Load More\",\n        style: {\n          display: this.state.loadMoreEnable === false ? \"none\" : \"\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, this.state.moreloading === true && React.createElement(\"span\", {\n        className: \"load-data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, \"Loading\"), \"Load More\")))))))), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Genruntranscation;\n}(Component);\n\nvar mapStateTopProps = function mapStateTopProps(state) {\n  return {\n    runtransaction: state.runtransaction\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getRunTransaction: function getRunTransaction(UserToken, page, filter_status) {\n      dispatch({\n        type: GET_RUNTRANSACTION,\n        UserToken: UserToken,\n        page: page,\n        filter_status: filter_status\n      });\n    }\n  };\n};\n\nexport default connect(mapStateTopProps, mapDispatchToProps)(withRouter(Genruntranscation));","map":{"version":3,"sources":["D:/text video/geniehut-Geni-App-Code/geniehut-Geni-App-Code/front-end/src/components/Customer/Genruntranscation.js"],"names":["React","Component","Select","connect","Link","withRouter","Header","Footer","cookie","SecondaryHeader","Profilebar","PageTitle","LoadingSec","getExpirydate","SearchImage","GET_RUNTRANSACTION","options","value","label","Genruntranscation","props","handleChange","selectedOption","setState","selectedvalue","page","oldleads","runleadlist","loadruntransaction","bind","state","loadMoreEnable","moreloading","document","title","getRunTransaction","load","Props","Object","keys","runtransaction","length","status","totalrecords","total_rows","limit","loadMoreCount","pagecount","parseInt","newleads","concat","result_set","records","total_records","window","location","href","rundetails","rundetailsdata","undefined","rundetailInfodataDetails","map","rundetailInfo","rundetailInfoIndex","transStatus","trans_status","classstatus","date","Date","trans_startdate","month","toLocaleString","dates","getDate","getFullYear","date1","trans_enddate","month1","dates1","service_img_txt","services_background_img","pathname","transId","trans_id","services_title","trans_key","avail_genrun","serviceId","trans_service_id","TransId","runserachlist","new_amount","trans_fee","transId2","loadMore","display","mapStateTopProps","mapDispatchToProps","dispatch","UserToken","filter_status","type"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, { Component } from \"react\";\nimport Select from \"react-select\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Header from \"../Layout/Header\";\nimport Footer from \"../Layout/Footer\";\nimport cookie from \"react-cookies\";\nimport SecondaryHeader from \"../Layout/SecondaryHeader\";\nimport Profilebar from \"../Account/Profilebar\";\nimport { PageTitle, LoadingSec, getExpirydate } from \"../Helpers/SettingHelper\";\nimport { SearchImage } from \"../Config/Config\";\nimport { GET_RUNTRANSACTION } from \"../../actions\";\n\nconst options = [\n  { value: \"P\", label: \"Pending\" },\n  { value: \"CO\", label: \"Completed\" }\n];\n\nclass Genruntranscation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedvalue: \"\",\n      selectedOption: \"\",\n      page: 0,\n      loadMoreEnable: false,\n      oldleads: [],\n      moreloading: false,\n      runleadlist: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    document.title = PageTitle(\"My Transactions\");\n    this.props.getRunTransaction(\n      cookie.load(\"UserAuthToken\"),\n      this.state.page,\n      \"\"\n    );\n  }\n  componentWillReceiveProps(Props) {\n    this.setState({ moreloading: false });\n    if (Object.keys(Props.runtransaction).length > 0) {\n      if (Props.runtransaction[0].status === \"Success\") {\n        const totalrecords = Props.runtransaction[0].total_rows;\n        const limit = Props.runtransaction[0].limit;\n        const loadMoreCount = totalrecords / limit;\n        const pagecount = parseInt(this.state.page) + 1;\n        if (loadMoreCount > pagecount && totalrecords > limit) {\n          this.setState({ loadMoreEnable: true });\n        } else {\n          this.setState({ loadMoreEnable: false });\n        }\n        let newleads = \"\";\n        if (this.state.oldleads !== \"\") {\n          let oldleads = this.state.oldleads;\n          newleads = oldleads.concat(\n            Props.runtransaction[0].result_set.records\n          );\n        } else {\n          newleads = Props.runtransaction[0].result_set.records;\n        }\n        this.setState(\n          { oldleads: newleads },\n          function() {\n            this.getRunTransaction(newleads);\n          }.bind(this)\n        );\n\n        this.getRunTransaction(Props.runtransaction[0].result_set.records);\n\n        this.setState({\n          totalrecords: Props.runtransaction[0].total_records\n        });\n      } else if (Props.runtransaction[0].status === \"error\") {\n        this.setState({ runleadlist: \"No records found\" });\n      } else if (Props.runtransaction[0].status === \"authenticfailed\") {\n        window.location.href = \"/logout\";\n      }\n    }\n  }\n\n  handleChange = selectedOption => {\n    this.setState({ selectedOption });\n    this.setState(\n      {\n        selectedvalue: selectedOption.value,\n        page: 0,\n        oldleads: [],\n        runleadlist: \"\"\n      },\n      function() {\n        this.loadruntransaction();\n      }.bind(this)\n    );\n  };\n\n  getRunTransaction(rundetails) {\n    const rundetailsdata = rundetails;\n    if (rundetailsdata !== undefined && rundetailsdata !== null) {\n      if (Object.keys(rundetailsdata).length > 0) {\n        const rundetailInfodataDetails = rundetailsdata.map(\n          (rundetailInfo, rundetailInfoIndex) => {\n            var transStatus = rundetailInfo.trans_status;\n            var classstatus, trans_status;\n            if (transStatus === \"P\") {\n              trans_status = \"Pending\";\n              classstatus = \"gencus_trans_status Pending\";\n            } else if (transStatus === \"O\") {\n              classstatus = \"gencus_trans_status Ongoing\";\n              trans_status = \"Ongoing\";\n            } else if (transStatus === \"CO\") {\n              classstatus = \"gencus_trans_status Completed\";\n              trans_status = \"Completed\";\n            }\n            var date = new Date(rundetailInfo.trans_startdate);\n            var month = date.toLocaleString(\"default\", { month: \"short\" });\n            var dates =\n              date.getDate() + \", \" + month + \" \" + date.getFullYear();\n\n            var date1 = new Date(rundetailInfo.trans_enddate);\n            var month1 = date1.toLocaleString(\"default\", { month: \"short\" });\n            var dates1 =\n              date1.getDate() + \", \" + month1 + \" \" + date1.getFullYear();\n\n            var service_img_txt =\n              SearchImage + \"services/\" + rundetailInfo.services_background_img;\n            return (\n              <div\n                className=\"genrun_leads_wrap gencus_trans_wrap\"\n                key={rundetailInfoIndex}\n              >\n                <div className=\"genrun_leads_inner_wrap\">\n                  <div className=\"img_title_tid_wrap\">\n                    <div className=\"genrun_leads_img\">\n                      <img src={service_img_txt} alt=\"\" />\n                    </div>\n                    <div className=\"genrun_leads_title_tid\">\n                      <span className={classstatus}>{trans_status}</span>\n                      <h2>\n                        <Link\n                          to={{\n                            pathname: \"/customer/runtrans-details\",\n                            state: { transId: rundetailInfo.trans_id }\n                          }}\n                        >\n                          {rundetailInfo.services_title}\n                        </Link>{\" \"}\n                      </h2>\n\n                      <p>\n                        Transaction ID -{\" \"}\n                        <span>\n                          <Link\n                            to={{\n                              pathname: \"/customer/runtrans-details\",\n                              state: { transId: rundetailInfo.trans_id }\n                            }}\n                          >\n                            {rundetailInfo.trans_key}\n                          </Link>\n                        </span>\n                      </p>\n                    </div>\n                  </div>\n                  {transStatus === \"P\" && (\n                    <div className=\"genrun_leads_avail\">\n                      {rundetailInfo.avail_genrun !== \"\" &&\n                      rundetailInfo.avail_genrun > 0 ? (\n                        <Link\n                          to={{\n                            pathname: \"/customer/search_list\",\n                            state: {\n                              serviceId: rundetailInfo.trans_service_id,\n                              TransId: rundetailInfo.trans_id,\n                              runserachlist: \"\"\n                            }\n                          }}\n                        >\n                          <h5>\n                            List of GenRun available:{\" \"}\n                            <span>{rundetailInfo.avail_genrun}</span>\n                          </h5>\n                        </Link>\n                      ) : (\n                        <h5>\n                          List of GenRun available:{\" \"}\n                          <span>{rundetailInfo.avail_genrun}</span>\n                        </h5>\n                      )}\n                    </div>\n                  )}\n                  <div className=\"genrun_leads_date\">\n                    <p>\n                      <b>Start :</b> {dates}\n                    </p>\n                    <p>\n                      <b>End :</b> {dates1}\n                      <span>\n                        <br />\n                        {getExpirydate(rundetailInfo.trans_enddate) === 1 &&\n                        rundetailInfo.trans_status === \"P\"\n                          ? \"(Expired)\"\n                          : \"\"}\n                      </span>\n                    </p>\n                  </div>\n                  <div className=\"genrun_leads_price_btn\">\n                    <h2>\n                      <span>\n                        <i className=\"fa fa-usd\" aria-hidden=\"true\"></i>{\" \"}\n                      </span>\n                      {rundetailInfo.new_amount !== \"\" &&\n                      rundetailInfo.new_amount !== null\n                        ? rundetailInfo.new_amount\n                        : rundetailInfo.trans_fee}\n                    </h2>\n                    <div className=\"genrun_leads_btn\">\n                      <Link\n                        to={{\n                          pathname:\n                            \"/customer/genrun/service/\" +\n                            rundetailInfo.trans_service_id,\n                          state: { transId2: rundetailInfo.trans_id }\n                        }}\n                        className=\"btn btn_orange animate-btn2\"\n                        title=\"Duplicate\"\n                      >\n                        Duplicate\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          }\n        );\n        this.setState({ runleadlist: rundetailInfodataDetails });\n      } else {\n        this.setState({ runleadlist: \"No records found\" });\n      }\n    }\n  }\n\n  loadMore() {\n    let page = parseInt(this.state.page) + 1;\n    this.setState(\n      { page: page },\n      function() {\n        this.loadruntransaction();\n      }.bind(this)\n    );\n  }\n\n  loadruntransaction() {\n    if (this.state.page > 0) {\n      this.setState({ moreloading: true });\n    }\n    this.props.getRunTransaction(\n      cookie.load(\"UserAuthToken\"),\n      this.state.page,\n      this.state.selectedvalue\n    );\n  }\n  render() {\n    const { selectedOption } = this.state;\n    return (\n      <div>\n        <Header />\n        <SecondaryHeader />\n        <Profilebar />\n\n        <div className=\"gencus-transaction-wrapper\">\n          <div className=\"container\">\n            <div>\n              <div className=\"gen-table-wrapper\">\n                <div className=\"gen-table-header\">\n                  <h3>Your search history</h3>\n\n                  <div className=\"gen-table-sort\">\n                    <div className=\"re_select\">\n                      <Select\n                        value={\n                          selectedOption\n                            ? selectedOption\n                            : { value: \"P\", label: \"Pending\" }\n                        }\n                        options={options}\n                        onChange={this.handleChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"genrun-leads-wrapper gencus-trans-wrap\">\n                  <div className=\"genrun-leads-list-wrapper\">\n                    {this.state.runleadlist !== \"\" && (\n                      <p>\n                        Press the transaction ID to see your request\n                        and give rating/review\n                      </p>\n                    )}\n                    {this.state.runleadlist !== \"\"\n                      ? this.state.runleadlist\n                      : LoadingSec}\n\n                    <div className=\"text-center mt25\">\n                      <a\n                        href=\"javascript:;\"\n                        className=\"btn btn_orange animate-btn2\"\n                        onClick={this.loadMore.bind(this)}\n                        title=\"Load More\"\n                        style={{\n                          display:\n                            this.state.loadMoreEnable === false ? \"none\" : \"\"\n                        }}\n                      >\n                        {this.state.moreloading === true && (\n                          <span className=\"load-data\">Loading</span>\n                        )}\n                        Load More\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateTopProps = state => {\n  return {\n    runtransaction: state.runtransaction\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getRunTransaction: (UserToken, page, filter_status) => {\n      dispatch({ type: GET_RUNTRANSACTION, UserToken, page, filter_status });\n    }\n  };\n};\nexport default connect(\n  mapStateTopProps,\n  mapDispatchToProps\n)(withRouter(Genruntranscation));\n"]},"metadata":{},"sourceType":"module"}