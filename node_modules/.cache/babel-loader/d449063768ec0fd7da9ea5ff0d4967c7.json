{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetRegistration);\n\n/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_REGISTRATION, SET_REGISTRATION } from '../actions';\nimport { apiUrl, deliveryId } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\nexport var watchGetRegistration =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetRegistration() {\n  return _regeneratorRuntime.wrap(function watchGetRegistration$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery(GET_REGISTRATION, workerGetRegistration);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, watchGetRegistration);\n});\n\nfunction workerGetRegistration(_ref) {\n  var formPayload, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetRegistration$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          formPayload = _ref.formPayload;\n          _context2.prev = 1;\n          console.log(\"from_pay:\", qs.parse(formPayload));\n          _context2.next = 5;\n          return call(getRegistration, formPayload);\n\n        case 5:\n          result = _context2.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context2.next = 10;\n          return put({\n            type: SET_REGISTRATION,\n            value: resultArr\n          });\n\n        case 10:\n          _context2.next = 16;\n          break;\n\n        case 12:\n          _context2.prev = 12;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log('error', _context2.t0);\n          console.log('login failed');\n\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked, null, [[1, 12]]);\n}\n\nfunction getRegistration(formPayload) {\n  console.log(\"my-demo:\", JSON.parse(formPayload));\n  var demo = Axios.post(apiUrl + 'user/user_register', formPayload);\n  console.log(demo);\n  return Axios.post(apiUrl + 'user/user_register', formPayload);\n}","map":{"version":3,"sources":["D:/text video/geniehut-Geni-App-Code/geniehut-Geni-App-Code/front-end/src/sagas/registration.js"],"names":["workerGetRegistration","takeEvery","call","put","GET_REGISTRATION","SET_REGISTRATION","apiUrl","deliveryId","Axios","cookie","watchGetRegistration","formPayload","console","log","qs","parse","getRegistration","result","resultArr","push","data","type","value","JSON","demo","post"],"mappings":";;;;yBAqBUA,qB;;AArBV;AACA,SACEC,SADF,EAEEC,IAFF,EAGEC,GAHF,QAIO,oBAJP;AAKA,SACEC,gBADF,EAEEC,gBAFF,QAGO,YAHP;AAIA,SACEC,MADF,EAEEC,UAFF,QAGO,6BAHP;AAIA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,OAAO,IAAMC,oBAAoB;AAAA;AAAA,yBAAG,SAAvBA,oBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAClC,iBAAMT,SAAS,CAACG,gBAAD,EAAmBJ,qBAAnB,CAAf;;AADkC;AAAA;AAAA;AAAA;AAAA;AAAA,KAAvBU,oBAAuB;AAAA,CAAH,CAA1B;;AAIP,SAAUV,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACEW,UAAAA,WADF,QACEA,WADF;AAAA;AAIIC,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBC,EAAE,CAACC,KAAH,CAASJ,WAAT,CAAzB;AAJJ;AAKmB,iBAAMT,IAAI,CAACc,eAAD,EAAkBL,WAAlB,CAAV;;AALnB;AAKUM,UAAAA,MALV;AAMQC,UAAAA,SANR,GAMoB,EANpB;AAOIA,UAAAA,SAAS,CAACC,IAAV,CAAeF,MAAM,CAACG,IAAtB;AAPJ;AAQI,iBAAMjB,GAAG,CAAC;AACRkB,YAAAA,IAAI,EAAEhB,gBADE;AAERiB,YAAAA,KAAK,EAAEJ;AAFC,WAAD,CAAT;;AARJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAaIN,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmBA,SAASG,eAAT,CAAyBL,WAAzB,EAAsC;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBU,IAAI,CAACR,KAAL,CAAWJ,WAAX,CAAxB;AACA,MAAMa,IAAI,GAAGhB,KAAK,CAACiB,IAAN,CAAWnB,MAAM,GAAG,oBAApB,EAA0CK,WAA1C,CAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ;AACA,SAAOhB,KAAK,CAACiB,IAAN,CAAWnB,MAAM,GAAG,oBAApB,EAA0CK,WAA1C,CAAP;AACD","sourcesContent":["/* eslint-disable */\nimport {\n  takeEvery,\n  call,\n  put\n} from 'redux-saga/effects';\nimport {\n  GET_REGISTRATION,\n  SET_REGISTRATION\n} from '../actions';\nimport {\n  apiUrl,\n  deliveryId\n} from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\n\nexport const watchGetRegistration = function* () {\n  yield takeEvery(GET_REGISTRATION, workerGetRegistration);\n}\n\nfunction* workerGetRegistration({\n  formPayload\n}) {\n  try {\n    console.log(\"from_pay:\", qs.parse(formPayload))\n    const result = yield call(getRegistration, formPayload);\n    var resultArr = [];\n    resultArr.push(result.data);\n    yield put({\n      type: SET_REGISTRATION,\n      value: resultArr\n    });\n  } catch (error) {\n    console.log('error', error)\n    console.log('login failed');\n  }\n}\n\n\nfunction getRegistration(formPayload) {\n  console.log(\"my-demo:\", JSON.parse(formPayload))\n  const demo = Axios.post(apiUrl + 'user/user_register', formPayload);\n  console.log(demo)\n  return Axios.post(apiUrl + 'user/user_register', formPayload);\n}"]},"metadata":{},"sourceType":"module"}