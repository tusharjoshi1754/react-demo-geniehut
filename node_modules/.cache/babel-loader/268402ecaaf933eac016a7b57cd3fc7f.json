{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetSetPassword);\n\n/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_SETPASSWORD, SET_SETPASSWORD } from '../actions';\nimport { apiUrl, deliveryId } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\nexport var watchGetSetPassword =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetSetPassword() {\n  return _regeneratorRuntime.wrap(function watchGetSetPassword$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery(GET_SETPASSWORD, workerGetSetPassword);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, watchGetSetPassword);\n});\n\nfunction workerGetSetPassword(_ref) {\n  var formPayload, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetSetPassword$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          formPayload = _ref.formPayload;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(getSetPassword, formPayload);\n\n        case 4:\n          result = _context2.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context2.next = 9;\n          return put({\n            type: SET_SETPASSWORD,\n            value: resultArr\n          });\n\n        case 9:\n          _context2.next = 14;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log('get data failed');\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked, null, [[1, 11]]);\n}\n\nfunction getSetPassword(formPayload) {\n  return Axios.post(apiUrl + 'user/set_password', formPayload);\n}","map":{"version":3,"sources":["D:/text video/geniehut-Geni-App-Code/geniehut-Geni-App-Code/front-end/src/sagas/setpassword.js"],"names":["workerGetSetPassword","takeEvery","call","put","GET_SETPASSWORD","SET_SETPASSWORD","apiUrl","deliveryId","Axios","cookie","watchGetSetPassword","formPayload","getSetPassword","result","resultArr","push","data","type","value","console","log","post"],"mappings":";;;;yBAUUA,oB;;AAVV;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,YAAjD;AACA,SAAQC,MAAR,EAAgBC,UAAhB,QAAkC,6BAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,OAAO,IAAMC,mBAAmB;AAAA;AAAA,yBAAG,SAAtBA,mBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AACjC,iBAAMT,SAAS,CAACG,eAAD,EAAkBJ,oBAAlB,CAAf;;AADiC;AAAA;AAAA;AAAA;AAAA;AAAA,KAAtBU,mBAAsB;AAAA,CAAH,CAAzB;;AAGP,SAAUV,oBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiCW,UAAAA,WAAjC,QAAiCA,WAAjC;AAAA;AAAA;AAEgB,iBAAMT,IAAI,CAACU,cAAD,EAAiBD,WAAjB,CAAV;;AAFhB;AAEOE,UAAAA,MAFP;AAGKC,UAAAA,SAHL,GAGiB,EAHjB;AAICA,UAAAA,SAAS,CAACC,IAAV,CAAeF,MAAM,CAACG,IAAtB;AAJD;AAKI,iBAAMb,GAAG,CAAC;AAAEc,YAAAA,IAAI,EAAEZ,eAAR;AAAyBa,YAAAA,KAAK,EAAEJ;AAAhC,WAAD,CAAT;;AALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQIK,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAASR,cAAT,CAAwBD,WAAxB,EAAqC;AAC9B,SAAOH,KAAK,CAACa,IAAN,CAAWf,MAAM,GAAC,mBAAlB,EAAuCK,WAAvC,CAAP;AACN","sourcesContent":["/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_SETPASSWORD, SET_SETPASSWORD } from '../actions';\nimport {apiUrl, deliveryId } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\n\nexport const watchGetSetPassword = function* () {\n  yield takeEvery(GET_SETPASSWORD, workerGetSetPassword);\n}\nfunction* workerGetSetPassword({ formPayload }) {\n  try {\n const result = yield call(getSetPassword, formPayload);\n\tvar resultArr = [];\n\tresultArr.push(result.data);\n    yield put({ type: SET_SETPASSWORD, value: resultArr });\n  } \n  catch {\n    console.log('get data failed');\n  }\n} \n\n\nfunction getSetPassword(formPayload) {\n       return Axios.post(apiUrl+'user/set_password', formPayload);\n} \n"]},"metadata":{},"sourceType":"module"}