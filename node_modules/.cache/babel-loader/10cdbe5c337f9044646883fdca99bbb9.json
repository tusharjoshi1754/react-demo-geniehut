{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetStriponToken);\n\n/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_STRIPONTOKEN, SET_STRIPONTOKEN } from '../actions';\nimport { apiUrl } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\nexport var watchGetStriponToken =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetStriponToken() {\n  return _regeneratorRuntime.wrap(function watchGetStriponToken$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery(GET_STRIPONTOKEN, workerGetStriponToken);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, watchGetStriponToken);\n});\n\nfunction workerGetStriponToken(_ref) {\n  var formPayload, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetStriponToken$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          formPayload = _ref.formPayload;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(getStriponTokenData, formPayload);\n\n        case 4:\n          result = _context2.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context2.next = 9;\n          return put({\n            type: SET_STRIPONTOKEN,\n            value: resultArr\n          });\n\n        case 9:\n          _context2.next = 14;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log('get data failed');\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked, null, [[1, 11]]);\n}\n\nfunction getStriponTokenData(formPayload) {\n  return Axios.post(apiUrl + 'payment/stripeTokenPay', formPayload);\n}","map":{"version":3,"sources":["D:/text video/geniehut-Geni-App-Code/geniehut-Geni-App-Code/front-end/src/sagas/stripontoken.js"],"names":["workerGetStriponToken","takeEvery","call","put","GET_STRIPONTOKEN","SET_STRIPONTOKEN","apiUrl","Axios","cookie","watchGetStriponToken","formPayload","getStriponTokenData","result","resultArr","push","data","type","value","console","log","post"],"mappings":";;;;yBAUUA,qB;;AAVV;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,YAAnD;AACA,SAAQC,MAAR,QAAqB,6BAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,OAAO,IAAMC,oBAAoB;AAAA;AAAA,yBAAG,SAAvBA,oBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAClC,iBAAMR,SAAS,CAACG,gBAAD,EAAmBJ,qBAAnB,CAAf;;AADkC;AAAA;AAAA;AAAA;AAAA;AAAA,KAAvBS,oBAAuB;AAAA,CAAH,CAA1B;;AAGP,SAAUT,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkCU,UAAAA,WAAlC,QAAkCA,WAAlC;AAAA;AAAA;AAEgB,iBAAMR,IAAI,CAACS,mBAAD,EAAsBD,WAAtB,CAAV;;AAFhB;AAEOE,UAAAA,MAFP;AAGKC,UAAAA,SAHL,GAGiB,EAHjB;AAICA,UAAAA,SAAS,CAACC,IAAV,CAAeF,MAAM,CAACG,IAAtB;AAJD;AAKI,iBAAMZ,GAAG,CAAC;AAAEa,YAAAA,IAAI,EAAEX,gBAAR;AAA0BY,YAAAA,KAAK,EAAEJ;AAAjC,WAAD,CAAT;;AALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQIK,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAASR,mBAAT,CAA6BD,WAA7B,EAA0C;AACvC,SAAOH,KAAK,CAACa,IAAN,CAAWd,MAAM,GAAC,wBAAlB,EAA4CI,WAA5C,CAAP;AACF","sourcesContent":["/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_STRIPONTOKEN, SET_STRIPONTOKEN } from '../actions';\nimport {apiUrl} from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\n\nexport const watchGetStriponToken = function* () {\n  yield takeEvery(GET_STRIPONTOKEN, workerGetStriponToken);\n}\nfunction* workerGetStriponToken({ formPayload }) {\n  try {\n\tconst result = yield call(getStriponTokenData, formPayload);\n\tvar resultArr = [];\n\tresultArr.push(result.data);\n    yield put({ type: SET_STRIPONTOKEN, value: resultArr });\n  } \n  catch {\n    console.log('get data failed');\n  }\n} \n\n\nfunction getStriponTokenData(formPayload) {\n   return Axios.post(apiUrl+'payment/stripeTokenPay', formPayload);\n} \n\n\n"]},"metadata":{},"sourceType":"module"}