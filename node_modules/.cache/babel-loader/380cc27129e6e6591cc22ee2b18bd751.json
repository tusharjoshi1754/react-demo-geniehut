{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetReview);\n\n/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_REVIEW, SET_REVIEW } from '../actions';\nimport { apiUrl, appName } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\nexport var watchGetReview =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetReview() {\n  return _regeneratorRuntime.wrap(function watchGetReview$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery(GET_REVIEW, workerGetReview);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, watchGetReview);\n});\n\nfunction workerGetReview(_ref) {\n  var formPayload, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetReview$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          formPayload = _ref.formPayload;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(getReview, formPayload);\n\n        case 4:\n          result = _context2.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context2.next = 9;\n          return put({\n            type: SET_REVIEW,\n            value: resultArr\n          });\n\n        case 9:\n          _context2.next = 14;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log('login failed');\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked, null, [[1, 11]]);\n}\n\nfunction getReview(formPayload) {\n  var userID = '';\n\n  if (formPayload.userID !== '' && typeof formPayload.userID !== undefined) {\n    return Axios.get(apiUrl + 'genrun/getReviews?app_name=' + appName + '&UserToken=' + cookie.load('UserAuthToken') + '&page=' + formPayload.page + '&user_id=' + formPayload.userID);\n  } else {\n    return Axios.get(apiUrl + 'genrun/getReviews?app_name=' + appName + '&UserToken=' + cookie.load('UserAuthToken') + '&page=' + formPayload.page);\n  }\n}","map":{"version":3,"sources":["D:/text video/geniehut-Geni-App-Code/geniehut-Geni-App-Code/front-end/src/sagas/review.js"],"names":["workerGetReview","takeEvery","call","put","GET_REVIEW","SET_REVIEW","apiUrl","appName","Axios","cookie","watchGetReview","formPayload","getReview","result","resultArr","push","data","type","value","console","log","userID","undefined","get","load","page"],"mappings":";;;;yBAWUA,e;;AAXV;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,YAAvC;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,6BAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,OAAO,IAAMC,cAAc;AAAA;AAAA,yBAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5B,iBAAMT,SAAS,CAACG,UAAD,EAAaJ,eAAb,CAAf;;AAD4B;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjBU,cAAiB;AAAA,CAAH,CAApB;;AAIP,SAAUV,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2BW,UAAAA,WAA3B,QAA2BA,WAA3B;AAAA;AAAA;AAEmB,iBAAMT,IAAI,CAACU,SAAD,EAAYD,WAAZ,CAAV;;AAFnB;AAEUE,UAAAA,MAFV;AAIQC,UAAAA,SAJR,GAIoB,EAJpB;AAKGA,UAAAA,SAAS,CAACC,IAAV,CAAeF,MAAM,CAACG,IAAtB;AALH;AAMI,iBAAMb,GAAG,CAAC;AAAEc,YAAAA,IAAI,EAAEZ,UAAR;AAAoBa,YAAAA,KAAK,EAAEJ;AAA3B,WAAD,CAAT;;AANJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AASIK,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,SAASR,SAAT,CAAmBD,WAAnB,EAAgC;AAC9B,MAAMU,MAAM,GAAG,EAAf;;AACA,MAAGV,WAAW,CAACU,MAAZ,KAAqB,EAArB,IAA2B,OAAOV,WAAW,CAACU,MAAnB,KAA4BC,SAA1D,EAAqE;AACnE,WAAOd,KAAK,CAACe,GAAN,CAAUjB,MAAM,GAAC,6BAAP,GAAqCC,OAArC,GAA6C,aAA7C,GAA2DE,MAAM,CAACe,IAAP,CAAY,eAAZ,CAA3D,GAAwF,QAAxF,GAAiGb,WAAW,CAACc,IAA7G,GAAkH,WAAlH,GAA8Hd,WAAW,CAACU,MAApJ,CAAP;AAED,GAHD,MAIK;AACL,WAAOb,KAAK,CAACe,GAAN,CAAUjB,MAAM,GAAC,6BAAP,GAAqCC,OAArC,GAA6C,aAA7C,GAA2DE,MAAM,CAACe,IAAP,CAAY,eAAZ,CAA3D,GAAwF,QAAxF,GAAiGb,WAAW,CAACc,IAAvH,CAAP;AACC;AAEF","sourcesContent":["/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_REVIEW, SET_REVIEW } from '../actions';\nimport { apiUrl, appName } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\n\nexport const watchGetReview = function* () {\n  yield takeEvery(GET_REVIEW, workerGetReview);\n}\n\nfunction* workerGetReview({formPayload}) {\n  try {\n    const result = yield call(getReview, formPayload);\n    \n    var resultArr = [];\n\t  resultArr.push(result.data);\n    yield put({ type: SET_REVIEW, value: resultArr });\n  } \n  catch {\n    console.log('login failed');\n  }\n} \n\n\nfunction getReview(formPayload) {\n  const userID = '';\n  if(formPayload.userID!=='' && typeof formPayload.userID!==undefined) {\n    return Axios.get(apiUrl+'genrun/getReviews?app_name='+appName+'&UserToken='+cookie.load('UserAuthToken')+'&page='+formPayload.page+'&user_id='+formPayload.userID);\n    \n  }\n  else {\n  return Axios.get(apiUrl+'genrun/getReviews?app_name='+appName+'&UserToken='+cookie.load('UserAuthToken')+'&page='+formPayload.page);\n  }\n  \n} "]},"metadata":{},"sourceType":"module"}