{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetCustomerLeads),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetJobconfirmRequest),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetProJobs),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetLeadJobs),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetSaveQuotation),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetRunCustomerleads),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetRunDetailCustomerleads);\n\n/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_CUSTOMERLEADS, SET_CUSTOMERLEADS, GET_JOBCONFIRMREQUEST, SET_JOBCONFIRMREQUEST, GET_PROJOBS, SET_PROJOBS, GET_LEADINFO, SET_LEADINFO, GET_SAVEQUOTATION, SET_SAVEQUOTATION, GET_RUNCUSTOMERLEADS, SET_RUNCUSTOMERLEADS, GET_RUNDETAILCUSTOMERLEADS, SET_RUNDETAILCUSTOMERLEADS } from '../actions';\nimport { apiUrl, appName } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\n/* get customer leads details for users*/\n\nexport var watchGetCustomerLeads =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetCustomerLeads() {\n  return _regeneratorRuntime.wrap(function watchGetCustomerLeads$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery(GET_CUSTOMERLEADS, workerGetCustomerLeads);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, watchGetCustomerLeads);\n});\n\nfunction workerGetCustomerLeads(_ref) {\n  var UserToken, uri, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetCustomerLeads$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          UserToken = _ref.UserToken;\n          _context2.prev = 1;\n          uri = apiUrl + 'customerleads/procustomerleads?app_name=' + appName + '&UserToken=' + UserToken;\n          _context2.next = 5;\n          return call(Axios.get, uri);\n\n        case 5:\n          result = _context2.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context2.next = 10;\n          return put({\n            type: SET_CUSTOMERLEADS,\n            value: resultArr\n          });\n\n        case 10:\n          _context2.next = 15;\n          break;\n\n        case 12:\n          _context2.prev = 12;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log('Get Page Failed');\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked, null, [[1, 12]]);\n}\n/* change job status ( confirm or Rejected by pro users) */\n\n\nexport var watchGetJobconfirmRequest =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetJobconfirmRequest() {\n  return _regeneratorRuntime.wrap(function watchGetJobconfirmRequest$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeEvery(GET_JOBCONFIRMREQUEST, workerGetJobconfirmRequest);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, watchGetJobconfirmRequest);\n});\n\nfunction workerGetJobconfirmRequest(_ref2) {\n  var formPayload, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetJobconfirmRequest$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          formPayload = _ref2.formPayload;\n          _context4.prev = 1;\n          _context4.next = 4;\n          return call(getJobconfirmRequest, formPayload);\n\n        case 4:\n          result = _context4.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context4.next = 9;\n          return put({\n            type: SET_JOBCONFIRMREQUEST,\n            value: resultArr\n          });\n\n        case 9:\n          _context4.next = 14;\n          break;\n\n        case 11:\n          _context4.prev = 11;\n          _context4.t0 = _context4[\"catch\"](1);\n          console.log('get data failed');\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked2, null, [[1, 11]]);\n}\n\nfunction getJobconfirmRequest(formPayload) {\n  return Axios.post(apiUrl + 'customerleads/confirm_request', formPayload);\n}\n/* get All pro jobs*/\n\n\nexport var watchGetProJobs =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetProJobs() {\n  return _regeneratorRuntime.wrap(function watchGetProJobs$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeEvery(GET_PROJOBS, workerGetProJobs);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, watchGetProJobs);\n});\n\nfunction workerGetProJobs(_ref3) {\n  var UserToken, sorttype, uri, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetProJobs$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          UserToken = _ref3.UserToken, sorttype = _ref3.sorttype;\n          _context6.prev = 1;\n          uri = apiUrl + 'customerleads/projobs?app_name=' + appName + '&UserToken=' + UserToken + '&sorttype=' + sorttype;\n          console.log(uri);\n          _context6.next = 6;\n          return call(Axios.get, uri);\n\n        case 6:\n          result = _context6.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context6.next = 11;\n          return put({\n            type: SET_PROJOBS,\n            value: resultArr\n          });\n\n        case 11:\n          _context6.next = 16;\n          break;\n\n        case 13:\n          _context6.prev = 13;\n          _context6.t0 = _context6[\"catch\"](1);\n          console.log('Get Page Failed');\n\n        case 16:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked3, null, [[1, 13]]);\n}\n/* get Lead jobs*/\n\n\nexport var watchGetLeadJobs =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetLeadJobs() {\n  return _regeneratorRuntime.wrap(function watchGetLeadJobs$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeEvery(GET_LEADINFO, workerGetLeadJobs);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, watchGetLeadJobs);\n});\n\nfunction workerGetLeadJobs(_ref4) {\n  var UserToken, jobID, uri, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetLeadJobs$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          UserToken = _ref4.UserToken, jobID = _ref4.jobID;\n          _context8.prev = 1;\n          uri = apiUrl + 'customerleads/lead_info?app_name=' + appName + '&UserToken=' + UserToken + '&jobID=' + jobID;\n          _context8.next = 5;\n          return call(Axios.get, uri);\n\n        case 5:\n          result = _context8.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context8.next = 10;\n          return put({\n            type: SET_LEADINFO,\n            value: resultArr\n          });\n\n        case 10:\n          _context8.next = 15;\n          break;\n\n        case 12:\n          _context8.prev = 12;\n          _context8.t0 = _context8[\"catch\"](1);\n          console.log('Get Page Failed');\n\n        case 15:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked4, null, [[1, 12]]);\n}\n/* save quotation */\n\n\nexport var watchGetSaveQuotation =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetSaveQuotation() {\n  return _regeneratorRuntime.wrap(function watchGetSaveQuotation$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeEvery(GET_SAVEQUOTATION, workerGetSaveQuotation);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, watchGetSaveQuotation);\n});\n\nfunction workerGetSaveQuotation(_ref5) {\n  var formPayload, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetSaveQuotation$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          formPayload = _ref5.formPayload;\n          _context10.prev = 1;\n          _context10.next = 4;\n          return call(getSaveQuotation, formPayload);\n\n        case 4:\n          result = _context10.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context10.next = 9;\n          return put({\n            type: SET_SAVEQUOTATION,\n            value: resultArr\n          });\n\n        case 9:\n          _context10.next = 14;\n          break;\n\n        case 11:\n          _context10.prev = 11;\n          _context10.t0 = _context10[\"catch\"](1);\n          console.log('get data failed');\n\n        case 14:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked5, null, [[1, 11]]);\n}\n\nfunction getSaveQuotation(formPayload) {\n  return Axios.post(apiUrl + 'customerleads/savequotation', formPayload);\n}\n/* genrun customerleads */\n\n\nexport var watchGetRunCustomerleads =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetRunCustomerleads() {\n  return _regeneratorRuntime.wrap(function watchGetRunCustomerleads$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeEvery(GET_RUNCUSTOMERLEADS, workerGetRunCustomerleads);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, watchGetRunCustomerleads);\n});\n\nfunction workerGetRunCustomerleads(_ref6) {\n  var formPayload, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetRunCustomerleads$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          formPayload = _ref6.formPayload;\n          _context12.prev = 1;\n          _context12.next = 4;\n          return call(getRunCustomerleads, formPayload);\n\n        case 4:\n          result = _context12.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context12.next = 9;\n          return put({\n            type: SET_RUNCUSTOMERLEADS,\n            value: resultArr\n          });\n\n        case 9:\n          _context12.next = 14;\n          break;\n\n        case 11:\n          _context12.prev = 11;\n          _context12.t0 = _context12[\"catch\"](1);\n          console.log('get data failed');\n\n        case 14:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked6, null, [[1, 11]]);\n}\n\nfunction getRunCustomerleads(formPayload) {\n  return Axios.post(apiUrl + 'customerleads/runcustomerleads', formPayload);\n}\n/* genrun customerleads */\n\n\nexport var watchGetRunDetailCustomerleads =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetRunDetailCustomerleads() {\n  return _regeneratorRuntime.wrap(function watchGetRunDetailCustomerleads$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return takeEvery(GET_RUNDETAILCUSTOMERLEADS, workerGetRunDetailCustomerleads);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, watchGetRunDetailCustomerleads);\n});\n\nfunction workerGetRunDetailCustomerleads(_ref7) {\n  var UserToken, trans_id, uri, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetRunDetailCustomerleads$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          UserToken = _ref7.UserToken, trans_id = _ref7.trans_id;\n          _context14.prev = 1;\n          uri = apiUrl + 'customerleads/runcustomerleadDetails?app_name=' + appName + '&UserToken=' + UserToken + '&trans_id=' + trans_id;\n          _context14.next = 5;\n          return call(Axios.get, uri);\n\n        case 5:\n          result = _context14.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context14.next = 10;\n          return put({\n            type: SET_RUNDETAILCUSTOMERLEADS,\n            value: resultArr\n          });\n\n        case 10:\n          _context14.next = 15;\n          break;\n\n        case 12:\n          _context14.prev = 12;\n          _context14.t0 = _context14[\"catch\"](1);\n          console.log('get data failed');\n\n        case 15:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked7, null, [[1, 12]]);\n}","map":{"version":3,"sources":["D:/text video/geniehut-Geni-App-Code/geniehut-Geni-App-Code/front-end/src/sagas/customerleads.js"],"names":["workerGetCustomerLeads","workerGetJobconfirmRequest","workerGetProJobs","workerGetLeadJobs","workerGetSaveQuotation","workerGetRunCustomerleads","workerGetRunDetailCustomerleads","takeEvery","call","put","GET_CUSTOMERLEADS","SET_CUSTOMERLEADS","GET_JOBCONFIRMREQUEST","SET_JOBCONFIRMREQUEST","GET_PROJOBS","SET_PROJOBS","GET_LEADINFO","SET_LEADINFO","GET_SAVEQUOTATION","SET_SAVEQUOTATION","GET_RUNCUSTOMERLEADS","SET_RUNCUSTOMERLEADS","GET_RUNDETAILCUSTOMERLEADS","SET_RUNDETAILCUSTOMERLEADS","apiUrl","appName","Axios","cookie","watchGetCustomerLeads","UserToken","uri","get","result","resultArr","push","data","type","value","console","log","watchGetJobconfirmRequest","formPayload","getJobconfirmRequest","post","watchGetProJobs","sorttype","watchGetLeadJobs","jobID","watchGetSaveQuotation","getSaveQuotation","watchGetRunCustomerleads","getRunCustomerleads","watchGetRunDetailCustomerleads","trans_id"],"mappings":";;;;yBAaUA,sB;;;yBAoBAC,0B;;;yBAwBAC,gB;;;yBAqBAC,iB;;;yBAkBAC,sB;;;yBAyBAC,yB;;;yBAuBAC,+B;;AAhJV;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,EAA+CC,qBAA/C,EAAsEC,qBAAtE,EAA6FC,WAA7F,EAA2GC,WAA3G,EAAuHC,YAAvH,EAAqIC,YAArI,EAAmJC,iBAAnJ,EAAsKC,iBAAtK,EAAyLC,oBAAzL,EAA+MC,oBAA/M,EAAqOC,0BAArO,EAAiQC,0BAAjQ,QAAmS,YAAnS;AACA,SAAQC,MAAR,EAAeC,OAAf,QAA6B,6BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA;;AAEA,OAAO,IAAMC,qBAAqB;AAAA;AAAA,yBAAG,SAAxBA,qBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AACnC,iBAAMrB,SAAS,CAACG,iBAAD,EAAoBV,sBAApB,CAAf;;AADmC;AAAA;AAAA;AAAA;AAAA;AAAA,KAAxB4B,qBAAwB;AAAA,CAAH,CAA3B;;AAIP,SAAU5B,sBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC6B,UAAAA,SAApC,QAAoCA,SAApC;AAAA;AAEUC,UAAAA,GAFV,GAEgBN,MAAM,GAAC,0CAAP,GAAkDC,OAAlD,GAA0D,aAA1D,GAAwEI,SAFxF;AAAA;AAGmB,iBAAMrB,IAAI,CAACkB,KAAK,CAACK,GAAP,EAAYD,GAAZ,CAAV;;AAHnB;AAGUE,UAAAA,MAHV;AAIMC,UAAAA,SAJN,GAIkB,EAJlB;AAKEA,UAAAA,SAAS,CAACC,IAAV,CAAeF,MAAM,CAACG,IAAtB;AALF;AAMI,iBAAM1B,GAAG,CAAC;AAAE2B,YAAAA,IAAI,EAAEzB,iBAAR;AAA2B0B,YAAAA,KAAK,EAAEJ;AAAlC,WAAD,CAAT;;AANJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AASIK,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;;;AAGA,OAAO,IAAMC,yBAAyB;AAAA;AAAA,yBAAG,SAA5BA,yBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AACvC,iBAAMjC,SAAS,CAACK,qBAAD,EAAwBX,0BAAxB,CAAf;;AADuC;AAAA;AAAA;AAAA;AAAA;AAAA,KAA5BuC,yBAA4B;AAAA,CAAH,CAA/B;;AAGP,SAAUvC,0BAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuCwC,UAAAA,WAAvC,SAAuCA,WAAvC;AAAA;AAAA;AAEiB,iBAAMjC,IAAI,CAACkC,oBAAD,EAAuBD,WAAvB,CAAV;;AAFjB;AAEQT,UAAAA,MAFR;AAGMC,UAAAA,SAHN,GAGkB,EAHlB;AAIEA,UAAAA,SAAS,CAACC,IAAV,CAAeF,MAAM,CAACG,IAAtB;AAJF;AAKI,iBAAM1B,GAAG,CAAC;AAAE2B,YAAAA,IAAI,EAAEvB,qBAAR;AAA+BwB,YAAAA,KAAK,EAAEJ;AAAtC,WAAD,CAAT;;AALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQIK,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAASG,oBAAT,CAA8BD,WAA9B,EAA2C;AACxC,SAAOf,KAAK,CAACiB,IAAN,CAAWnB,MAAM,GAAC,+BAAlB,EAAmDiB,WAAnD,CAAP;AACF;AAGD;;;AAEA,OAAO,IAAMG,eAAe;AAAA;AAAA,yBAAG,SAAlBA,eAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7B,iBAAMrC,SAAS,CAACO,WAAD,EAAcZ,gBAAd,CAAf;;AAD6B;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB0C,eAAkB;AAAA,CAAH,CAArB;;AAIP,SAAU1C,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8B2B,UAAAA,SAA9B,SAA8BA,SAA9B,EAAyCgB,QAAzC,SAAyCA,QAAzC;AAAA;AAEYf,UAAAA,GAFZ,GAEkBN,MAAM,GAAC,iCAAP,GAAyCC,OAAzC,GAAiD,aAAjD,GAA+DI,SAA/D,GAAyE,YAAzE,GAAsFgB,QAFxG;AAGMP,UAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AAHN;AAIqB,iBAAMtB,IAAI,CAACkB,KAAK,CAACK,GAAP,EAAYD,GAAZ,CAAV;;AAJrB;AAIYE,UAAAA,MAJZ;AAKUC,UAAAA,SALV,GAKsB,EALtB;AAMMA,UAAAA,SAAS,CAACC,IAAV,CAAeF,MAAM,CAACG,IAAtB;AANN;AAOM,iBAAM1B,GAAG,CAAC;AAAE2B,YAAAA,IAAI,EAAErB,WAAR;AAAqBsB,YAAAA,KAAK,EAAEJ;AAA5B,WAAD,CAAT;;AAPN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUIK,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;;;AAEA,OAAO,IAAMO,gBAAgB;AAAA;AAAA,yBAAG,SAAnBA,gBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC9B,iBAAMvC,SAAS,CAACS,YAAD,EAAeb,iBAAf,CAAf;;AAD8B;AAAA;AAAA;AAAA;AAAA;AAAA,KAAnB2C,gBAAmB;AAAA,CAAH,CAAtB;;AAIP,SAAU3C,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B0B,UAAAA,SAA/B,SAA+BA,SAA/B,EAA0CkB,KAA1C,SAA0CA,KAA1C;AAAA;AAEYjB,UAAAA,GAFZ,GAEkBN,MAAM,GAAC,mCAAP,GAA2CC,OAA3C,GAAmD,aAAnD,GAAiEI,SAAjE,GAA2E,SAA3E,GAAqFkB,KAFvG;AAAA;AAGqB,iBAAMvC,IAAI,CAACkB,KAAK,CAACK,GAAP,EAAYD,GAAZ,CAAV;;AAHrB;AAGYE,UAAAA,MAHZ;AAIUC,UAAAA,SAJV,GAIsB,EAJtB;AAKMA,UAAAA,SAAS,CAACC,IAAV,CAAeF,MAAM,CAACG,IAAtB;AALN;AAMM,iBAAM1B,GAAG,CAAC;AAAE2B,YAAAA,IAAI,EAAEnB,YAAR;AAAsBoB,YAAAA,KAAK,EAAEJ;AAA7B,WAAD,CAAT;;AANN;AAAA;AAAA;;AAAA;AAAA;AAAA;AASIK,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;;;AAEA,OAAO,IAAMS,qBAAqB;AAAA;AAAA,yBAAG,SAAxBA,qBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AACnC,iBAAMzC,SAAS,CAACW,iBAAD,EAAoBd,sBAApB,CAAf;;AADmC;AAAA;AAAA;AAAA;AAAA;AAAA,KAAxB4C,qBAAwB;AAAA,CAAH,CAA3B;;AAGP,SAAU5C,sBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmCqC,UAAAA,WAAnC,SAAmCA,WAAnC;AAAA;AAAA;AAEiB,iBAAMjC,IAAI,CAACyC,gBAAD,EAAmBR,WAAnB,CAAV;;AAFjB;AAEQT,UAAAA,MAFR;AAGMC,UAAAA,SAHN,GAGkB,EAHlB;AAIEA,UAAAA,SAAS,CAACC,IAAV,CAAeF,MAAM,CAACG,IAAtB;AAJF;AAKI,iBAAM1B,GAAG,CAAC;AAAE2B,YAAAA,IAAI,EAAEjB,iBAAR;AAA2BkB,YAAAA,KAAK,EAAEJ;AAAlC,WAAD,CAAT;;AALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQIK,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAASU,gBAAT,CAA0BR,WAA1B,EAAuC;AACpC,SAAOf,KAAK,CAACiB,IAAN,CAAWnB,MAAM,GAAC,6BAAlB,EAAiDiB,WAAjD,CAAP;AACF;AAGD;;;AAGA,OAAO,IAAMS,wBAAwB;AAAA;AAAA,yBAAG,SAA3BA,wBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AACtC,iBAAM3C,SAAS,CAACa,oBAAD,EAAuBf,yBAAvB,CAAf;;AADsC;AAAA;AAAA;AAAA;AAAA;AAAA,KAA3B6C,wBAA2B;AAAA,CAAH,CAA9B;;AAIP,SAAU7C,yBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsCoC,UAAAA,WAAtC,SAAsCA,WAAtC;AAAA;AAAA;AAEiB,iBAAMjC,IAAI,CAAC2C,mBAAD,EAAsBV,WAAtB,CAAV;;AAFjB;AAEQT,UAAAA,MAFR;AAGMC,UAAAA,SAHN,GAGkB,EAHlB;AAIEA,UAAAA,SAAS,CAACC,IAAV,CAAeF,MAAM,CAACG,IAAtB;AAJF;AAKI,iBAAM1B,GAAG,CAAC;AAAE2B,YAAAA,IAAI,EAAEf,oBAAR;AAA8BgB,YAAAA,KAAK,EAAEJ;AAArC,WAAD,CAAT;;AALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQIK,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAASY,mBAAT,CAA6BV,WAA7B,EAA0C;AACvC,SAAOf,KAAK,CAACiB,IAAN,CAAWnB,MAAM,GAAC,gCAAlB,EAAoDiB,WAApD,CAAP;AACF;AAGD;;;AAEA,OAAO,IAAMW,8BAA8B;AAAA;AAAA,yBAAG,SAAjCA,8BAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5C,iBAAM7C,SAAS,CAACe,0BAAD,EAA6BhB,+BAA7B,CAAf;;AAD4C;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjC8C,8BAAiC;AAAA,CAAH,CAApC;;AAGP,SAAU9C,+BAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4CuB,UAAAA,SAA5C,SAA4CA,SAA5C,EAAuDwB,QAAvD,SAAuDA,QAAvD;AAAA;AAEUvB,UAAAA,GAFV,GAEgBN,MAAM,GAAC,gDAAP,GAAwDC,OAAxD,GAAgE,aAAhE,GAA8EI,SAA9E,GAAwF,YAAxF,GAAqGwB,QAFrH;AAAA;AAGmB,iBAAM7C,IAAI,CAACkB,KAAK,CAACK,GAAP,EAAYD,GAAZ,CAAV;;AAHnB;AAGUE,UAAAA,MAHV;AAIQC,UAAAA,SAJR,GAIoB,EAJpB;AAKIA,UAAAA,SAAS,CAACC,IAAV,CAAeF,MAAM,CAACG,IAAtB;AALJ;AAMM,iBAAM1B,GAAG,CAAC;AAAE2B,YAAAA,IAAI,EAAEb,0BAAR;AAAoCc,YAAAA,KAAK,EAAEJ;AAA3C,WAAD,CAAT;;AANN;AAAA;AAAA;;AAAA;AAAA;AAAA;AASMK,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_CUSTOMERLEADS, SET_CUSTOMERLEADS, GET_JOBCONFIRMREQUEST, SET_JOBCONFIRMREQUEST, GET_PROJOBS , SET_PROJOBS,GET_LEADINFO, SET_LEADINFO, GET_SAVEQUOTATION, SET_SAVEQUOTATION, GET_RUNCUSTOMERLEADS, SET_RUNCUSTOMERLEADS, GET_RUNDETAILCUSTOMERLEADS, SET_RUNDETAILCUSTOMERLEADS } from '../actions';\nimport {apiUrl,appName} from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\n\n/* get customer leads details for users*/\n\nexport const watchGetCustomerLeads = function* () {\n  yield takeEvery(GET_CUSTOMERLEADS, workerGetCustomerLeads);\n}\n\nfunction* workerGetCustomerLeads( { UserToken } ) {\n  try {\n    const uri = apiUrl+'customerleads/procustomerleads?app_name='+appName+'&UserToken='+UserToken;\n    const result = yield call(Axios.get, uri);\n  var resultArr = [];\n  resultArr.push(result.data);\n    yield put({ type: SET_CUSTOMERLEADS, value: resultArr });\n  } \n  catch {\n    console.log('Get Page Failed');\n  }\n}\n\n\n/* change job status ( confirm or Rejected by pro users) */\n\n\nexport const watchGetJobconfirmRequest = function* () {\n  yield takeEvery(GET_JOBCONFIRMREQUEST, workerGetJobconfirmRequest);\n}\nfunction* workerGetJobconfirmRequest({ formPayload }) {\n  try {\n  const result = yield call(getJobconfirmRequest, formPayload);\n  var resultArr = [];\n  resultArr.push(result.data);\n    yield put({ type: SET_JOBCONFIRMREQUEST, value: resultArr });\n  } \n  catch {\n    console.log('get data failed');\n  }\n} \n\n\nfunction getJobconfirmRequest(formPayload) {\n   return Axios.post(apiUrl+'customerleads/confirm_request', formPayload);\n} \n\n\n/* get All pro jobs*/\n\nexport const watchGetProJobs = function* () {\n  yield takeEvery(GET_PROJOBS, workerGetProJobs);\n}\n\nfunction* workerGetProJobs( { UserToken, sorttype } ) {\n  try {\n      const uri = apiUrl+'customerleads/projobs?app_name='+appName+'&UserToken='+UserToken+'&sorttype='+sorttype;\n      console.log(uri)\n      const result = yield call(Axios.get, uri);\n      var resultArr = [];\n      resultArr.push(result.data);\n      yield put({ type: SET_PROJOBS, value: resultArr });\n  } \n  catch {\n    console.log('Get Page Failed');\n  }\n}\n\n\n/* get Lead jobs*/\n\nexport const watchGetLeadJobs = function* () {\n  yield takeEvery(GET_LEADINFO, workerGetLeadJobs);\n}\n\nfunction* workerGetLeadJobs( { UserToken, jobID} ) {\n  try {\n      const uri = apiUrl+'customerleads/lead_info?app_name='+appName+'&UserToken='+UserToken+'&jobID='+jobID;\n      const result = yield call(Axios.get, uri);\n      var resultArr = [];\n      resultArr.push(result.data);\n      yield put({ type: SET_LEADINFO, value: resultArr });\n  } \n  catch {\n    console.log('Get Page Failed');\n  }\n}\n\n/* save quotation */\n\nexport const watchGetSaveQuotation = function* () {\n  yield takeEvery(GET_SAVEQUOTATION, workerGetSaveQuotation);\n}\nfunction* workerGetSaveQuotation({ formPayload }) {\n  try {\n  const result = yield call(getSaveQuotation, formPayload);\n  var resultArr = [];\n  resultArr.push(result.data);\n    yield put({ type: SET_SAVEQUOTATION, value: resultArr });\n  } \n  catch {\n    console.log('get data failed');\n  }\n} \n\n\nfunction getSaveQuotation(formPayload) {\n   return Axios.post(apiUrl+'customerleads/savequotation', formPayload);\n} \n\n\n/* genrun customerleads */\n\n\nexport const watchGetRunCustomerleads = function* () {\n  yield takeEvery(GET_RUNCUSTOMERLEADS, workerGetRunCustomerleads);\n}\n\nfunction* workerGetRunCustomerleads({ formPayload }) {\n  try {\n  const result = yield call(getRunCustomerleads, formPayload);\n  var resultArr = [];\n  resultArr.push(result.data);\n    yield put({ type: SET_RUNCUSTOMERLEADS, value: resultArr });\n  } \n  catch {\n    console.log('get data failed');\n  }\n} \n\n\nfunction getRunCustomerleads(formPayload) {\n   return Axios.post(apiUrl+'customerleads/runcustomerleads', formPayload);\n} \n\n\n/* genrun customerleads */\n\nexport const watchGetRunDetailCustomerleads = function* () {\n  yield takeEvery(GET_RUNDETAILCUSTOMERLEADS, workerGetRunDetailCustomerleads);\n}\nfunction* workerGetRunDetailCustomerleads({ UserToken, trans_id }) {\n    try {\n    const uri = apiUrl+'customerleads/runcustomerleadDetails?app_name='+appName+'&UserToken='+UserToken+'&trans_id='+trans_id;\n    const result = yield call(Axios.get, uri);\n    var resultArr = [];\n    resultArr.push(result.data);\n      yield put({ type: SET_RUNDETAILCUSTOMERLEADS, value: resultArr });\n    } \n    catch {\n      console.log('get data failed');\n    }\n} \n"]},"metadata":{},"sourceType":"module"}