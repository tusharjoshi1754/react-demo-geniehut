{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\text video\\\\geniehut-Geni-App-Code\\\\geniehut-Geni-App-Code\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workerGetAcceptCounter);\n\n/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_ACCEPTCOUNTER, SET_ACCEPTCOUNTER } from '../actions';\nimport { apiUrl } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\nexport var watchGetAcceptCounter =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function watchGetAcceptCounter() {\n  return _regeneratorRuntime.wrap(function watchGetAcceptCounter$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery(GET_ACCEPTCOUNTER, workerGetAcceptCounter);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, watchGetAcceptCounter);\n});\n\nfunction workerGetAcceptCounter(_ref) {\n  var formPayload, result, resultArr;\n  return _regeneratorRuntime.wrap(function workerGetAcceptCounter$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          formPayload = _ref.formPayload;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(getAcceptCounter, formPayload);\n\n        case 4:\n          result = _context2.sent;\n          resultArr = [];\n          resultArr.push(result.data);\n          _context2.next = 9;\n          return put({\n            type: SET_ACCEPTCOUNTER,\n            value: resultArr\n          });\n\n        case 9:\n          _context2.next = 14;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log('login failed');\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked, null, [[1, 11]]);\n}\n\nfunction getAcceptCounter(formPayload) {\n  var qs = require('qs');\n\n  return Axios.post(apiUrl + 'genrun/jobaccept', qs.stringify(formPayload));\n}","map":{"version":3,"sources":["D:/text video/geniehut-Geni-App-Code/geniehut-Geni-App-Code/front-end/src/sagas/acceptcounter.js"],"names":["workerGetAcceptCounter","takeEvery","call","put","GET_ACCEPTCOUNTER","SET_ACCEPTCOUNTER","apiUrl","Axios","cookie","watchGetAcceptCounter","formPayload","getAcceptCounter","result","resultArr","push","data","type","value","console","log","qs","require","post","stringify"],"mappings":";;;;yBAWUA,sB;;AAXV;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAoD,YAApD;AACA,SAAQC,MAAR,QAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,OAAO,IAAMC,qBAAqB;AAAA;AAAA,yBAAG,SAAxBA,qBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AACnC,iBAAMR,SAAS,CAACG,iBAAD,EAAoBJ,sBAApB,CAAf;;AADmC;AAAA;AAAA;AAAA;AAAA;AAAA,KAAxBS,qBAAwB;AAAA,CAAH,CAA3B;;AAIP,SAAUT,sBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmCU,UAAAA,WAAnC,QAAmCA,WAAnC;AAAA;AAAA;AAEmB,iBAAMR,IAAI,CAACS,gBAAD,EAAmBD,WAAnB,CAAV;;AAFnB;AAEUE,UAAAA,MAFV;AAGOC,UAAAA,SAHP,GAGmB,EAHnB;AAIGA,UAAAA,SAAS,CAACC,IAAV,CAAeF,MAAM,CAACG,IAAtB;AAJH;AAKI,iBAAMZ,GAAG,CAAC;AAAEa,YAAAA,IAAI,EAAEX,iBAAR;AAA2BY,YAAAA,KAAK,EAAEJ;AAAlC,WAAD,CAAT;;AALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQIK,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,SAASR,gBAAT,CAA0BD,WAA1B,EAAuC;AACnC,MAAIU,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,SAAOd,KAAK,CAACe,IAAN,CAAWhB,MAAM,GAAC,kBAAlB,EAAsCc,EAAE,CAACG,SAAH,CAAab,WAAb,CAAtC,CAAP;AACH","sourcesContent":["/* eslint-disable */\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { GET_ACCEPTCOUNTER, SET_ACCEPTCOUNTER} from '../actions';\nimport {apiUrl } from \"../components/Config/Config\";\nimport Axios from 'axios';\nimport cookie from 'react-cookies';\n\nexport const watchGetAcceptCounter = function* () {\n  yield takeEvery(GET_ACCEPTCOUNTER, workerGetAcceptCounter);\n}\n\nfunction* workerGetAcceptCounter({ formPayload }) {\n  try {      \n    const result = yield call(getAcceptCounter, formPayload);\n\t  var resultArr = [];\n\t  resultArr.push(result.data);\n    yield put({ type: SET_ACCEPTCOUNTER, value: resultArr });\n  } \n  catch {\n    console.log('login failed');\n  }\n}\nfunction getAcceptCounter(formPayload) {\n    var qs = require('qs');\n    return Axios.post(apiUrl+'genrun/jobaccept', qs.stringify(formPayload));\n}"]},"metadata":{},"sourceType":"module"}