'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _keys = require('/home/marcelka/projects/validation/node_modules/next/node_modules/babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _extends2 = require('/home/marcelka/projects/validation/node_modules/next/node_modules/babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _toConsumableArray2 = require('/home/marcelka/projects/validation/node_modules/next/node_modules/babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _defineProperty2 = require('/home/marcelka/projects/validation/node_modules/next/node_modules/babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _getPrototypeOf = require('/home/marcelka/projects/validation/node_modules/next/node_modules/babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('/home/marcelka/projects/validation/node_modules/next/node_modules/babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('/home/marcelka/projects/validation/node_modules/next/node_modules/babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('/home/marcelka/projects/validation/node_modules/next/node_modules/babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('/home/marcelka/projects/validation/node_modules/next/node_modules/babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('/home/marcelka/projects/validation/node_modules/react/react.js');

var _react2 = _interopRequireDefault(_react);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _immutabilityHelper = require('immutability-helper');

var _immutabilityHelper2 = _interopRequireDefault(_immutabilityHelper);

var _lib = require('../../lib');

var _style = require('./style3');

var _style2 = _interopRequireDefault(_style);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var add = function add(a, b) {
  return a + b;
};
var subtract = function subtract(a, b) {
  return a - b;
};
var multiply = function multiply(a, b) {
  return a * b;
};

var OPERATIONS = [{ id: 'add', symbol: '+', fn: add, desc: 'Addition' }, { id: 'multiply', symbol: '*', fn: multiply, desc: 'Multiplication' }, { id: 'subtract', symbol: '-', fn: subtract, desc: 'Subtraction' }];

_immutabilityHelper2.default.extend('$delete', function (key, object) {
  var o = (0, _extends3.default)({}, object);
  delete o[key];
  return o;
});

var App = function (_React$Component) {
  (0, _inherits3.default)(App, _React$Component);

  function App() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, App);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = App.__proto__ || (0, _getPrototypeOf2.default)(App)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      problems: {
        id1: { number1: '', number2: '', result: '' }
      },
      operation: OPERATIONS[0],
      lastId: 1
    }, _this.numberChange = function (id, number, value) {
      _this.setState((0, _immutabilityHelper2.default)(_this.state, { problems: (0, _defineProperty3.default)({}, id, (0, _defineProperty3.default)({}, number, { $set: value })) }));
    }, _this.operationChange = function (value) {
      var operation = OPERATIONS.filter(function (o) {
        return o.id === value;
      })[0];
      _this.setState({ operation: operation });
    }, _this.addProblem = function () {
      var nextId = _this.state.lastId + 1;
      _this.setState((0, _immutabilityHelper2.default)(_this.state, {
        problems: (0, _defineProperty3.default)({}, 'id' + nextId, { $set: { number1: '', number2: '', result: '' } }),
        lastId: { $set: nextId }
      }));
    }, _this.removeProblem = function (id) {
      _this.setState((0, _immutabilityHelper2.default)(_this.state, { problems: { $delete: id } }));
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(App, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(Math, {
        problems: this.state.problems,
        operation: this.state.operation,
        operations: OPERATIONS,
        numberChange: this.numberChange,
        operationChange: this.operationChange,
        addProblem: this.addProblem,
        removeProblem: this.removeProblem,
        onValid: function onValid() {
          return alert('Everything correct!');
        } // eslint-disable-line no-alert
        , onInvalid: function onInvalid() {
          return alert('Something is wrong.');
        } // eslint-disable-line no-alert
      });
    }
  }]);
  return App;
}(_react2.default.Component);

var Math = function (_React$Component2) {
  (0, _inherits3.default)(Math, _React$Component2);

  function Math() {
    (0, _classCallCheck3.default)(this, Math);
    return (0, _possibleConstructorReturn3.default)(this, (Math.__proto__ || (0, _getPrototypeOf2.default)(Math)).apply(this, arguments));
  }

  (0, _createClass3.default)(Math, [{
    key: 'renderSingle',
    value: function renderSingle(id) {
      var _props = this.props,
          problems = _props.problems,
          $validation = _props.$validation,
          operation = _props.operation,
          numberChange = _props.numberChange,
          removeProblem = _props.removeProblem,
          $field = _props.$field;
      var _problems$id = problems[id],
          number1 = _problems$id.number1,
          number2 = _problems$id.number2,
          result = _problems$id.result;
      var _$validation$id = $validation[id],
          isValid = _$validation$id.isValid,
          reason = _$validation$id.error.reason,
          show = _$validation$id.show;


      var validationMessage = {
        true: 'Correct!',
        null: 'Computation in progress...',
        false: reason
      }[isValid];
      var errorStyle = {
        true: { color: '#24a224' },
        null: {},
        false: { color: '#d22424' }
      }[isValid];

      return _react2.default.createElement(
        'div',
        { key: id },
        _react2.default.createElement('input', (0, _extends3.default)({
          type: 'text',
          value: number1
        }, $field(id + '-number1', function (e) {
          return numberChange(id, 'number1', e.target.value);
        }))),
        operation.symbol,
        _react2.default.createElement('input', (0, _extends3.default)({
          type: 'text',
          value: number2
        }, $field(id + '-number2', function (e) {
          return numberChange(id, 'number2', e.target.value);
        }))),
        '=',
        _react2.default.createElement('input', (0, _extends3.default)({
          type: 'text',
          value: result
        }, $field(id + '-result', function (e) {
          return numberChange(id, 'result', e.target.value);
        }))),
        _react2.default.createElement(
          'button',
          { type: 'button', onClick: function onClick(e) {
              return removeProblem(id);
            } },
          'Remove'
        ),
        show && _react2.default.createElement(
          'span',
          { className: 'error', style: errorStyle },
          validationMessage
        )
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var _props2 = this.props,
          problems = _props2.problems,
          operationChange = _props2.operationChange,
          operation = _props2.operation,
          operations = _props2.operations,
          addProblem = _props2.addProblem;

      var problemIds = (0, _keys2.default)(problems);

      return _react2.default.createElement(
        'form',
        {
          className: _style2.default,
          onSubmit: function onSubmit(e) {
            e.preventDefault();
            var _props3 = _this3.props,
                onValid = _props3.onValid,
                onInvalid = _props3.onInvalid;

            _this3.props.$submit(onValid, onInvalid);
          }
        },
        _react2.default.createElement(
          'div',
          null,
          _react2.default.createElement(
            'label',
            null,
            'Select operation'
          ),
          _react2.default.createElement(
            'select',
            {
              value: operation.id,
              onChange: function onChange(e) {
                return operationChange(e.target.value);
              }
            },
            operations.map(function (o) {
              return _react2.default.createElement(
                'option',
                { key: o.id, value: o.id },
                o.desc
              );
            })
          )
        ),
        problemIds.map(function (id) {
          return _this3.renderSingle(id);
        }),
        _react2.default.createElement(
          'div',
          { className: 'buttons' },
          _react2.default.createElement(
            'button',
            { type: 'button', onClick: function onClick(e) {
                return addProblem();
              } },
            ' Add another '
          ),
          _react2.default.createElement(
            'button',
            { type: 'submit' },
            ' Check '
          )
        )
      );
    }
  }]);
  return Math;
}(_react2.default.Component);

function isNumber(value) {
  return value === '' || isNaN(value) ? 'All fields must be numbers!' : null;
}

function isResultCorrect(number1, number2, result, operation) {
  var i = function i(n) {
    return parseInt(n, 10);
  };
  return _bluebird2.default.delay(3000).then(function () {
    return operation(i(number1), i(number2)) === i(result) ? null : 'Wrong!';
  });
}

function validationConfig(props) {
  var problems = props.problems,
      operation = props.operation;

  var validations = {};
  var fields = [];

  for (var id in problems) {
    var _problems$id2 = problems[id],
        number1 = _problems$id2.number1,
        number2 = _problems$id2.number2,
        result = _problems$id2.result;

    var _fields = [id + '-number1', id + '-number2', id + '-result'];
    validations[id] = {
      rules: [[isNumber, number1], [isNumber, number2], [isNumber, result], [isResultCorrect, number1, number2, result, operation.fn]],
      fields: _fields
    };
    fields = [].concat((0, _toConsumableArray3.default)(fields), _fields);
  }

  return { fields: fields, validations: validations };
}

Math = (0, _lib.validated)(validationConfig)(Math);

exports.default = function () {
  return _react2.default.createElement(App, null);
};
    if (module.hot) {
      module.hot.accept()

      var Component = module.exports.default || module.exports
      Component.__route = "/example/3"

      if (module.hot.status() !== 'idle') {
        var components = next.router.components
        for (var r in components) {
          if (!components.hasOwnProperty(r)) continue

          if (components[r].Component.__route === "/example/3") {
            next.router.update(r, Component)
          }
        }
      }
    }
  