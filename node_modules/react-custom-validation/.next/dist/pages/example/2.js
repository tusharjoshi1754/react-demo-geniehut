'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('/home/marcelka/projects/validation/node_modules/next/node_modules/babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _inherits2 = require('/home/marcelka/projects/validation/node_modules/next/node_modules/babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _getPrototypeOf = require('/home/marcelka/projects/validation/node_modules/next/node_modules/babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('/home/marcelka/projects/validation/node_modules/next/node_modules/babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('/home/marcelka/projects/validation/node_modules/next/node_modules/babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('/home/marcelka/projects/validation/node_modules/next/node_modules/babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _react = require('/home/marcelka/projects/validation/node_modules/react/react.js');

var _react2 = _interopRequireDefault(_react);

var _lib = require('../../lib');

var _style = require('./style2');

var _style2 = _interopRequireDefault(_style);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var App = function (_React$Component) {
  (0, _inherits3.default)(App, _React$Component);

  function App() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, App);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = App.__proto__ || (0, _getPrototypeOf2.default)(App)).call.apply(_ref, [this].concat(args))), _this), _this.state = { isOther: false, color: null }, _this.onChange = function (data) {
      _this.setState(data);
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(App, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(Form, {
        color: this.state.color,
        isOther: this.state.isOther,
        onChange: this.onChange,
        onValid: function onValid() {
          return alert('Good choice!');
        } // eslint-disable-line no-alert
        , onInvalid: function onInvalid() {
          return alert('Pick a color!');
        } // eslint-disable-line no-alert
      });
    }
  }]);
  return App;
}(_react2.default.Component);

var COLORS = ['White', 'Yellow', 'Fuchsia', 'Red', 'Silver', 'Gray', 'Olive', 'Purple', 'Maroon', 'Aqua', 'Lime', 'Teal', 'Green', 'Blue', 'Navy', 'Black'];

var OPTIONS = ['White', 'Good', 'Yellow', 'Big', 'Red', 'Blue', 'Dense', 'Pretty'];

var isColor = function isColor(value) {
  return COLORS.indexOf(value) >= 0 ? null : '"' + value + '" is not a color. Hint: ' + COLORS.join(', ');
};

function validationConfig(props) {
  var color = props.color;


  return {
    fields: ['color'],
    validations: {
      color: [[isColor, color]]
    }
  };
}

var Form = function (_React$Component2) {
  (0, _inherits3.default)(Form, _React$Component2);

  function Form() {
    (0, _classCallCheck3.default)(this, Form);
    return (0, _possibleConstructorReturn3.default)(this, (Form.__proto__ || (0, _getPrototypeOf2.default)(Form)).apply(this, arguments));
  }

  (0, _createClass3.default)(Form, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          color = _props.color,
          isOther = _props.isOther,
          _onChange = _props.onChange,
          onValid = _props.onValid,
          onInvalid = _props.onInvalid,
          $fieldEvent = _props.$fieldEvent,
          $field = _props.$field,
          $validation = _props.$validation;

      return _react2.default.createElement(
        'form',
        { className: _style2.default },
        _react2.default.createElement(
          'h1',
          null,
          'What is your favorite color?'
        ),
        _react2.default.createElement(
          'div',
          null,
          OPTIONS.map(function (o) {
            return _react2.default.createElement(
              'label',
              { key: o },
              _react2.default.createElement('input', (0, _extends3.default)({
                type: 'radio'
              }, $field('color', function (e) {
                return _onChange({ color: o, isOther: false });
              }, null, false), {
                checked: !isOther && color === o
              })),
              o
            );
          }),
          _react2.default.createElement(
            'label',
            null,
            _react2.default.createElement('input', {
              type: 'radio',
              onChange: function onChange() {
                _onChange({ color: '', isOther: true });
                $fieldEvent('reset', 'color');
              },
              checked: isOther
            }),
            'Other'
          ),
          isOther && _react2.default.createElement('input', (0, _extends3.default)({ type: 'text', value: color
          }, $field('color', function (e) {
            return _onChange({ color: e.target.value });
          })))
        ),
        $validation.color.show && _react2.default.createElement(
          'div',
          { className: 'error' },
          $validation.color.error.reason
        ),
        _react2.default.createElement(
          'div',
          null,
          _react2.default.createElement(
            'button',
            { onClick: function onClick(e) {
                e.preventDefault();
                if ((0, _lib.isFormValid)($validation)) {
                  onValid();
                } else {
                  onInvalid();
                }
              } },
            'Submit'
          )
        )
      );
    }
  }]);
  return Form;
}(_react2.default.Component);

Form = (0, _lib.validated)(validationConfig)(Form);

exports.default = function () {
  return _react2.default.createElement(App, null);
};
    if (module.hot) {
      module.hot.accept()

      var Component = module.exports.default || module.exports
      Component.__route = "/example/2"

      if (module.hot.status() !== 'idle') {
        var components = next.router.components
        for (var r in components) {
          if (!components.hasOwnProperty(r)) continue

          if (components[r].Component.__route === "/example/2") {
            next.router.update(r, Component)
          }
        }
      }
    }
  